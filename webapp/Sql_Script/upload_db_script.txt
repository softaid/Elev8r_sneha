
UPDATE `db_elev8r_local`.`referencetype` SET `typecode` = 'ProjStgType', `typename` = 'Project Stage Type', `description` = 'Project Stage Type' WHERE (`typecode` = 'ProjActType');
DELETE FROM `db_elev8r_local`.`referencetype` WHERE (`typecode` = 'ProjType');
INSERT INTO `db_elev8r_local`.`referencetype` (`typecode`, `typename`, `description`, `master`, `createddate`, `modifieddate`, `companyid`) VALUES ('RefType', 'Reference Type', 'Reference Type', 'ReferenceMaster', '2023-09-19 00:00:00', '2023-09-19 00:00:00', '27');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`, `companyid`) VALUES ('387', 'RefType', 'Stage', '2023-09-19 02:49:00', '2023-09-19 02:49:00', '1', '1', '27');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`, `companyid`) VALUES ('388', 'RefType', 'Activity', '2023-09-19 02:49:00', '2023-09-19 02:49:00', '1', '1', '27');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('400', 'RefType', 'Attribute', '2023-09-19 02:49:00', '2023-09-19 02:49:00', '1', '1');


ALTER TABLE `db_elev8r_local`.`reference` 
ADD COLUMN `isrelatedtopayment` TINYINT(4) NULL AFTER `modelid`,
ADD COLUMN `iscustomersignoffrequired` TINYINT(4) NULL AFTER `isrelatedtopayment`,
ADD COLUMN `notifyinternaluser` TINYINT(4) NULL AFTER `iscustomersignoffrequired`,
CHANGE COLUMN `extendeddescriptioin` `dependency` VARCHAR(200) NULL DEFAULT NULL ,
CHANGE COLUMN `grouptitle` `statusid` INT(11) NULL DEFAULT NULL ;

ALTER TABLE `db_elev8r_local`.`reference` 
ADD COLUMN `stgtypeid` INT(11) NULL AFTER `iscustomersignoffrequired`;


DROP procedure IF EXISTS `db_elev8r_local`.`spc_reference_save`;
;

DELIMITER $$
CREATE PROCEDURE db_elev8r_local.`spc_reference_save`(
 IN p_id INT(11),
 IN p_typecode VARCHAR(100),
 IN p_parentid INT(11),
 IN p_type VARCHAR(20),
 IN p_stgtypeid INT(11),
 IN p_description VARCHAR(200),
 IN p_active TINYINT(4),
 IN p_dependency VARCHAR(200),
 IN p_defaultvalue TINYINT(4),
 IN p_projectper DECIMAL(9,3),
 IN p_stageper DECIMAL(9,3),
 IN p_departmentid INT(11),
 IN p_sequenceno INT(11),
 IN p_modelid varchar(200),
 IN p_isrelatedtopayment TINYINT(4),
 IN p_iscustomersignoffrequired TINYINT(4), 
 IN p_notifyinternaluser TINYINT(4),
 IN p_attributetypes VARCHAR(200),
 IN p_companyid INT(11),
 IN p_userid INT(11),
 OUT out_id INT )
BEGIN
	SET @action = null;
    SET @prjCnt = null;
    
    SELECT count(*) INTO @prjCnt FROM project WHERE companyid = p_companyid;
	IF(p_defaultvalue = 1) THEN
		UPDATE reference SET defaultvalue = 0 WHERE typecode = p_typecode;
    END IF;
	IF(NULLIF(p_id, '0') IS NULL) THEN
		INSERT INTO reference(typecode, parentid, type, stgtypeid, description, active, dependency,defaultvalue,projectper,
        stageper, createddate, modifieddate, departmentid, sequenceno, modelid, isrelatedtopayment, iscustomersignoffrequired,
        notifyinternaluser,attributetypes,companyid)
		VALUES (p_typecode, p_parentid, p_type, p_stgtypeid, p_description, p_active,p_dependency,p_defaultvalue,p_projectper,
        p_stageper, now(), now(),p_departmentid, p_sequenceno, p_modelid, p_isrelatedtopayment, p_iscustomersignoffrequired,
        p_notifyinternaluser, p_attributetypes, p_companyid);
		
		SET @action = 'INSERT';
        
        IF(p_typecode = 'ProMilestones') THEN
			IF(@prjCnt > 0) THEN
				SET @row_number = 0;
				
				DROP TABLE IF EXISTS tempproject;
				CREATE TEMPORARY TABLE tempproject
				
				SELECT (@row_number:=@row_number + 1) AS num, id as projectid from (
					SELECT 
						id
					FROM project
				) 
				as tblproject;

				BEGIN
					DECLARE n INT DEFAULT 0;
					DECLARE i INT DEFAULT 0; 
					SELECT COUNT(*) FROM tempproject INTO n;

					WHILE i < n DO
						SET @projectid = NULL;
						SELECT projectid INTO @projectid FROM tempproject WHERE num = i + 1;

						SET @projectdetailid = null;
						 CALL spc_projectdetail_save( 	
							NULL,
							@projectid,
							(SELECT id FROM reference WHERE description = p_description LIMIT 1),
							p_description,
							p_parentid,
							null,
							null,
							NULL,
							NULL,
							0,
							Null,
							NULL,
							NULL,
							NULL,
							NULL,
							NULL,
							p_departmentid,
							0,
							NULL,
							1,
							0,
							NULL,
							p_companyid,
							p_userid,
							@projectdetailid
						 );

						SET i = i + 1;
					END WHILE;
				END;
			END IF;
        END IF;
	
	ELSE
		UPDATE reference
		SET typecode = p_typecode, 
			parentid = p_parentid, 
            type = p_type, 
            stgtypeid = p_stgtypeid,
			description = p_description,
            active = p_active,
            dependency = p_dependency,
            defaultvalue = p_defaultvalue,
            projectper = p_projectper,
            stageper = p_stageper,
            modifieddate = now(),
            departmentid = p_departmentid,
            sequenceno = p_sequenceno,
            modelid = p_modelid,
            isrelatedtopayment = p_isrelatedtopayment,
            iscustomersignoffrequired = p_iscustomersignoffrequired,
            notifyinternaluser = p_notifyinternaluser,
            attributetypes = p_attributetypes,
			companyid = p_companyid,
			id = LAST_INSERT_ID(id)
			
		WHERE id = p_id
		AND companyid = p_companyid;
		
		SET @action = 'UPDATE';
        
        IF(@prjCnt > 0) THEN
			SET @master = null;
			SELECT master INTO @master FROM referencetype WHERE typecode = p_typecode;
			
			IF(@master = 'ProjectMaster') THEN
				UPDATE project_detail
				SET stagename = p_description
				-- stagecompletionpercentage = p_stageper,
				-- projectweightage = p_projectper
				WHERE stageid = p_id;
			END IF;
		END IF;
	END IF;
	
	SELECT LAST_INSERT_ID() INTO OUT_ID;
	
	-- record log
   CALL spc_commonlog_save(p_companyid, 'reference', out_id, @action, p_userid);

END$$

DELIMITER ;
;


DROP procedure IF EXISTS `db_elev8r_local`.`spc_reference_selectbytypecode`;
;

DELIMITER $$
CREATE PROCEDURE db_elev8r_local.`spc_reference_selectbytypecode`(
	IN p_typecode varchar(20)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            parentid, 
            type, 
            stgtypeid,
            description,
            active,
            dependency,
            departmentid,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno,
            isrelatedtopayment,
            iscustomersignoffrequired,
			notifyinternaluser
		FROM
			`reference`
		WHERE
			typecode = p_typecode
            order by defaultvalue DESC;
END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_elev8r_local`.`spc_reference_bytypecodeandmodelid`;
;

DELIMITER $$
CREATE PROCEDURE db_elev8r_local.`spc_reference_bytypecodeandmodelid`(
	IN p_modelid INT(11)
   -- IN p_typecode VARCHAR(100)
)
BEGIN
    
    SET @@sql_mode = '';
    SET @modelid = null;
     SET @finalmodelid = null;
    
    select id into @modelid from reference where typecode="LftMdl" limit 1;
    select  IF (p_modelid <> 0,p_modelid,@modelid) into @finalmodelid;
    
	SELECT 
		id,
		typecode,
		parentid, 
		type, 
        stgtypeid,
		description,
		active,
		dependency,
		departmentid,
		defaultvalue,
		displayorder,
		projectper,
		stageper,
		sequenceno,
		isrelatedtopayment,
		iscustomersignoffrequired,
		notifyinternaluser		
	FROM
		`reference`
	WHERE
		-- typecode = p_typecode AND 
	find_in_set( @finalmodelid,modelid) group by typecode;
	   -- modelid = p_modelid;
		   
		
    SET @carheight = null;
    SET @pitdepth = null;
    SET @overhead = null;
	SET @openingheight = null;

    
	SET @model = null;
    SELECT description INTO @model FROM reference WHERE id =  @finalmodelid;
    
    IF (@model = "RM Series") THEN
		SELECT 2100, 1400, 4200,2000  INTO @carheight, @pitdepth, @overhead,@openingheight;
    ELSEIF(@model = "VL Series") THEN
		SELECT 2100, 1400, 4200,2000  INTO @carheight, @pitdepth, @overhead,@openingheight;
    ELSEIF(@model = "SL Series") THEN
		SELECT 2000, 150, 3000,2000  INTO @carheight, @pitdepth, @overhead,@openingheight;
    END IF;
    
    SELECT 		
		@carheight as carheight,
		@pitdepth as pitdepth,
		@overhead as overhead,
        @finalmodelid as modelid;

	
END$$

DELIMITER ;
;


DROP procedure IF EXISTS `db_elev8r_local`.`spc_reference_select`;
;

DELIMITER $$
CREATE PROCEDURE db_elev8r_local.`spc_reference_select`(
	IN p_id varchar(30)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            IFNULL(parentid,0)as parentid,
            type, 
            stgtypeid,
            description,
            active,
            dependency,
            departmentid,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno,
            isrelatedtopayment,
            iscustomersignoffrequired,
			notifyinternaluser
		FROM
			`reference`
		WHERE
			id = p_id;
END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_elev8r_local`.`spc_reference_selectbygroup`;
;

DELIMITER $$
CREATE PROCEDURE db_elev8r_local.`spc_reference_selectbygroup`(
	IN typecode varchar(20)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            parentid, 
            type, 
            stgtypeid,
            description,
            active,
            dependency,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno,
            isrelatedtopayment,
            iscustomersignoffrequired,
			notifyinternaluser
		FROM
			reference
		WHERE
			parenttypecode = p_typecode and
            deleted <> 1
		ORDER BY defaultvalue DESC;
END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_elev8r_local`.`spc_reference_selectbytypecodedepartment`;
;

DELIMITER $$
CREATE PROCEDURE db_elev8r_local.`spc_reference_selectbytypecodedepartment`(
	IN p_typecode varchar(20),
    IN p_departmentid  INT(11)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            parentid, 
            type, 
            stgtypeid,
            description,
            active,
            dependency,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno,
            isrelatedtopayment,
            iscustomersignoffrequired,
			notifyinternaluser
		FROM
			`reference`
		WHERE
			typecode = p_typecode AND departmentid=p_departmentid
            order by defaultvalue DESC;
END$$

DELIMITER ;
;


USE `db_elev8r_local`;
DROP procedure IF EXISTS `spc_reference_selectbytypecodeandparenttype`;

DELIMITER $$
USE `db_elev8r_local`$$
CREATE PROCEDURE `spc_reference_selectbytypecodeandparenttype`(
	IN p_typecode varchar(20),
    IN p_type VARCHAR(20)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            parentid, 
            type, 
            stgtypeid,
            description,
            active,
            dependency,
            departmentid,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno,
            isrelatedtopayment,
            iscustomersignoffrequired,
			notifyinternaluser
		FROM
			`reference`
		WHERE
			typecode = p_typecode
            AND type = p_type
            order by defaultvalue DESC;
END$$

DELIMITER ;

INSERT INTO `db_elev8r_local`.`referencetype` (`typecode`, `typename`, `description`, `master`, `createddate`, `modifieddate`, `companyid`) VALUES ('InputAttribute', 'InputAttribute', 'Input type attributes', 'InputAttribute', '2023-09-20 04:31:00', '2023-09-20 04:31:00', '27');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('391', 'InputAttribute', 'Boolean', '2023-09-20 12:42:25', '2023-09-20 12:42:25', '1', '1');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('392', 'InputAttribute', 'Date', '2023-09-20 12:42:25', '2023-09-20 12:42:25', '1', '1');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('393', 'InputAttribute', 'Remark', '2023-09-20 12:42:25', '2023-09-20 12:42:25', '1', '1');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('394', 'InputAttribute', 'Number', '2023-09-20 12:42:25', '2023-09-20 12:42:25', '1', '1');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('395', 'InputAttribute', 'Amount', '2023-09-20 12:42:25', '2023-09-20 12:42:25', '1', '1');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('396', 'InputAttribute', 'Attachment', '2023-09-20 12:42:25', '2023-09-20 12:42:25', '1', '1');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('397', 'InputAttribute', 'Tristate', '2023-09-20 12:42:25', '2023-09-20 12:42:25', '1', '1');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('398', 'InputAttribute', 'Signature', '2023-09-20 12:42:25', '2023-09-20 12:42:25', '1', '1');
INSERT INTO `db_elev8r_local`.`reference` (`id`, `typecode`, `description`, `createddate`, `modifieddate`, `active`, `defaultvalue`) VALUES ('399', 'InputAttribute', 'Header', '2023-09-20 12:42:25', '2023-09-20 12:42:25', '1', '1');


ALTER TABLE `db_elev8r_local`.`reference` 
CHANGE COLUMN `parenttypecode` `type` VARCHAR(20) NULL DEFAULT NULL ;

DROP procedure IF EXISTS `db_elev8r_local`.`spc_reference_selectbytypecodeandparenttype`;
;

DELIMITER $$
USE `db_elev8r_local`$$
CREATE DEFINER=`sa`@`%` PROCEDURE `spc_reference_selectbytypecodeandparenttype`(
	IN p_typecode varchar(20),
    IN p_parenttype VARCHAR(20)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            parentid, 
            parenttypeid, 
            stgtypeid,
            description,
            active,
            dependency,
            departmentid,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno,
            isrelatedtopayment,
            iscustomersignoffrequired,
			notifyinternaluser
		FROM
			`reference`
		WHERE
			typecode = p_typecode
            AND type = p_parenttype
            order by defaultvalue DESC;
END$$

DELIMITER ;
;


ALTER TABLE `db_elev8r_local`.`reference` 
ADD COLUMN `attributetypes` VARCHAR(200) NULL AFTER `notifyinternaluser`;

DROP procedure IF EXISTS `db_elev8r_local`.`spc_reference_selectbytypecode`;
;

DELIMITER $$
USE `db_elev8r_local`$$
CREATE DEFINER=`sa`@`%` PROCEDURE `spc_reference_selectbytypecode`(
	IN p_typecode varchar(20)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            parentid, 
            type, 
            stgtypeid,
            description,
            active,
            dependency,
            departmentid,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno,
            isrelatedtopayment,
            iscustomersignoffrequired,
			notifyinternaluser,
            attributetypes
		FROM
			`reference`
		WHERE
			typecode = p_typecode
            order by defaultvalue DESC;
END$$

DELIMITER ;
;

