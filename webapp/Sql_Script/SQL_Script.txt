
DROP procedure IF EXISTS `spc_reference_save`;
;

DELIMITER $$
CREATE PROCEDURE `spc_reference_save`(
 IN p_id INT(11),
 IN p_typecode VARCHAR(100),
 IN p_parentid INT(11),
 IN p_parenttypecode VARCHAR(200),
 IN p_description VARCHAR(200),
 IN p_active TINYINT(4),
 IN p_defaultvalue TINYINT(4),
 IN p_projectper DECIMAL(9,3),
 IN p_stageper DECIMAL(9,3),
 IN p_departmentid INT(11),
 IN p_sequenceno INT(11),
 IN p_companyid INT(11),
 IN p_userid INT(11),
 OUT out_id INT )
BEGIN
SET @action = null;
	IF(p_defaultvalue = 1) THEN
		UPDATE reference SET defaultvalue = 0 WHERE typecode = p_typecode;
    END IF;
	IF(NULLIF(p_id, '0') IS NULL) THEN
		INSERT INTO reference(typecode, parentid, parenttypecode, description, active, defaultvalue,projectper,stageper, createddate, modifieddate, departmentid, sequenceno, companyid)
		VALUES (p_typecode, p_parentid, p_parenttypecode, p_description, p_active,p_defaultvalue,p_projectper,p_stageper, now(), now(), p_departmentid, p_sequenceno, p_companyid);
		
		SET @action = 'INSERT';
	
	ELSE
		UPDATE reference
		SET typecode = p_typecode, 
			parentid = p_parentid, 
            parenttypecode = p_parenttypecode, 
			description = p_description,
            active = p_active,
            defaultvalue = p_defaultvalue,
            projectper = p_projectper,
            stageper = p_stageper,
            modifieddate = now(),
            departmentid = p_departmentid,
            sequenceno = p_sequenceno,
			companyid = p_companyid,
			id = LAST_INSERT_ID(id)
			
		WHERE id = p_id
		AND companyid = p_companyid;
		
		SET @action = 'UPDATE';
        
        SET @master = null;
        SELECT master INTO @master FROM referencetype WHERE typecode = p_typecode;
        
        IF(@master = 'ProjectMaster') THEN
			UPDATE project_detail
            SET stagename = p_description
            WHERE stageid = p_id;
        END IF;
		
	END IF;
	
	SELECT LAST_INSERT_ID() INTO OUT_ID;
	
	-- record log
   CALL spc_commonlog_save(p_companyid, 'reference', out_id, @action, p_userid);

END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_reference_selectbytypecode`;
;

DELIMITER $$
CREATE PROCEDURE `spc_reference_selectbytypecode`(
	IN p_typecode varchar(20)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            parentid, 
            parenttypecode, 
            description,
            active,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno
		FROM
			`reference`
		WHERE
			typecode = p_typecode
            order by defaultvalue DESC;
END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_reference_selectbygroup`;
;

DELIMITER $$
CREATE PROCEDURE `spc_reference_selectbygroup`(
	IN typecode varchar(20)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            parentid, 
            parenttypecode, 
            description,
            active,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno
		FROM
			reference
		WHERE
			parenttypecode = p_typecode and
            deleted <> 1
		ORDER BY defaultvalue DESC;
END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_reference_select`;
;

DELIMITER $$
CREATE PROCEDURE `spc_reference_select`(
	IN p_id varchar(30)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            IFNULL(parentid,0)as parentid, 
            parenttypecode, 
            description,
            active,
            defaultvalue,
            projectper,
            stageper,
            displayorder,
            sequenceno,
            departmentid
		FROM
			`reference`
		WHERE
			id = p_id;
END$$

DELIMITER ;
;


DROP procedure IF EXISTS `db_elev8r_local`.`spc_order_save`;
;

DELIMITER $$
USE `db_elev8r_local`$$
CREATE DEFINER=`sa`@`%` PROCEDURE `spc_order_save`(
	IN p_id int(11), 
    IN p_quoteid int(11),
	IN p_leadid int(11), 
	IN p_quotevalue decimal(12,3), 
	IN p_quotetype int(11), 
	IN p_orderdate date, 
	IN p_quotename varchar(45), 
	IN p_quotediscription varchar(45), 
	IN p_quotestatusid int(11), 
	IN p_quotescore decimal(9,3), 
	IN p_quotecategory int(11), 
	IN p_quotesubcategory int(11), 
	IN p_leadsourceid int(11),
	IN p_quotestageid int(11), 
	IN p_typeoflift int(11), 
	IN p_nooflifts int(11), 
	IN p_capacityid int(11), 
	IN p_modelid int(11), 
	IN p_driveid int(11), 
	IN p_machineid int(11), 
	IN p_controlid int(11), 
	IN p_groupcontrolid int(11), 
	IN p_operationid int(11), 
	IN p_speedid int(11), 
	IN p_typeofdoorid int(11), 
	IN p_landingdoorid int(11), 
	IN p_cardoorid int(11), 
	IN p_lowestfloorid int(11), 
	IN p_cwtpositionid int(11), 
	IN p_floorheaightid int(11), 
    IN p_carpanelid int(11),
	IN p_ventilationid int(11),
	IN p_tractionmediaid int(11),
	IN p_mainpowersystemid int(11),
	IN p_carpositionindicatorid int(11),
	IN p_falseceilingid int(11),
	IN p_auxilarysupplysystemid int(11),
	IN p_flooringid int(11),
	IN p_architectidid int(11), 
	IN p_consaltantid int(11), 
	IN p_stopsid int(11), 
	IN p_floormarking int(11), 
	IN p_allopeningsameside varchar(45), 
	IN p_frontopening varchar(45), 
	IN p_backopening varchar(45), 
	IN p_leftopening varchar(45), 
	IN p_rightopening varchar(45), 
	IN p_shaftwidth int(11), 
	IN p_shaftdepth int(11), 
	IN p_cardepth int(11), 
	IN p_carwidth int(11), 
	IN p_carheight int(11), 
	IN p_doorwidth int(11), 
	IN p_doorheight int(11), 
	IN p_travel varchar(45), 
	IN p_pitdepth int(11), 
	IN p_overhead int(11), 
	IN p_mrwidth int(11), 
	IN p_mrdepth int(11), 
	IN p_mrheight int(11), 
	IN p_isdeleted tinyint(4), 
	IN p_winprobability decimal(9,3), 
	IN p_siteaddress varchar(150), 
	IN p_cityid int(11), 
	IN p_stateid int(11), 
	IN p_countryid int(11), 
	IN p_pincode int(11), 
	IN p_phoneno VARCHAR(45), 
	IN p_officialemail varchar(100), 
	IN p_gstn varchar(100), 
	IN p_panno varchar(100), 
	IN p_sociallink1 varchar(100), 
	IN p_sociallink2 varchar(100), 
	IN p_sociallink3 varchar(100),
	IN p_primarycontactid varchar(45), 
	IN p_contactperson varchar(45), 
	IN p_designation varchar(45), 
	IN p_mobileno1 varchar(45), 
    IN p_status VARCHAR(45),
	IN p_companyid int(11),
	IN p_userid INT(11), 
	OUT out_id INT
)
BEGIN

	SET @action = null;

	IF(NULLIF(p_id, '0') IS NULL) THEN
		
		INSERT INTO `order`(id,
							  quoteid,
							  leadid,
							  quotevalue,
                              quotetype,
                              orderdate,
                              quotename,
                              quotediscription,
                              quotestatusid,
                              quotescore,
                              quotecategory, 
							  quotesubcategory,
                              leadsourceid,
                              quotestageid,
                              typeoflift,
                              nooflifts,
                              capacityid,
                              modelid,
                              driveid,
                              machineid, 
                              controlid,
                              operationid,
                              speedid,
                              typeofdoorid,
                              landingdoorid,
                              cardoorid,
                              lowestfloorid,
                              cwtpositionid,
                              floorheaightid,
                              carpanelid,
                              ventilationid,
                              tractionmediaid,
                              mainpowersystemid,
                              carpositionindicatorid,
                              falseceilingid,
							  auxilarysupplysystemid,
                              flooringid,
                              architectidid, 
                              leadconsaltantid,
                              stopsid,
                              floormarking,
                              allopeningsameside,
                              frontopening,
                              backopening,
                              leftopening,
                              rightopening, 
                              shaftwidth,
                              shaftdepth,
                              cardepth,
                              carwidth,
                              carheight,
                              doorwidth,
                              doorheight,
                              travel,
                              pitdepth,
                              overhead,
                              mrwidth,
                              mrdepth, 
                              mrheight,
                              isdeleted,
                              groupcontrolid,
                              winprobability,
                              siteaddress,
                              cityid,
                              stateid,
                              countryid,
                              pincode,
                              phoneno,
                              officialemail,
                              gstn,
                              panno,
                              sociallink1,
                              sociallink2,
                              sociallink3,
                              primarycontactid,
                              contactperson,
                              designation,
                              mobileno1,
                              status,
                              revisionno,
                              companyid)
					   VALUES (p_id,
						       p_quoteid,
                               p_leadid,
						       p_quotevalue,
                               p_quotetype,
                               p_orderdate,
                               p_quotename,
                               p_quotediscription,
                               p_quotestatusid,
                               p_quotescore,
                               p_quotecategory, 
							   p_quotesubcategory,
                               p_leadsourceid,
                               p_quotestageid,
                               p_typeoflift,
                               p_nooflifts,
                               p_capacityid,
                               p_modelid,
                               p_driveid,
                               p_machineid, 
                               p_controlid,
                               p_operationid,
                               p_speedid,
                               p_typeofdoorid,
                               p_landingdoorid,
                               p_cardoorid,
                               p_lowestfloorid,
                               p_cwtpositionid,
                               p_floorheaightid,
                               p_carpanelid,
							   p_ventilationid,
							   p_tractionmediaid,
							   p_mainpowersystemid,
							   p_carpositionindicatorid,
							   p_falseceilingid,
							   p_auxilarysupplysystemid,
							   p_flooringid,
                               p_architectidid, 
                               p_consaltantid,
                               p_stopsid,
                               p_floormarking,
                               p_allopeningsameside,
                               p_frontopening,
                               p_backopening,
                               p_leftopening,
                               p_rightopening, 
                               p_shaftwidth,
                               p_shaftdepth,
                               p_cardepth,
                               p_carwidth,
                               p_carheight,
                               p_doorwidth,
                               p_doorheight,
                               p_travel,
                               p_pitdepth,
                               p_overhead,
                               p_mrwidth,
                               p_mrdepth, 
                               p_mrheight,
                               0,
                               p_groupcontrolid,
                               p_winprobability,
                               p_siteaddress,
                               p_cityid,
                               p_stateid,
                               p_countryid,
                               p_pincode,
                               p_phoneno,
                               p_officialemail,
                               p_gstn,
                               p_panno,
                               p_sociallink1,
                               p_sociallink2,
                               p_sociallink3,
                               p_primarycontactid,
                               p_contactperson,
                               p_designation,
                               p_mobileno1,
                               p_status,
                               1,
                               p_companyid);
		
		SET @action = 'INSERT';
	
	ELSE
		-- save previous values in metadata column
        SET @previouscol = null;
        SET @revisionno = null;
        SET @currval = null;
        SELECT CONCAT("{",'"id"'":",IFNULL(id,'-'), ",'"'quoteid'"':",IFNULL(quoteid,'-'),",'"'leadid'"':",IFNULL(leadid,'-'),",'"'quotevalue'"':",IFNULL(quotevalue,'-'),",'"'quotetype'"':",IFNULL(quotetype,'-'),",'"'orderdate'"':",IFNULL(orderdate,'-'),",'"'quotename'"':",IFNULL(quotename,''),
							  ",'"'quotediscription'"':",IFNULL(quotediscription,'-'),",'"'quotestatusid'"':",IFNULL(quotestatusid,'-'),",'"'quotescore'"':",IFNULL(quotescore,'-'),",'"'quotecategory'"':",IFNULL(quotecategory,'-'), 
							  ",'"'quotesubcategory'"':",IFNULL(quotesubcategory,'-'),",'"'leadsourceid'"':",IFNULL(leadsourceid,'-'),",'"'quotestageid'"':",IFNULL(quotestageid,'-'),",'"'typeoflift'"':",IFNULL(typeoflift,'-'),",'"'nooflifts'"':",IFNULL(nooflifts,'-'),",'"'capacityid'"':",IFNULL(capacityid,'-'),",'"'modelid'"':",IFNULL(modelid,'-'),",'"'driveid'"':",IFNULL(driveid,'-'),",'"'machineid'"':",IFNULL(machineid,'-'), 
                              ",'"'controlid'"':",IFNULL(controlid,'-'),",'"'operationid'"':",IFNULL(operationid,'-'),",'"'speedid'"':",IFNULL(speedid,'-'),",'"'typeofdoorid'"':",IFNULL(typeofdoorid,'-'),",'"'landingdoorid'"':",IFNULL(landingdoorid,'-'),",'"'cardoorid'"':",IFNULL(cardoorid,'-'),",'"'lowestfloorid'"':",IFNULL(lowestfloorid,'-'),",'"'cwtpositionid'"':",IFNULL(cwtpositionid,'-'),",'"'floorheaightid'"':",IFNULL(floorheaightid,'-'),
                              ",'"'architectidid'"':",IFNULL(architectidid,'-'),",'"'leadconsaltantid'"':",IFNULL(leadconsaltantid,'-'),",'"'stopsid'"':",IFNULL(stopsid,'-'),",'"'floormarking'"':",IFNULL(floormarking,'-'),",'"'allopeningsameside'"':",IFNULL(allopeningsameside,'-'),",'"'frontopening'"':",IFNULL(frontopening,'-'),",'"'backopening'"':",IFNULL(backopening,'-'),",'"'leftopening'"':",IFNULL(leftopening,'-'),
                              ",'"'rightopening'"':",IFNULL(rightopening,'-'),",'"'shaftwidth'"':",IFNULL(shaftwidth,'-'),",'"'shaftdepth'"':",IFNULL(shaftdepth,'-'),",'"'cardepth'"':",IFNULL(cardepth,'-'),",'"'carwidth'"':",IFNULL(carwidth,'-'),",'"'carheight'"':",IFNULL(carheight,'-'),",'"'doorwidth'"':",IFNULL(doorwidth,'-'),",'"'doorheight'"':",IFNULL(doorheight,'-'),",'"'travel'"':",IFNULL(travel,'-'),",'"'pitdepth'"':",IFNULL(pitdepth,'-'),
                              ",'"'overhead'"':",IFNULL(overhead,'-'),",'"'mrwidth'"':",IFNULL(mrwidth,'-'),",'"'mrdepth'"':",IFNULL(mrdepth,'-'),",'"'mrheight'"':",IFNULL(mrheight,'-'),",'"'isdeleted'"':",IFNULL(isdeleted,'-'),",'"'groupcontrolid'"':",IFNULL(groupcontrolid,'-'),",'"'winprobability'"':",IFNULL(winprobability,'-'),",'"'siteaddress'"':",IFNULL(siteaddress,'-'),",'"'cityid'"':",IFNULL(cityid,'-'),",'"'stateid'"':",IFNULL(stateid,'-'),
                              ",'"'countryid'"':",IFNULL(countryid,'-'),",'"'pincode'"':",IFNULL(pincode,'-'),",'"'phoneno'"':",IFNULL(phoneno,'-'),",'"'officialemail'"':",IFNULL(officialemail,'-'),",'"'gstn'"':",IFNULL(gstn,'-'),",'"'panno'"':",IFNULL(panno,'-'),",'"'sociallink1'"':",IFNULL(sociallink1,'-'),",'"'sociallink2'"':",IFNULL(sociallink2,'-'),",'"'sociallink3'"':",IFNULL(sociallink3,'-'),",'"'primarycontactid'"':",IFNULL(primarycontactid,'-'),
                              ",'"'contactperson'"':",IFNULL(contactperson,'-'),",'"'destination'"':",IFNULL(designation,'-'),",'"'mobileno1'"':",IFNULL(mobileno1,'-'),",'"'status'"':",IFNULL(status,'-'),'}')
		INTO @currval FROM `order` WHERE id = p_id;
        
        SELECT @currval;
        
        -- get current value form metadata
        SELECT previousvalues INTO @previouscol FROM `order` WHERE id = p_id AND previousvalues IS NOT NULL;
		SELECT revisionno INTO @revisionno FROM `order` WHERE id = p_id;

		IF @previouscol IS NOT NULL THEN
			UPDATE `order`
			SET previousvalues = JSON_ARRAY_APPEND(CAST(@previouscol AS JSON), '$', @currval),
				revisionno = (@revisionno + 1)
			WHERE id = p_id;
		ELSE
			UPDATE `order`
			SET previousvalues = JSON_ARRAY(@currval),
				revisionno = (@revisionno + 1)
			WHERE id = p_id;
		END IF;
       
		UPDATE `order`
		SET 
            leadid = p_leadid,
            quoteid = p_quoteid,
            quotevalue = p_quotevalue,
            quotetype = p_quotetype,
            orderdate = p_orderdate,
            quotename = p_quotename,
            quotediscription = p_quotediscription,
            quotestatusid = p_quotestatusid,
            quotescore = p_quotescore,
            quotecategory = p_quotecategory,
            quotesubcategory = p_quotesubcategory,
            leadsourceid = p_leadsourceid,
            quotestageid = p_quotestageid,
            typeoflift = p_typeoflift,
            nooflifts = p_nooflifts,
            capacityid = p_capacityid,
            modelid = p_modelid,
            driveid = p_driveid,
            machineid = p_machineid,
			controlid = p_controlid,
            operationid = p_operationid,
            speedid = p_speedid,
            typeofdoorid = p_typeofdoorid,
            landingdoorid = p_landingdoorid,
            cardoorid = p_cardoorid,
            lowestfloorid = p_lowestfloorid,
            cwtpositionid = p_cwtpositionid,
            floorheaightid = p_floorheaightid,
            carpanelid = p_carpanelid,
			ventilationid = p_ventilationid,
			tractionmediaid = p_tractionmediaid,
			mainpowersystemid = p_mainpowersystemid,
			carpositionindicatorid = p_carpositionindicatorid,
			falseceilingid = p_falseceilingid,
			auxilarysupplysystemid = p_auxilarysupplysystemid,
			flooringid = p_flooringid,
            architectidid = p_architectidid, 
			leadconsaltantid = p_consaltantid,
            stopsid = p_stopsid,
            floormarking = p_floormarking,
            allopeningsameside = p_allopeningsameside,
            frontopening = p_frontopening,
            backopening = p_backopening,
            leftopening = p_leftopening,
            rightopening = p_rightopening, 
			shaftwidth = p_shaftwidth,
            shaftdepth = p_shaftdepth,
            cardepth = p_cardepth,
            carwidth = p_carwidth,
            carheight = p_carheight,
            doorwidth = p_doorwidth,
            doorheight = p_doorheight,
            travel = p_travel,
            pitdepth = p_pitdepth,
            overhead = p_overhead,
            mrwidth = p_mrwidth,
            mrdepth = p_mrdepth, 
			mrheight = p_mrheight,
            isdeleted = p_isdeleted,
            groupcontrolid = p_groupcontrolid,
            winprobability = p_winprobability,
            siteaddress = p_siteaddress,
            cityid = p_cityid,
            stateid = p_stateid,
            countryid = p_countryid,
            pincode = p_pincode,
            phoneno = p_phoneno,
			officialemail = p_officialemail,
            gstn = p_gstn,
            panno = p_panno,
            sociallink1 = p_sociallink1,
            sociallink2 = p_sociallink2,
            sociallink3 = p_sociallink3,
            primarycontactid = p_primarycontactid,
            contactperson = p_contactperson,
            designation = p_designation,
			mobileno1 = p_mobileno1,
            status = p_status,
            companyid = p_companyid,
			id = LAST_INSERT_ID(id)
			
		WHERE id = p_id
		AND companyid = p_companyid;
		
		SET @action = 'UPDATE';
		
	END IF;
	
	SELECT LAST_INSERT_ID() INTO OUT_ID;
    
    -- save order as project when order gets confirmed
  /*  IF(p_status = 148) THEN
		
		SET @projectid = null;
		call spc_project_save(
			null, OUT_ID, p_quotevalue, null, p_orderdate, null,null, 1,null,null, null, null, p_companyid, p_userid, @projectid
        );
        
        SET @row_number = 0;
	   
		DROP TABLE IF EXISTS tempprojectdetail;
		CREATE TEMPORARY TABLE tempprojectdetail
		
		SELECT (@row_number:=@row_number + 1) AS num, id as stageid, description, stageper, projectper from (
			SELECT 
				id,
				description,
				stageper,
				projectper
			FROM reference
			where typecode = 'ProMilestones'
		) 
		as tblprojectdetail;
        
        BEGIN
			DECLARE n INT DEFAULT 0;
			DECLARE i INT DEFAULT 0;
			SELECT COUNT(*) FROM tempprojectdetail INTO n;
			 
			WHILE i<n DO 
				SET @stageid = null;
				SET @description = null;
				SET @stageper = null;
				SET @projectper = null;
				select stageid, description, stageper, projectper 
                into @stageid, @description, @stageper, @projectper from tempprojectdetail where num = i+1;
				 
				 SET @projectdetailid = null;
				 CALL spc_projectdetail_save( 	
					NULL,
					@projectid,
					@stageid,
					@description,
					NULL,
					@stageper,
					@projectper,
					NULL,
					NULL,
					NULL,
                    Null,
					NULL,
					NULL,
					NULL,
                    NULL,
					NULL,
					NULL,
                    NULL,
                    NULL,
                    0,
                    0,
					NULL,
					p_companyid,
					p_userid,
					@projectdetailid
				 );
				
				SET i = i + 1;
			END WHILE;
		End;
    END IF;*/
    
END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_reference_save`;

DELIMITER $$
CREATE PROCEDURE `spc_reference_save`(
 IN p_id INT(11),
 IN p_typecode VARCHAR(100),
 IN p_parentid INT(11),
 IN p_parenttypecode VARCHAR(200),
 IN p_description VARCHAR(200),
 IN p_active TINYINT(4),
 IN p_defaultvalue TINYINT(4),
 IN p_projectper DECIMAL(9,3),
 IN p_stageper DECIMAL(9,3),
 IN p_departmentid INT(11),
 IN p_sequenceno INT(11),
 IN p_companyid INT(11),
 IN p_userid INT(11),
 OUT out_id INT )
BEGIN
	SET @action = null;
	IF(p_defaultvalue = 1) THEN
		UPDATE reference SET defaultvalue = 0 WHERE typecode = p_typecode;
    END IF;
	IF(NULLIF(p_id, '0') IS NULL) THEN
		INSERT INTO reference(typecode, parentid, parenttypecode, description, active, defaultvalue,projectper,stageper, createddate, modifieddate, departmentid, sequenceno, companyid)
		VALUES (p_typecode, p_parentid, p_parenttypecode, p_description, p_active,p_defaultvalue,p_projectper,p_stageper, now(), now(), p_departmentid, p_sequenceno, p_companyid);
		
		SET @action = 'INSERT';
        
        IF(p_typecode = 'ProMilestones') THEN
			SET @row_number = 0;
            
			DROP TABLE IF EXISTS tempproject;
			CREATE TEMPORARY TABLE tempproject
			
			SELECT (@row_number:=@row_number + 1) AS num, id as projectid from (
				SELECT 
					id
				FROM project
			) 
			as tblproject;

			BEGIN
				DECLARE n INT DEFAULT 0;
				DECLARE i INT DEFAULT 0; 
				SELECT COUNT(*) FROM tempproject INTO n;

				WHILE i < n DO
					SET @projectid = NULL;
					SELECT projectid INTO @projectid FROM tempproject WHERE num = i + 1;

					SET @projectdetailid = null;
					 CALL spc_projectdetail_save( 	
						NULL,
						@projectid,
						(SELECT id FROM reference WHERE description = p_description LIMIT 1),
						p_description,
						p_parentid,
						p_stageper,
						p_projectper,
						NULL,
						NULL,
						0,
						Null,
						NULL,
						NULL,
						NULL,
						NULL,
						NULL,
						p_departmentid,
						p_active,
						NULL,
						1,
						0,
						NULL,
						p_companyid,
						p_userid,
						@projectdetailid
					 );

					SET i = i + 1;
				END WHILE;
			END;
        END IF;
	
	ELSE
		UPDATE reference
		SET typecode = p_typecode, 
			parentid = p_parentid, 
            parenttypecode = p_parenttypecode, 
			description = p_description,
            active = p_active,
            defaultvalue = p_defaultvalue,
            projectper = p_projectper,
            stageper = p_stageper,
            modifieddate = now(),
            departmentid = p_departmentid,
            sequenceno = p_sequenceno,
			companyid = p_companyid,
			id = LAST_INSERT_ID(id)
			
		WHERE id = p_id
		AND companyid = p_companyid;
		
		SET @action = 'UPDATE';
        
        SET @master = null;
        SELECT master INTO @master FROM referencetype WHERE typecode = p_typecode;
        
        IF(@master = 'ProjectMaster') THEN
			UPDATE project_detail
            SET stagename = p_description
            WHERE stageid = p_id;
        END IF;
		
	END IF;
	
	SELECT LAST_INSERT_ID() INTO OUT_ID;
	
	-- record log
   CALL spc_commonlog_save(p_companyid, 'reference', out_id, @action, p_userid);

END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_order_save`;

DELIMITER $$
CREATE PROCEDURE `spc_order_save`(
	IN p_id int(11), 
    IN p_quoteid int(11),
	IN p_leadid int(11), 
	IN p_quotevalue decimal(12,3), 
	IN p_quotetype int(11), 
	IN p_orderdate date, 
	IN p_quotename varchar(45), 
	IN p_quotediscription varchar(45), 
	IN p_quotestatusid int(11), 
	IN p_quotescore decimal(9,3), 
	IN p_quotecategory int(11), 
	IN p_quotesubcategory int(11), 
	IN p_leadsourceid int(11),
	IN p_quotestageid int(11), 
	IN p_typeoflift int(11), 
	IN p_nooflifts int(11), 
	IN p_capacityid int(11), 
	IN p_modelid int(11), 
	IN p_driveid int(11), 
	IN p_machineid int(11), 
	IN p_controlid int(11), 
	IN p_groupcontrolid int(11), 
	IN p_operationid int(11), 
	IN p_speedid int(11), 
	IN p_typeofdoorid int(11), 
	IN p_landingdoorid int(11), 
	IN p_cardoorid int(11), 
	IN p_lowestfloorid int(11), 
	IN p_cwtpositionid int(11), 
	IN p_floorheaightid int(11), 
    IN p_carpanelid int(11),
	IN p_ventilationid int(11),
	IN p_tractionmediaid int(11),
	IN p_mainpowersystemid int(11),
	IN p_carpositionindicatorid int(11),
	IN p_falseceilingid int(11),
	IN p_auxilarysupplysystemid int(11),
	IN p_flooringid int(11),
	IN p_architectidid int(11), 
	IN p_consaltantid int(11), 
	IN p_stopsid int(11), 
	IN p_floormarking int(11), 
	IN p_allopeningsameside varchar(45), 
	IN p_frontopening varchar(45), 
	IN p_backopening varchar(45), 
	IN p_leftopening varchar(45), 
	IN p_rightopening varchar(45), 
	IN p_shaftwidth int(11), 
	IN p_shaftdepth int(11), 
	IN p_cardepth int(11), 
	IN p_carwidth int(11), 
	IN p_carheight int(11), 
	IN p_doorwidth int(11), 
	IN p_doorheight int(11), 
	IN p_travel varchar(45), 
	IN p_pitdepth int(11), 
	IN p_overhead int(11), 
	IN p_mrwidth int(11), 
	IN p_mrdepth int(11), 
	IN p_mrheight int(11), 
	IN p_isdeleted tinyint(4), 
	IN p_winprobability decimal(9,3), 
	IN p_siteaddress varchar(150), 
	IN p_cityid int(11), 
	IN p_stateid int(11), 
	IN p_countryid int(11), 
	IN p_pincode int(11), 
	IN p_phoneno VARCHAR(45), 
	IN p_officialemail varchar(100), 
	IN p_gstn varchar(100), 
	IN p_panno varchar(100), 
	IN p_sociallink1 varchar(100), 
	IN p_sociallink2 varchar(100), 
	IN p_sociallink3 varchar(100),
	IN p_primarycontactid varchar(45), 
	IN p_contactperson varchar(45), 
	IN p_designation varchar(45), 
	IN p_mobileno1 varchar(45), 
    IN p_status VARCHAR(45),
	IN p_companyid int(11),
	IN p_userid INT(11), 
	OUT out_id INT
)
BEGIN

	SET @action = null;

	IF(NULLIF(p_id, '0') IS NULL) THEN
		
		INSERT INTO `order`(id,
							  quoteid,
							  leadid,
							  quotevalue,
                              quotetype,
                              orderdate,
                              quotename,
                              quotediscription,
                              quotestatusid,
                              quotescore,
                              quotecategory, 
							  quotesubcategory,
                              leadsourceid,
                              quotestageid,
                              typeoflift,
                              nooflifts,
                              capacityid,
                              modelid,
                              driveid,
                              machineid, 
                              controlid,
                              operationid,
                              speedid,
                              typeofdoorid,
                              landingdoorid,
                              cardoorid,
                              lowestfloorid,
                              cwtpositionid,
                              floorheaightid,
                              carpanelid,
                              ventilationid,
                              tractionmediaid,
                              mainpowersystemid,
                              carpositionindicatorid,
                              falseceilingid,
							  auxilarysupplysystemid,
                              flooringid,
                              architectidid, 
                              leadconsaltantid,
                              stopsid,
                              floormarking,
                              allopeningsameside,
                              frontopening,
                              backopening,
                              leftopening,
                              rightopening, 
                              shaftwidth,
                              shaftdepth,
                              cardepth,
                              carwidth,
                              carheight,
                              doorwidth,
                              doorheight,
                              travel,
                              pitdepth,
                              overhead,
                              mrwidth,
                              mrdepth, 
                              mrheight,
                              isdeleted,
                              groupcontrolid,
                              winprobability,
                              siteaddress,
                              cityid,
                              stateid,
                              countryid,
                              pincode,
                              phoneno,
                              officialemail,
                              gstn,
                              panno,
                              sociallink1,
                              sociallink2,
                              sociallink3,
                              primarycontactid,
                              contactperson,
                              designation,
                              mobileno1,
                              status,
                              revisionno,
                              companyid)
					   VALUES (p_id,
						       p_quoteid,
                               p_leadid,
						       p_quotevalue,
                               p_quotetype,
                               p_orderdate,
                               p_quotename,
                               p_quotediscription,
                               p_quotestatusid,
                               p_quotescore,
                               p_quotecategory, 
							   p_quotesubcategory,
                               p_leadsourceid,
                               p_quotestageid,
                               p_typeoflift,
                               p_nooflifts,
                               p_capacityid,
                               p_modelid,
                               p_driveid,
                               p_machineid, 
                               p_controlid,
                               p_operationid,
                               p_speedid,
                               p_typeofdoorid,
                               p_landingdoorid,
                               p_cardoorid,
                               p_lowestfloorid,
                               p_cwtpositionid,
                               p_floorheaightid,
                               p_carpanelid,
							   p_ventilationid,
							   p_tractionmediaid,
							   p_mainpowersystemid,
							   p_carpositionindicatorid,
							   p_falseceilingid,
							   p_auxilarysupplysystemid,
							   p_flooringid,
                               p_architectidid, 
                               p_consaltantid,
                               p_stopsid,
                               p_floormarking,
                               p_allopeningsameside,
                               p_frontopening,
                               p_backopening,
                               p_leftopening,
                               p_rightopening, 
                               p_shaftwidth,
                               p_shaftdepth,
                               p_cardepth,
                               p_carwidth,
                               p_carheight,
                               p_doorwidth,
                               p_doorheight,
                               p_travel,
                               p_pitdepth,
                               p_overhead,
                               p_mrwidth,
                               p_mrdepth, 
                               p_mrheight,
                               0,
                               p_groupcontrolid,
                               p_winprobability,
                               p_siteaddress,
                               p_cityid,
                               p_stateid,
                               p_countryid,
                               p_pincode,
                               p_phoneno,
                               p_officialemail,
                               p_gstn,
                               p_panno,
                               p_sociallink1,
                               p_sociallink2,
                               p_sociallink3,
                               p_primarycontactid,
                               p_contactperson,
                               p_designation,
                               p_mobileno1,
                               p_status,
                               1,
                               p_companyid);
		
		SET @action = 'INSERT';
	
	ELSE
		-- save previous values in metadata column
        SET @previouscol = null;
        SET @revisionno = null;
        SET @currval = null;
        SELECT JSON_OBJECT('id',IFNULL(id,'-'),'quoteid',IFNULL(quoteid,'-'),'leadid',IFNULL(leadid,'-'),'quotevalue',IFNULL(quotevalue,'-'),'quotetype',IFNULL(quotetype,'-'),'orderdate',IFNULL(orderdate,'-'),'quotename',IFNULL(quotename,''),
							  'quotediscription',IFNULL(quotediscription,'-'),'quotestatusid',IFNULL(quotestatusid,'-'),'quotescore',IFNULL(quotescore,'-'),'quotecategory',IFNULL(quotecategory,'-'), 
							  'quotesubcategory',IFNULL(quotesubcategory,'-'),'leadsourceid',IFNULL(leadsourceid,'-'),'quotestageid',IFNULL(quotestageid,'-'),'typeoflift',IFNULL(typeoflift,'-'),'nooflifts',IFNULL(nooflifts,'-'),'capacityid',IFNULL(capacityid,'-'),'modelid',IFNULL(modelid,'-'),'driveid',IFNULL(driveid,'-'),'machineid',IFNULL(machineid,'-'), 
                              'controlid',IFNULL(controlid,'-'),'operationid',IFNULL(operationid,'-'),'speedid',IFNULL(speedid,'-'),'typeofdoorid',IFNULL(typeofdoorid,'-'),'landingdoorid',IFNULL(landingdoorid,'-'),'cardoorid',IFNULL(cardoorid,'-'),'lowestfloorid',IFNULL(lowestfloorid,'-'),'cwtpositionid',IFNULL(cwtpositionid,'-'),'floorheaightid',IFNULL(floorheaightid,'-'),
                              'architectidid',IFNULL(architectidid,'-'),'leadconsaltantid',IFNULL(leadconsaltantid,'-'),'stopsid',IFNULL(stopsid,'-'),'floormarking',IFNULL(floormarking,'-'),'allopeningsameside',IFNULL(allopeningsameside,'-'),'frontopening',IFNULL(frontopening,'-'),'backopening',IFNULL(backopening,'-'),'leftopening',IFNULL(leftopening,'-'),
                              'rightopening',IFNULL(rightopening,'-'),'shaftwidth',IFNULL(shaftwidth,'-'),'shaftdepth',IFNULL(shaftdepth,'-'),'cardepth',IFNULL(cardepth,'-'),'carwidth',IFNULL(carwidth,'-'),'carheight',IFNULL(carheight,'-'),'doorwidth',IFNULL(doorwidth,'-'),'doorheight',IFNULL(doorheight,'-'),'travel',IFNULL(travel,'-'),'pitdepth',IFNULL(pitdepth,'-'),
                              'overhead',IFNULL(overhead,'-'),'mrwidth',IFNULL(mrwidth,'-'),'mrdepth',IFNULL(mrdepth,'-'),'mrheight',IFNULL(mrheight,'-'),'isdeleted',IFNULL(isdeleted,'-'),'groupcontrolid',IFNULL(groupcontrolid,'-'),'winprobability',IFNULL(winprobability,'-'),'siteaddress',IFNULL(siteaddress,'-'),'cityid',IFNULL(cityid,'-'),'stateid',IFNULL(stateid,'-'),
                              'countryid',IFNULL(countryid,'-'),'pincode',IFNULL(pincode,'-'),'phoneno',IFNULL(phoneno,'-'),'officialemail',IFNULL(officialemail,'-'),'gstn',IFNULL(gstn,'-'),'panno',IFNULL(panno,'-'),'sociallink1',IFNULL(sociallink1,'-'),'sociallink2',IFNULL(sociallink2,'-'),'sociallink3',IFNULL(sociallink3,'-'),'primarycontactid',IFNULL(primarycontactid,'-'),
                              'contactperson',IFNULL(contactperson,'-'),'destination',IFNULL(designation,'-'),'mobileno1',IFNULL(mobileno1,'-'),'status',IFNULL(status,'-'),'includinggst',IFNULL(includinggst,'-'),'snehasalescontactname',IFNULL(snehasalescontactname,'-'),
                              'snehasalescontactno',IFNULL(snehasalescontactno,'-'),'revisionno',IFNULL(revisionno,'-'),'carpanelid',IFNULL(carpanelid,'-'),'ventilationid',IFNULL(ventilationid,'-'),'tractionmediaid',IFNULL(tractionmediaid,'-'),'mainpowersystemid',IFNULL(mainpowersystemid,'-'),'carpositionindicatorid',IFNULL(carpositionindicatorid,'-'),
                              'falseceilingid',IFNULL(falseceilingid,'-'),'auxilarysupplysystemid',IFNULL(auxilarysupplysystemid,'-'),'flooringid',IFNULL(flooringid,'-'),'shaftconditionid',IFNULL(shaftconditionid,'-'),'unitid',IFNULL(unitid,'-'))
		INTO @currval FROM `order` WHERE id = p_id;
        
        SELECT @currval;
        
        -- get current value form metadata
        SELECT previousvalues INTO @previouscol FROM `order` WHERE id = p_id AND previousvalues IS NOT NULL;
		SELECT revisionno INTO @revisionno FROM `order` WHERE id = p_id;

		IF @previouscol IS NOT NULL THEN
			UPDATE `order`
			SET previousvalues = JSON_ARRAY_APPEND(CAST(@previouscol AS JSON), '$', @currval),
				revisionno = (@revisionno + 1)
			WHERE id = p_id;
		ELSE
			UPDATE `order`
			SET previousvalues = JSON_ARRAY(@currval),
				revisionno = (@revisionno + 1)
			WHERE id = p_id;
		END IF;
       
		UPDATE `order`
		SET 
            leadid = p_leadid,
            quoteid = p_quoteid,
            quotevalue = p_quotevalue,
            quotetype = p_quotetype,
            orderdate = p_orderdate,
            quotename = p_quotename,
            quotediscription = p_quotediscription,
            quotestatusid = p_quotestatusid,
            quotescore = p_quotescore,
            quotecategory = p_quotecategory,
            quotesubcategory = p_quotesubcategory,
            leadsourceid = p_leadsourceid,
            quotestageid = p_quotestageid,
            typeoflift = p_typeoflift,
            nooflifts = p_nooflifts,
            capacityid = p_capacityid,
            modelid = p_modelid,
            driveid = p_driveid,
            machineid = p_machineid,
			controlid = p_controlid,
            operationid = p_operationid,
            speedid = p_speedid,
            typeofdoorid = p_typeofdoorid,
            landingdoorid = p_landingdoorid,
            cardoorid = p_cardoorid,
            lowestfloorid = p_lowestfloorid,
            cwtpositionid = p_cwtpositionid,
            floorheaightid = p_floorheaightid,
            carpanelid = p_carpanelid,
			ventilationid = p_ventilationid,
			tractionmediaid = p_tractionmediaid,
			mainpowersystemid = p_mainpowersystemid,
			carpositionindicatorid = p_carpositionindicatorid,
			falseceilingid = p_falseceilingid,
			auxilarysupplysystemid = p_auxilarysupplysystemid,
			flooringid = p_flooringid,
            architectidid = p_architectidid, 
			leadconsaltantid = p_consaltantid,
            stopsid = p_stopsid,
            floormarking = p_floormarking,
            allopeningsameside = p_allopeningsameside,
            frontopening = p_frontopening,
            backopening = p_backopening,
            leftopening = p_leftopening,
            rightopening = p_rightopening, 
			shaftwidth = p_shaftwidth,
            shaftdepth = p_shaftdepth,
            cardepth = p_cardepth,
            carwidth = p_carwidth,
            carheight = p_carheight,
            doorwidth = p_doorwidth,
            doorheight = p_doorheight,
            travel = p_travel,
            pitdepth = p_pitdepth,
            overhead = p_overhead,
            mrwidth = p_mrwidth,
            mrdepth = p_mrdepth, 
			mrheight = p_mrheight,
            isdeleted = p_isdeleted,
            groupcontrolid = p_groupcontrolid,
            winprobability = p_winprobability,
            siteaddress = p_siteaddress,
            cityid = p_cityid,
            stateid = p_stateid,
            countryid = p_countryid,
            pincode = p_pincode,
            phoneno = p_phoneno,
			officialemail = p_officialemail,
            gstn = p_gstn,
            panno = p_panno,
            sociallink1 = p_sociallink1,
            sociallink2 = p_sociallink2,
            sociallink3 = p_sociallink3,
            primarycontactid = p_primarycontactid,
            contactperson = p_contactperson,
            designation = p_designation,
			mobileno1 = p_mobileno1,
            status = p_status,
            companyid = p_companyid,
			id = LAST_INSERT_ID(id)
			
		WHERE id = p_id
		AND companyid = p_companyid;
		
		SET @action = 'UPDATE';
		
	END IF;
	
	SELECT LAST_INSERT_ID() INTO OUT_ID;
    
    -- save order as project when order gets confirmed
  /*  IF(p_status = 148) THEN
		
		SET @projectid = null;
		call spc_project_save(
			null, OUT_ID, p_quotevalue, null, p_orderdate, null,null, 1,null,null, null, null, p_companyid, p_userid, @projectid
        );
        
        SET @row_number = 0;
	   
		DROP TABLE IF EXISTS tempprojectdetail;
		CREATE TEMPORARY TABLE tempprojectdetail
		
		SELECT (@row_number:=@row_number + 1) AS num, id as stageid, description, stageper, projectper from (
			SELECT 
				id,
				description,
				stageper,
				projectper
			FROM reference
			where typecode = 'ProMilestones'
		) 
		as tblprojectdetail;
        
        BEGIN
			DECLARE n INT DEFAULT 0;
			DECLARE i INT DEFAULT 0;
			SELECT COUNT(*) FROM tempprojectdetail INTO n;
			 
			WHILE i<n DO 
				SET @stageid = null;
				SET @description = null;
				SET @stageper = null;
				SET @projectper = null;
				select stageid, description, stageper, projectper 
                into @stageid, @description, @stageper, @projectper from tempprojectdetail where num = i+1;
				 
				 SET @projectdetailid = null;
				 CALL spc_projectdetail_save( 	
					NULL,
					@projectid,
					@stageid,
					@description,
					NULL,
					@stageper,
					@projectper,
					NULL,
					NULL,
					NULL,
                    Null,
					NULL,
					NULL,
					NULL,
                    NULL,
					NULL,
					NULL,
                    NULL,
                    NULL,
                    0,
                    0,
					NULL,
					p_companyid,
					p_userid,
					@projectdetailid
				 );
				
				SET i = i + 1;
			END WHILE;
		End;
    END IF;*/
END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_orderpdf`;

DELIMITER $$
CREATE PROCEDURE `spc_orderpdf`(
	IN p_id INT(11)
)
BEGIN

	SET @@sql_mode = '';
	SELECT O.revisionno as revision,
		   DATE_FORMAT(O.orderdate,'%d/%m/%Y') as orderdate,
           O.id as orderid,
           Q.quotename,
           O.snehasalescontactname,
           Q.snehasalescontactno,
           O.designation,
           Q.siteaddress,
           Q.phoneno,
           C.cityname as city,
           S.statename as state,
           CO.countryname as country,
           Q.pincode as zipcode,
           Q.gstn,
           Q.panno,
           Q.phoneno as customercontactperson,
           Q.officialemail,
           REF.description as model,
           REF1.description as lifttype,
           REF2.description as capacity,
           REF3.description as speed,
           O.stopsid,
           REF4.description as control,
           GROUP_CONCAT(REF5.description,' mts') as drive,
           ifnull(GROUP_CONCAT(O.shaftwidth,'mm(W)','X',O.shaftdepth,'mm(D) (',IFNULL(REF7.description,'-'),')'),'-') as shaftsize,
           ifnull(GROUP_CONCAT(O.carwidth,'mm(W)','X',O.cardepth,'mm(D)','X',O.carheight,'mm(H) (Approximately)'),'-') as carsize,
           ifnull(GROUP_CONCAT(O.doorwidth, 'mm Open','X',O.doorheight,'mm Height'),'-') as clearopening,
           ifnull(CONCAT(O.pitdepth,'mm'),'-')as pitdepth,
           ifnull(CONCAT(O.overhead,'mm'),'-')as overhead,
           ifnull(CONCAT(REF6.description,'(Manual)'),'-') as cardoor,
           REF8.description as cwtposition,
		   REF9.description as carpanel,
		   REF10.description as ventilation,
		   REF11.description as tractionmedia,
	       REF12.description as mainpowersystem,
		   REF13.description as carpositionindicator,
		   REF14.description as falseceiling,
		   REF15.description as auxilarysupplysystem,
		   REF16.description as flooring,
		   REF17.description as operation,
           REF18.description as travel,
           O.stopsid  as stop,
           REF19.description as landingdoor,
           REF20.description as machine
	FROM `order` O
    LEFT JOIN quotation Q ON Q.id = O.quoteid
    LEFT JOIN city C ON C.id = Q.cityid
    LEFT JOIN state S ON S.id = Q.stateid
    LEFT JOIN country CO ON CO.id = Q.countryid
    LEFT JOIN reference REF ON REF.id = O.modelid
    LEFT JOIN reference REF1 ON REF1.id = O.typeoflift
    LEFT JOIN reference REF2 ON REF2.id = O.capacityid
    LEFT JOIN reference REF3 ON REF3.id = O.speedid
    LEFT JOIN reference REF4 ON REF4.id = O.controlid
    LEFT JOIN reference REF5 ON REF5.id = O.driveid
    LEFT JOIN reference REF6 ON REF6.id = O.cardoorid
	LEFT JOIN reference REF7 ON REF7.id = O.shaftconditionid
    LEFT JOIN reference REF8 ON REF8.id = O.cwtpositionid
    LEFT JOIN reference REF9 ON REF9.id = O.carpanelid
    LEFT JOIN reference REF10 ON REF10.id = O.ventilationid
    LEFT JOIN reference REF11 ON REF11.id = O.tractionmediaid
    LEFT JOIN reference REF12 ON REF12.id = O.mainpowersystemid
    LEFT JOIN reference REF13 ON REF13.id = O.carpositionindicatorid
    LEFT JOIN reference REF14 ON REF14.id = O.falseceilingid
    LEFT JOIN reference REF15 ON REF15.id = O.auxilarysupplysystemid
    LEFT JOIN reference REF16 ON REF16.id = O.flooringid
    LEFT JOIN reference REF17 ON REF17.id = O.operationid
    LEFT JOIN reference REF18 ON REF18.id = O.travel
    LEFT JOIN reference REF19 ON REF19.id = O.landingdoorid
    LEFT JOIN reference REF20 ON REF20.id = O.machineid
    WHERE O.id = p_id;
    
    IF((SELECT previousvalues FROM `order` WHERE id = p_id) IS NOT NULL) THEN
    
		SET @collen = 0;
		SELECT (JSON_LENGTH(previousvalues))-1 INTO @collen from `order` where id = p_id;
		
		SET @rectifiedJson = null;
		SELECT JSON_UNQUOTE(JSON_EXTRACT(previousvalues, CONCAT('$[', @collen, ']'))) INTO @rectifiedJson FROM `order` WHERE id = p_id;
		
        DROP TEMPORARY TABLE IF EXISTS temporder;
		CREATE TEMPORARY TABLE temporder
        SELECT id as orderid, quotetype,orderdate,quotename,quotestatusid,quotescore,quotecategory,quotesubcategory,leadsourceid,
        quotestageid,typeoflift,nooflifts,capacityid,modelid,driveid,machineid,controlid,operationid,speedid,typeofdoorid,landingdoorid,
        cardoorid,lowestfloorid,cwtpositionid,floorheightid,architectid,leadconsaltantid,stopsid,floormarking,allopeningsameside,frontopening,
        backopening,leftopening,rightopening,shaftwidth,shaftdepth,cardepth,carwidth,carheight,doorwidth,doorheight,travel,pitdepth,overhead,
        mrwidth,mrdepth,mrheight,groupcontrolid,siteaddress,cityid,stateid,countryid,pincode,phoneno,officialemail,contactperson,destination,
		snehasalescontactname,snehasalescontactno,revisionno,carpanelid,ventilationid,tractionmediaid,mainpowersystemid,carpositionindicatorid,
        falseceilingid,auxilarysupplysystemid,flooringid,shaftconditionid,unitid FROM(
			SELECT 
				-- JSON_EXTRACT(previousvalues, CONCAT('$[', @collen, '].leadid')) AS leadid,
				JSON_EXTRACT(@rectifiedJson, '$.id') AS id,
				JSON_EXTRACT(@rectifiedJson, '$.quotetype') AS quotetype,
				JSON_EXTRACT(@rectifiedJson, '$.orderdate') AS orderdate,
				JSON_EXTRACT(@rectifiedJson, '$.quotename') AS quotename,
				JSON_EXTRACT(@rectifiedJson, '$.quotestatusid') AS quotestatusid,
				JSON_EXTRACT(@rectifiedJson, '$.quotescore') AS quotescore,
				JSON_EXTRACT(@rectifiedJson, '$.quotecategory') AS quotecategory,
				JSON_EXTRACT(@rectifiedJson, '$.quotesubcategory') AS quotesubcategory,
				JSON_EXTRACT(@rectifiedJson, '$.leadsourceid') AS leadsourceid,
				JSON_EXTRACT(@rectifiedJson, '$.quotestageid') AS quotestageid,
				JSON_EXTRACT(@rectifiedJson, '$.typeoflift') AS typeoflift,
				JSON_EXTRACT(@rectifiedJson, '$.nooflifts') AS nooflifts,        
				JSON_EXTRACT(@rectifiedJson, '$.capacityid') AS capacityid,
				JSON_EXTRACT(@rectifiedJson, '$.modelid') AS modelid,
				JSON_EXTRACT(@rectifiedJson, '$.driveid') AS driveid,
				JSON_EXTRACT(@rectifiedJson, '$.machineid') AS machineid,
				JSON_EXTRACT(@rectifiedJson, '$.controlid') AS controlid,
				JSON_EXTRACT(@rectifiedJson, '$.operationid') AS operationid,
				JSON_EXTRACT(@rectifiedJson, '$.speedid') AS speedid,
				JSON_EXTRACT(@rectifiedJson, '$.typeofdoorid') AS typeofdoorid,
				JSON_EXTRACT(@rectifiedJson, '$.landingdoorid') AS landingdoorid,
				JSON_EXTRACT(@rectifiedJson, '$.cardoorid') AS cardoorid,
				JSON_EXTRACT(@rectifiedJson, '$.lowestfloorid') AS lowestfloorid,
				JSON_EXTRACT(@rectifiedJson, '$.cwtpositionid') AS cwtpositionid,
				JSON_EXTRACT(@rectifiedJson, '$.floorheaightid') AS floorheightid,
				JSON_EXTRACT(@rectifiedJson, '$.architectidid') AS architectid,
				JSON_EXTRACT(@rectifiedJson, '$.leadconsaltantid') AS leadconsaltantid,
				JSON_EXTRACT(@rectifiedJson, '$.stopsid') AS stopsid,
				JSON_EXTRACT(@rectifiedJson, '$.floormarking') AS floormarking,
				JSON_EXTRACT(@rectifiedJson, '$.allopeningsameside') AS allopeningsameside,
				JSON_EXTRACT(@rectifiedJson, '$.frontopening') AS frontopening,
				JSON_EXTRACT(@rectifiedJson, '$.backopening') AS backopening,
				JSON_EXTRACT(@rectifiedJson, '$.leftopening') AS leftopening,
				JSON_EXTRACT(@rectifiedJson, '$.rightopening') AS rightopening,
				JSON_EXTRACT(@rectifiedJson, '$.shaftwidth') AS shaftwidth,
				JSON_EXTRACT(@rectifiedJson, '$.shaftdepth') AS shaftdepth,
				JSON_EXTRACT(@rectifiedJson, '$.cardepth') AS cardepth,
				JSON_EXTRACT(@rectifiedJson, '$.carwidth') AS carwidth,
				JSON_EXTRACT(@rectifiedJson, '$.carheight') AS carheight,
				JSON_EXTRACT(@rectifiedJson, '$.doorwidth') AS doorwidth,
				JSON_EXTRACT(@rectifiedJson, '$.doorheight') AS doorheight,
				JSON_EXTRACT(@rectifiedJson, '$.travel') AS travel,
				JSON_EXTRACT(@rectifiedJson, '$.pitdepth') AS pitdepth,
				JSON_EXTRACT(@rectifiedJson, '$.overhead') AS overhead,
				JSON_EXTRACT(@rectifiedJson, '$.mrwidth') AS mrwidth,
				JSON_EXTRACT(@rectifiedJson, '$.mrdepth') AS mrdepth,
				JSON_EXTRACT(@rectifiedJson, '$.mrheight') AS mrheight,
				JSON_EXTRACT(@rectifiedJson, '$.groupcontrolid') AS groupcontrolid,
				JSON_EXTRACT(@rectifiedJson, '$.siteaddress') AS siteaddress,
				JSON_EXTRACT(@rectifiedJson, '$.cityid') AS cityid,
				JSON_EXTRACT(@rectifiedJson, '$.stateid') AS stateid,
				JSON_EXTRACT(@rectifiedJson, '$.countryid') AS countryid,
				JSON_EXTRACT(@rectifiedJson, '$.pincode') AS pincode,
				JSON_EXTRACT(@rectifiedJson, '$.phoneno') AS phoneno,
				JSON_EXTRACT(@rectifiedJson, '$.officialemail') AS officialemail,
				JSON_EXTRACT(@rectifiedJson, '$.contactperson') AS contactperson,
				JSON_EXTRACT(@rectifiedJson, '$.destination') AS destination,
				JSON_EXTRACT(@rectifiedJson, '$.snehasalescontactname') AS snehasalescontactname,
				JSON_EXTRACT(@rectifiedJson, '$.snehasalescontactno') AS snehasalescontactno,
				JSON_EXTRACT(@rectifiedJson, '$.revisionno') AS revisionno,
				JSON_EXTRACT(@rectifiedJson, '$.carpanelid') AS carpanelid,
				JSON_EXTRACT(@rectifiedJson, '$.ventilationid') AS ventilationid,
				JSON_EXTRACT(@rectifiedJson, '$.tractionmediaid') AS tractionmediaid,
				JSON_EXTRACT(@rectifiedJson, '$.mainpowersystemid') AS mainpowersystemid,
				JSON_EXTRACT(@rectifiedJson, '$.carpositionindicatorid') AS carpositionindicatorid,
				JSON_EXTRACT(@rectifiedJson, '$.falseceilingid') AS falseceilingid,
				JSON_EXTRACT(@rectifiedJson, '$.auxilarysupplysystemid') AS auxilarysupplysystemid,
				JSON_EXTRACT(@rectifiedJson, '$.flooringid') AS flooringid,
				JSON_EXTRACT(@rectifiedJson, '$.shaftconditionid') AS shaftconditionid,
				JSON_EXTRACT(@rectifiedJson, '$.unitid') AS  unitid
			FROM `order` WHERE id = p_id) as orderdetails;
            
			-- GET PREVIOUS VALUES DESCRIPTIONS FROM REFERENCE TABLE
            SELECT 
				REF.description as model,
                REF1.description as capacity,
                REF2.description as speed,
                REF3.description as travel,
                TMO.speedid,
                REF4.description as control,
                GROUP_CONCAT(REF5.description,' mts') as drive,
				ifnull(GROUP_CONCAT(CAST(TMO.shaftwidth AS UNSIGNED),'mm(W)','X',CAST(TMO.shaftdepth AS UNSIGNED),'mm(D) (',IFNULL(REF7.description,'-'),')'),'-') as shaftsize,
				ifnull(GROUP_CONCAT(CAST(TMO.carwidth AS UNSIGNED),'mm(W)','X',CAST(TMO.cardepth AS UNSIGNED),'mm(D)','X',CAST(TMO.carheight AS UNSIGNED),'mm(H) (Approximately)'),'-') as carsize,
				ifnull(GROUP_CONCAT(CAST(TMO.doorwidth AS UNSIGNED), 'mm Open','X',CAST(TMO.doorheight AS UNSIGNED),'mm Height'),'-') as clearopening,
				ifnull(CONCAT(CAST(TMO.pitdepth AS UNSIGNED),'mm'),'-')as pitdepth,
				ifnull(CONCAT(CAST(TMO.overhead AS UNSIGNED),'mm'),'-')as overhead,
				ifnull(CONCAT(REF6.description,'(Manual)'),'-') as cardoor,
                REF8.description as cwtposition,
				REF9.description as carpanel,
				REF10.description as ventilation,
				REF11.description as tractionmedia,
				REF12.description as mainpowersystem,
				REF13.description as carpositionindicator,
				REF14.description as falseceiling,
				REF15.description as auxilarysupplysystem,
				REF16.description as flooring,
				REF17.description as operation,
				REF18.description as travel,
				CAST(TMO.stopsid AS UNSIGNED) as stop,
				REF19.description as landingdoor,
				REF20.description as machine
            FROM temporder TMO
            LEFT JOIN reference REF ON REF.id = CAST(TMO.modelid AS UNSIGNED)
            LEFT JOIN reference REF1 ON REF1.id = CAST(TMO.capacityid AS UNSIGNED)
            LEFT JOIN reference REF2 ON REF2.id = CAST(TMO.speedid AS UNSIGNED)
            LEFT JOIN reference REF3 ON REF3.id = CAST(TMO.travel AS UNSIGNED)
            LEFT JOIN reference REF4 ON REF4.id = CAST(TMO.controlid AS UNSIGNED)
            LEFT JOIN reference REF5 ON REF5.id = CAST(TMO.driveid AS UNSIGNED)
			LEFT JOIN reference REF6 ON REF6.id = CAST(TMO.cardoorid AS UNSIGNED)
			LEFT JOIN reference REF7 ON REF7.id = CAST(TMO.shaftconditionid AS UNSIGNED)
			LEFT JOIN reference REF8 ON REF8.id = CAST(TMO.cwtpositionid AS UNSIGNED)
			LEFT JOIN reference REF9 ON REF9.id = CAST(TMO.carpanelid AS UNSIGNED)
			LEFT JOIN reference REF10 ON REF10.id = CAST(TMO.ventilationid AS UNSIGNED)
			LEFT JOIN reference REF11 ON REF11.id = CAST(TMO.tractionmediaid AS UNSIGNED)
			LEFT JOIN reference REF12 ON REF12.id = CAST(TMO.mainpowersystemid AS UNSIGNED)
			LEFT JOIN reference REF13 ON REF13.id = CAST(TMO.carpositionindicatorid AS UNSIGNED)
			LEFT JOIN reference REF14 ON REF14.id = CAST(TMO.falseceilingid AS UNSIGNED)
			LEFT JOIN reference REF15 ON REF15.id = CAST(TMO.auxilarysupplysystemid AS UNSIGNED)
			LEFT JOIN reference REF16 ON REF16.id = CAST(TMO.flooringid AS UNSIGNED)
			LEFT JOIN reference REF17 ON REF17.id = CAST(TMO.operationid AS UNSIGNED)
			LEFT JOIN reference REF18 ON REF18.id = CAST(TMO.travel AS UNSIGNED)
			LEFT JOIN reference REF19 ON REF19.id = CAST(TMO.landingdoorid AS UNSIGNED)
			LEFT JOIN reference REF20 ON REF20.id = CAST(TMO.machineid AS UNSIGNED);
	END IF;
END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_quotation_save`;

DELIMITER $$
CREATE PROCEDURE `spc_quotation_save`(
	IN p_id int(11), 
	IN p_leadid int(11), 
	IN p_quotevalue decimal(12,3), 
    IN p_withgst TINYINT(4),
	IN p_quotetype int(11), 
	IN p_quotedate date, 
	IN p_quotename varchar(45), 
	IN p_quotediscription varchar(45), 
	IN p_quotestatusid int(11), 
	IN p_quotescore decimal(9,3), 
	IN p_quotecategory int(11), 
	IN p_quotesubcategory int(11), 
	IN p_leadsourceid int(11),
	IN p_quotestageid int(11), 
	IN p_typeoflift int(11), 
	IN p_nooflifts int(11), 
	IN p_capacityid int(11), 
	IN p_modelid int(11), 
	IN p_driveid int(11), 
	IN p_machineid int(11), 
	IN p_controlid int(11), 
	IN p_groupcontrolid int(11), 
	IN p_operationid int(11), 
	IN p_speedid int(11), 
	IN p_typeofdoorid int(11), 
	IN p_landingdoorid int(11), 
	IN p_cardoorid int(11), 
	IN p_lowestfloorid int(11), 
	IN p_cwtpositionid int(11), 
	IN p_floorheaightid int(11), 
    IN p_carpanelid int(11),
    IN p_ventilationid int(11),
    IN p_tractionmediaid int(11),
    IN p_mainpowersystemid int(11),
    IN p_carpositionindicatorid int(11),
    IN p_falseceilingid int(11),
    IN p_auxilarysupplysystemid int(11),
    IN p_flooringid int(11),
	IN p_architectidid int(11), 
	IN p_consaltantid int(11), 
	IN p_stopsid int(11), 
	IN p_floormarking int(11), 
	IN p_allopeningsameside varchar(45), 
	IN p_frontopening varchar(45), 
	IN p_backopening varchar(45), 
	IN p_leftopening varchar(45), 
	IN p_rightopening varchar(45), 
	IN p_shaftwidth int(11), 
	IN p_shaftdepth int(11), 
    IN p_shaftconditionid INT(11),
    IN p_unitid INT(11),
	IN p_cardepth int(11), 
	IN p_carwidth int(11), 
	IN p_carheight int(11), 
	IN p_doorwidth int(11), 
	IN p_doorheight int(11), 
	IN p_travel varchar(45), 
	IN p_pitdepth int(11), 
	IN p_overhead int(11), 
	IN p_mrwidth int(11), 
	IN p_mrdepth int(11), 
	IN p_mrheight int(11), 
	IN p_isdeleted tinyint(4), 
	IN p_winprobability decimal(9,3), 
	IN p_siteaddress varchar(150),
    IN p_leadstatus INT(11),
    IN p_locationid int(11),
	IN p_cityid int(11), 
	IN p_stateid int(11), 
	IN p_countryid int(11), 
	IN p_pincode int(11), 
	IN p_phoneno VARCHAR(45), 
	IN p_officialemail varchar(100), 
	IN p_gstn varchar(100), 
	IN p_panno varchar(100), 
	IN p_sociallink1 varchar(100), 
	IN p_sociallink2 varchar(100), 
	IN p_sociallink3 varchar(100),
	IN p_primarycontactid varchar(45), 
	IN p_contactperson varchar(45), 
	IN p_designation varchar(45), 
	IN p_mobileno1 varchar(45), 
    IN p_completiondays INT(11),
    IN p_remark1 VARCHAR(100),
    IN p_remark2 VARCHAR(100),
    IN p_remark3 VARCHAR(100),
    IN p_remark4 VARCHAR(100),
    IN p_remark5 VARCHAR(100),
    IN p_advanceonorderreception DECIMAL(9,3),
    IN p_forrequestofmechanicalmaterial DECIMAL(9,3),
    IN p_forrequestofelectricalmaterial DECIMAL(9,3),
    IN p_oncustomerhandover DECIMAL(9,3),
	IN p_companyid int(11),
	IN p_userid INT(11), 
	OUT out_id INT
)
BEGIN

	SET @action = null;
    
    SET @revisionno = null;
    SELECT count(*) INTO @revisionno FROM quotation WHERE leadid = p_leadid;

	IF(NULLIF(p_id, '0') IS NULL) THEN
		
		INSERT INTO quotation(id,
							  leadid,
							  quotevalue,
                              withgst,
                              quotetype,
                              quotedate,
                              quotename,
                              quotediscription,
                              quotestatusid,
                              quotescore,
                              quotecategory, 
							  quotesubcategory,
                              leadsourceid,
                              quotestageid,
                              typeoflift,
                              nooflifts,
                              capacityid,
                              modelid,
                              driveid,
                              machineid, 
                              controlid,
                              operationid,
                              speedid,
                              typeofdoorid,
                              landingdoorid,
                              cardoorid,
                              lowestfloorid,
                              cwtpositionid,
                              floorheaightid,
                              carpanelid,
							  ventilationid,
							  tractionmediaid,
							  mainpowersystemid,
							  carpositionindicatorid,
							  falseceilingid,
							  auxilarysupplysystemid,
							  flooringid,
                              architectidid, 
                              leadconsaltantid,
                              stopsid,
                              floormarking,
                              allopeningsameside,
                              frontopening,
                              backopening,
                              leftopening,
                              rightopening, 
                              shaftwidth,
                              shaftdepth,
                              shaftconditionid,
                              unitid,
                              cardepth,
                              carwidth,
                              carheight,
                              doorwidth,
                              doorheight,
                              travel,
                              pitdepth,
                              overhead,
                              mrwidth,
                              mrdepth, 
                              mrheight,
                              isdeleted,
                              groupcontrolid,
                              winprobability,
                              siteaddress,
                              cityid,
                              stateid,
                              countryid,
                              pincode,
                              phoneno,
                              officialemail,
                              gstn,
                              panno,
                              sociallink1,
                              sociallink2,
                              sociallink3,
                              primarycontactid,
                              contactperson,
                              designation,
                              mobileno1,
                              completiondays,
                              revisionno,
                              remark1,
                              remark2,
                              remark3,
                              remark4,
                              remark5,
                              advanceonorderreception,
                              forrequestofmechanicalmaterial,
                              forrequestofelectricalmaterial,
							  oncustomerhandover,
                              companyid)
					   VALUES (p_id,
                               p_leadid,
						       p_quotevalue,
                               p_withgst,
                               p_quotetype,
                               p_quotedate,
                               p_quotename,
                               p_quotediscription,
                               p_quotestatusid,
                               p_quotescore,
                               p_quotecategory, 
							   p_quotesubcategory,
                               p_leadsourceid,
                               p_quotestageid,
                               p_typeoflift,
                               p_nooflifts,
                               p_capacityid,
                               p_modelid,
                               p_driveid,
                               p_machineid, 
                               p_controlid,
                               p_operationid,
                               p_speedid,
                               p_typeofdoorid,
                               p_landingdoorid,
                               p_cardoorid,
                               p_lowestfloorid,
                               p_cwtpositionid,
                               p_floorheaightid,
                               p_carpanelid,
							   p_ventilationid,
							   p_tractionmediaid,
							   p_mainpowersystemid,
							   p_carpositionindicatorid,
							   p_falseceilingid,
							   p_auxilarysupplysystemid,
							   p_flooringid,
                               p_architectidid, 
                               p_consaltantid,
                               p_stopsid,
                               p_floormarking,
                               p_allopeningsameside,
                               p_frontopening,
                               p_backopening,
                               p_leftopening,
                               p_rightopening, 
                               p_shaftwidth,
                               p_shaftdepth,
                               p_shaftconditionid,
                               p_unitid,
                               p_cardepth,
                               p_carwidth,
                               p_carheight,
                               p_doorwidth,
                               p_doorheight,
                               p_travel,
                               p_pitdepth,
                               p_overhead,
                               p_mrwidth,
                               p_mrdepth, 
                               p_mrheight,
                               0,
                               p_groupcontrolid,
                               p_winprobability,
                               p_siteaddress,
                               p_cityid,
                               p_stateid,
                               p_countryid,
                               p_pincode,
                               p_phoneno,
                               p_officialemail,
                               p_gstn,
                               p_panno,
                               p_sociallink1,
                               p_sociallink2,
                               p_sociallink3,
                               p_primarycontactid,
                               p_contactperson,
                               p_designation,
                               p_mobileno1,
                               p_completiondays,
                               (@revisionno + 1),
							   p_remark1,
							   p_remark2,
							   p_remark3,
							   p_remark4,
							   p_remark5,
                               p_advanceonorderreception,
                               p_forrequestofmechanicalmaterial,
                               p_forrequestofelectricalmaterial,
							   p_oncustomerhandover,
                               p_companyid);
		
		SET @action = 'INSERT';
	
	ELSE
		UPDATE quotation
		SET 
            leadid = p_leadid,
            quotevalue = p_quotevalue,
            withgst = p_withgst,
            quotetype = p_quotetype,
            quotedate = p_quotedate,
            quotename = p_quotename,
            quotediscription = p_quotediscription,
            quotestatusid = p_quotestatusid,
            quotescore = p_quotescore,
            quotecategory = p_quotecategory,
            quotesubcategory = p_quotesubcategory,
            leadsourceid = p_leadsourceid,
            quotestageid = p_quotestageid,
            typeoflift = p_typeoflift,
            nooflifts = p_nooflifts,
            capacityid = p_capacityid,
            modelid = p_modelid,
            driveid = p_driveid,
            machineid = p_machineid,
			controlid = p_controlid,
            operationid = p_operationid,
            speedid = p_speedid,
            typeofdoorid = p_typeofdoorid,
            landingdoorid = p_landingdoorid,
            cardoorid = p_cardoorid,
            lowestfloorid = p_lowestfloorid,
            cwtpositionid = p_cwtpositionid,
            floorheaightid = p_floorheaightid,
            carpanelid = p_carpanelid,
			ventilationid = p_ventilationid,
			tractionmediaid = p_tractionmediaid,
			mainpowersystemid = p_mainpowersystemid,
			carpositionindicatorid = p_carpositionindicatorid,
			falseceilingid = p_falseceilingid,
			auxilarysupplysystemid = p_auxilarysupplysystemid,
			flooringid = p_flooringid,
            architectidid = p_architectidid, 
			leadconsaltantid = p_consaltantid,
            stopsid = p_stopsid,
            floormarking = p_floormarking,
            allopeningsameside = p_allopeningsameside,
            frontopening = p_frontopening,
            backopening = p_backopening,
            leftopening = p_leftopening,
            rightopening = p_rightopening, 
			shaftwidth = p_shaftwidth,
            shaftdepth = p_shaftdepth,
            shaftconditionid = p_shaftconditionid,
			unitid = p_unitid,
            cardepth = p_cardepth,
            carwidth = p_carwidth,
            carheight = p_carheight,
            doorwidth = p_doorwidth,
            doorheight = p_doorheight,
            travel = p_travel,
            pitdepth = p_pitdepth,
            overhead = p_overhead,
            mrwidth = p_mrwidth,
            mrdepth = p_mrdepth, 
			mrheight = p_mrheight,
            isdeleted = p_isdeleted,
            groupcontrolid = p_groupcontrolid,
            winprobability = p_winprobability,
            siteaddress = p_siteaddress,
            cityid = p_cityid,
            stateid = p_stateid,
            countryid = p_countryid,
            pincode = p_pincode,
            phoneno = p_phoneno,
			officialemail = p_officialemail,
            gstn = p_gstn,
            panno = p_panno,
            sociallink1 = p_sociallink1,
            sociallink2 = p_sociallink2,
            sociallink3 = p_sociallink3,
            primarycontactid = p_primarycontactid,
            contactperson = p_contactperson,
            designation = p_designation,
			mobileno1 = p_mobileno1,
            completiondays = p_completiondays,
			remark1 = p_remark1,
			remark2 = p_remark2,
			remark3 = p_remark3,
			remark4 = p_remark4,
			remark5 = p_remark5,
            companyid = p_companyid,
            advanceonorderreception = p_advanceonorderreception,
			forrequestofmechanicalmaterial = p_forrequestofmechanicalmaterial,
			forrequestofelectricalmaterial = p_forrequestofelectricalmaterial,
			oncustomerhandover = p_oncustomerhandover,
			id = LAST_INSERT_ID(id)
			
		WHERE id = p_id
		AND companyid = p_companyid;
         
         UPDATE leads L
         SET
		 L.locationid=p_locationid,
         L.leadstatus=p_leadstatus
         WHERE L.id = p_leadid 
		 AND companyid = p_companyid;
                

		SET @action = 'UPDATE';
		
	END IF;
	
	SELECT LAST_INSERT_ID() INTO OUT_ID;
    
END$$

DELIMITER ;
;

DROP procedure IF EXISTS `spc_quotation_search`;

DELIMITER $$
CREATE PROCEDURE `spc_quotation_search`(
	IN p_companyid INT(11)
)
BEGIN

	SELECT 
    Q.id,
    Q.leadid,
    Q.quotevalue,
    Q.quotetype,
	DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
    Q.quotename,
    Q.quotediscription,
    Q.quotestatusid,
    -- Q.quotescore,
    Q.quotecategory,
    Q.quotesubcategory,
    L.leadscore,
    Q.companyid,
    L.leadname,
    R.description as leadstatus,
    R1.description as quotecategory,
    Q.advanceonorderreception,
	Q.forrequestofmechanicalmaterial,
	Q.forrequestofelectricalmaterial,
	Q.oncustomerhandover
    
    FROM quotation Q
    LEFT JOIN leads L ON L.id = Q.leadid
    LEFT JOIN reference R ON R.id =  Q.quotestatusid
    LEFT JOIN reference R1 ON R1.id =  Q.quotecategory
    WHERE Q.companyid = p_companyid;

END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_quotation_select`;

DELIMITER $$
CREATE PROCEDURE `spc_quotation_select`(
	IN p_id INT(11)
)
BEGIN
	SELECT 
				Q.id,
                Q.id as quotationid,
				Q.leadid,
                Q.groupcontrolid,
                Q.quotestatusid,
				Q.quotevalue,
				Q.quotetype,
                DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
				Q.quotename,
				Q.quotediscription,
				Q.quotestatusid,
				Q.quotescore,
				Q.quotecategory,
				Q.quotesubcategory,
				Q.companyid,
				Q.completiondays,
				L.leadname,
                L.mobileno,
                L.companyname,
                L.email,
                L.sourceid,
                L.stageid,
                L.leadscategory,
                L.leadvalue,
                L.typeoflift,
                L.nooflifts,
                L.contactperson,
                L.leadstatus,
                L.locationid,
                L.salesrep,
                Q.capacityid,
                Q.modelid,
                Q.driveid,
                Q.machineid,
                Q.controlid,
                Q.operationid,
                Q.speedid,
                Q.typeofdoorid,
				Q.landingdoorid,
				Q.cardoorid,
				Q.lowestfloorid,
				Q.cwtpositionid,
				Q.floorheaightid,
				Q.architectidid,
				Q.leadconsaltantid,
                Q.officialemail,
                Q.gstn,
                Q.panno,
                Q.primarycontactid,
                Q.designation,
                Q.mobileno1,
                Q.includinggst,
				DATE_FORMAT(L.leaddate,'%d/%m/%Y') as leaddate,
				L.phoneno,
				L.leaddescription,
				L.leadscore,
                L.salesrep,
				L.cityid,
				L.stateid,
				L.pincode,
				Q.stopsid,
				Q.floormarking,
				Q.allopeningsameside,
				Q.frontopening,
				Q.backopening,
				Q.leftopening,
                Q.leadsourceid,
				Q.rightopening,
				Q.shaftwidth,
				Q.shaftdepth,
                Q.shaftconditionid,
                Q.unitid,
				Q.cardepth,
				Q.carwidth,
				Q.carheight,
				Q.doorwidth,
				Q.doorheight,
				Q.travel,
                Q.remark1,
			    Q.remark1,
			    Q.remark2,
			    Q.remark3,
			    Q.remark4,
			    Q.remark5,
				Q.pitdepth,
				Q.overhead,
				Q.mrwidth,
				Q.mrdepth,
				Q.mrheight,
				Q.mainpowersystemid,
                Q.carpositionindicatorid,
                Q.falseceilingid,
                Q.tractionmediaid,
                Q.auxilarysupplysystemid,
                Q.carpanelid,
                Q.ventilationid,
                Q.flooringid,
				L.companyname,
				L.countryid,
				L.linkedin,
				L.facebook,
				L.youtube,
                R.description as leadstatusdetail,
				R1.description as quotecategorydetail,
                Q.advanceonorderreception,
				Q.forrequestofmechanicalmaterial,
				Q.forrequestofelectricalmaterial,
				Q.oncustomerhandover
                 
    FROM quotation Q
    
    LEFT JOIN leads L ON L.id = Q.leadid
	LEFT JOIN reference R ON R.id =  Q.quotestatusid
    LEFT JOIN reference R1 ON R1.id =  Q.quotecategory
    WHERE Q.id = p_id;
END$$

DELIMITER ;
;

DROP procedure IF EXISTS `spc_quotepdf`;

DELIMITER $$
CREATE PROCEDURE `spc_quotepdf`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
        Q.id as negno,
		   Q.quotename,
		   Q.siteaddress,
           DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
           Q.contactperson,
           Q.snehasalescontactname,
           Q.snehasalescontactno,
           Q.designation,
		   REF.description as modelcode,
           REF1.description as lifttype,
           REF2.description as capacity,
           REF3.description as speed,
           Q.stopsid,
           REF4.description as controller,
           GROUP_CONCAT(REF5.description,' mts') as drive,
           ifnull(GROUP_CONCAT(Q.shaftwidth,'mm(W)','X',Q.shaftdepth,'mm(D) (',IFNULL(REF7.description,'-'),')'),'-') as shaftsize,
           ifnull(GROUP_CONCAT(Q.carwidth,'mm(W)','X',Q.cardepth,'mm(D)','X',Q.carheight,'mm(H) (Approximately)'),'-') as carsize,
           ifnull(GROUP_CONCAT(Q.doorwidth, 'mm Open','X',Q.doorheight,'mm Height'),'-') as clearopening,
           ifnull(CONCAT(Q.pitdepth,'mm'),'-')as pitdepth,
           ifnull(CONCAT(Q.overhead,'mm'),'-')as overhead,
           ifnull(CONCAT(REF6.description,'(Manual)'),'-') as cardoor,
           GROUP_CONCAT(REGEXP_SUBSTR(REF2.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF.description,' Unit:',Q.nooflifts) as specificationheader,
           Q.advanceonorderreception,
		   Q.forrequestofmechanicalmaterial,
		   Q.forrequestofelectricalmaterial,
		   Q.oncustomerhandover
	FROM quotation Q
    LEFT JOIN city C ON C.id = Q.cityid
    LEFT JOIN reference REF ON REF.id = Q.modelid
    LEFT JOIN reference REF1 ON REF1.id = Q.typeoflift
    LEFT JOIN reference REF2 ON REF2.id = Q.capacityid
    LEFT JOIN reference REF3 ON REF3.id = Q.speedid
    LEFT JOIN reference REF4 ON REF4.id = Q.controlid
    LEFT JOIN reference REF5 ON REF5.id = Q.driveid
    LEFT JOIN reference REF6 ON REF6.id = Q.cardoorid
	LEFT JOIN reference REF7 ON REF7.id = Q.shaftconditionid
    WHERE Q.id = p_id;
    
    select ifnull(leadname,'-')as leadname,
		   ifnull(address,'-')as address,
           ifnull(shaftwidth,'-')as shaftwidth,
           ifnull(carwidth,'-')as carwidth,
           ifnull(pitdepth,'-')as pitdepth,
           ifnull(overhead,'-')as overhead,
           ifnull(city,'-')as city,
           ifnull(contactno,'-')as contactno,
           ifnull(quotedate,'-')as quotedate,
           ifnull(quotevalue,'-')as quotevalue,
           ifnull(model,'-')as model,
           ifnull(capacity,'-')as capacity,
           ifnull(speed,'-')as speed,
           ifnull(`stop`,'-')as `stop`,
           ifnull(control,'-')as control,
           ifnull(drive,'-')as drive,
           ifnull(allopeningsameside,'-')as allopeningsameside,
           ifnull(cardoor,'-')as cardoor,
           ifnull(specificationheader,'-') as specificationheader,
           ifnull(landingdoor,'-')as landingdoor,
           ifnull(floormarking,'-')as floormarking,
		   ifnull(machine,'-')as machine,
           ifnull(cityuppercase,'-')as cityuppercase,
           ifnull(month,'-')as month,
           year,
           version,
		   CONCAT('SELLP/',cityuppercase,'/',month,'/',year,'/',quoteid,'/',version) as negno,
           modeldetails,
           ifnull(travel,'-')as travel,
           result,
           unit,
           ifnull(carpanel,'-')as carpanel,
           ifnull(ventilation,'-')as ventilation,
           ifnull(tractionmedia,'-')as tractionmedia,
           ifnull(mainpowersystem,'-')as mainpowersystem,
           ifnull(carpositionindicator,'-')as carpositionindicator,
           ifnull(falseceiling,'-')as falseceiling,
           ifnull(auxilarysupplysystem,'-')as auxilarysupplysystem,
           ifnull(flooring,'-')as flooring,
           ifnull(operation,'-')as operation
	from(
	select 
			 -- GROUP_CONCAT('ELE/',Q.id) as negno,
			 L.leadname,
			 L.address,
			 Q.modelid,
			 Q.capacityid,
			 Q.speedid,
			 Q.stopsid,
			 Q.controlid,
			 Q.driveid,
			 Q.shaftwidth,
			 Q.carwidth,
			 Q.allopeningsameside as allopeningsamesideid,
			 Q.pitdepth,
			 Q.overhead,
			 Q.cardoorid,
             GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF5.description,' Unit:',Q.nooflifts) as specificationheader,
			 Q.landingdoorid,
             GROUP_CONCAT(Q.travel,'mts') as travel,
             -- 6P - 7S(C+G+5) - REF.description - S.S Car Panel - cwtposition 
			GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' ', '-',' ',Q.stopsid,'S(G','+',(Q.stopsid-1),')',' ','-',' ',REF.description,' ','-',' ',ifnull(REF12.description,'-'),' ',REF8.description) as modeldetails,
			GROUP_CONCAT(Q.nooflifts,' ','Units') as unit,
            REGEXP_SUBSTR(REF1.description, '[0-9]+') AS result,
            Q.floormarking as floormarkingid,
			Q.machineid,
			GROUP_CONCAT(C.cityname,' ','-',' ',L.pincode) as city,
			L.mobileno as contactno,
            DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
            Q.quotevalue,
            Q.cwtpositionid,
            REF.description as model,
            REF1.description as capacity,
            REF2.description as speed,
            Q.stopsid  as stop,
            REF4.description as control,
            REF5.description as drive,
            REF6.description as allopeningsameside,
            REF7.description as cardoor,
            REF8.description as landingdoor,
            REF9.description as floormarking,
            REF10.description as machine,
			REF11.description as cwtposition,
			REF12.description as carpanel,
            REF13.description as ventilation,
            REF14.description as tractionmedia,
            REF15.description as mainpowersystem,
            REF16.description as carpositionindicator,
            REF17.description as falseceiling,
            REF18.description as auxilarysupplysystem,
			REF19.description as flooring,
            REF20.description as operation,
			UPPER(SUBSTRING( CO.city, 1, 3)) as cityuppercase,
			MONTHNAME(Q.quotedate) AS month,
            YEAR(Q.quotedate) AS year,
            Q.leadid,
            Q.id as quoteid,
            ( select
			ROW_NUMBER() OVER (ORDER BY id)  Sequence_no
			-- id as quoteid
			from quotation 
			where leadid = Q.leadid order by id DESC limit 1)as version
            
            
		
		from quotation Q
		LEFT JOIN leads L ON L.id = Q.leadid
		LEFT JOIN city C ON L.cityid = C.id
		LEFT JOIN company CO ON CO.id = Q.companyid
		LEFT JOIN reference REF ON REF.id = Q.modelid
		LEFT JOIN reference REF1 ON REF1.id = Q.capacityid
		LEFT JOIN reference REF2 ON REF2.id = Q.speedid
		LEFT JOIN reference REF3 ON REF3.id = Q.stopsid
		LEFT JOIN reference REF4 ON REF4.id = Q.controlid
		LEFT JOIN reference REF5 ON REF5.id = Q.driveid
		LEFT JOIN reference REF6 ON REF6.id = Q.allopeningsameside
        LEFT JOIN reference REF7 ON REF7.id = Q.cardoorid
		LEFT JOIN reference REF8 ON REF8.id = Q.landingdoorid
		LEFT JOIN reference REF9 ON REF9.id = Q.floormarking
        LEFT JOIN reference REF10 ON REF10.id = Q.machineid
        LEFT JOIN reference REF11 ON REF11.id = Q.cwtpositionid
        LEFT JOIN reference REF12 ON REF12.id = Q.carpanelid
		LEFT JOIN reference REF13 ON REF13.id = Q.ventilationid
        LEFT JOIN reference REF14 ON REF14.id = Q.tractionmediaid
		LEFT JOIN reference REF15 ON REF15.id = Q.mainpowersystemid
		LEFT JOIN reference REF16 ON REF16.id = Q.carpositionindicatorid
        LEFT JOIN reference REF17 ON REF17.id = Q.falseceilingid
        LEFT JOIN reference REF18 ON REF18.id = Q.auxilarysupplysystemid
		LEFT JOIN reference REF19 ON REF19.id = Q.flooringid
        LEFT JOIN reference REF20 ON REF20.id = Q.operationid
		where Q.id=p_id)temp;
        
		SELECT
           -- IFNULL((UR.username),'-') as salemanager,
           ifnull(UR.username,'-') assalemanager,
           CONCAT('Contact No.','-','  ',UR.mobile) as salecontactno
			FROM user1 UR
			INNER JOIN userlicense UL ON UR.id = UL.userid
			INNER JOIN `role` R ON UL.roleid = R.id
        WHERE R.description = 'Sales Manager';

END$$

DELIMITER ;
;

DROP procedure IF EXISTS `spc_convertto_quote`;

DELIMITER $$
CREATE PROCEDURE `spc_convertto_quote`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
L.leadname,
L.mobileno,
L.companyname,
L.email ,
L.sourceid ,
L.stageid ,
L.leadscategory,
L.leadvalue,
L.typeoflift ,
L.nooflifts ,
L.contactperson ,
L.leadstatus ,
L.locationid ,
L.salesrep ,
L.capacityid ,
L.modelid ,
L.driveid ,
L.machineid , 
L.controlid ,
L.operationid ,
L.speedid ,
L.typeofdoorid ,
L.landingdoorid ,
L.cardoorid ,
L.lowestfloorid ,
L.cwtpositionid ,
L.floorheaightid ,
L.architectidid ,
L.leadconsaltantid ,
L.leaddate ,
L.leadscore ,
L.leaddescription  ,
L.cityid  ,
L.stateid ,
L.countryid ,
L.phoneno , 
L.linkedin ,
L.facebook ,
L.youtube , 
L.pincode , 
L.stopsid ,
L.floormarking ,
L.allopeningsameside ,
L.frontopening ,
L.backopening ,
L.leftopening , 
L.rightopening, 
L.shaftwidth ,
L.shaftdepth ,
L.cardepth ,
L.carwidth ,
L.carheight , 
L.doorwidth , 
L.doorheight ,
L.travel,
L.pitdepth ,
L.overhead,
L.mrwidth , 
L.mrdepth ,
L.mrheight ,
L.leadtype,
L.isdeleted ,
L.companyid ,
L.groupcontrolid ,
L.leadsubcategoryid  ,
L.address ,
L.gstn ,
L.mobilep ,
L.scoutername ,
L.reference ,
L.preferedlead ,
L.panno ,
L.winprobability , 
L.carpanelid ,
L.ventilationid ,
L.tractionmediaid ,
L.mainpowersystemid ,
L.carpositionindicatorid ,
L.falseceilingid ,
L.auxilarysupplysystemid ,
L.flooringid,
        L.id as leadid,
		L.leadname as quotename,
		L.sourceid as leadsourceid,
		L.stageid as quotestageid,
		L.leadscategory as quotecategory,
        L.leadvalue as quotevalue,
        DATE_FORMAT(L.leaddate,'%d/%m/%Y') as quotedate,
        L.leaddescription as quotediscription,
        L.leadscore as quotescore,
        L.address as siteaddress,
		L.linkedin as sociallink1,
        L.facebook as sociallink2,
        L.youtube as sociallink3,
        (SELECT id FROM quotation ORDER BY id DESC LIMIT 1) as lastquoteid,
        10 as advanceonorderreception,
		60 as forrequestofmechanicalmaterial,
		25 as forrequestofelectricalmaterial,
		5 as oncustomerhandover

		FROM leads L
		WHERE L.id = p_id;

END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_quotepdf`;

DELIMITER $$
CREATE PROCEDURE `spc_quotepdf`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
        Q.id as negno,
		   Q.quotename,
		   Q.siteaddress,
           DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
           Q.contactperson,
           Q.snehasalescontactname,
           Q.snehasalescontactno,
           Q.designation,
		   REF.description as modelcode,
           REF1.description as lifttype,
           REF2.description as capacity,
           REF3.description as speed,
           Q.stopsid,
           REF4.description as controller,
           GROUP_CONCAT(REF5.description,' mts') as drive,
           ifnull(GROUP_CONCAT(Q.shaftwidth,'mm(W)','X',Q.shaftdepth,'mm(D) (',IFNULL(REF7.description,'-'),')'),'-') as shaftsize,
           ifnull(GROUP_CONCAT(Q.carwidth,'mm(W)','X',Q.cardepth,'mm(D)','X',Q.carheight,'mm(H) (Approximately)'),'-') as carsize,
           ifnull(GROUP_CONCAT(Q.doorwidth, 'mm Open','X',Q.doorheight,'mm Height'),'-') as clearopening,
           ifnull(CONCAT(Q.pitdepth,'mm'),'-')as pitdepth,
           ifnull(CONCAT(Q.overhead,'mm'),'-')as overhead,
           ifnull(CONCAT(REF6.description,'(Manual)'),'-') as cardoor,
           GROUP_CONCAT(REGEXP_SUBSTR(REF2.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF.description,' Unit:',Q.nooflifts) as specificationheader,
           IFNULL(CONCAT(Q.advanceonorderreception,'%'),'-'),
		   IFNULL(CONCAT(Q.forrequestofmechanicalmaterial,'%'),'-'),
		   IFNULL(CONCAT(Q.forrequestofelectricalmaterial,'%'),'-'),
		   IFNULL(CONCAT(Q.oncustomerhandover,'%'),'-')
	FROM quotation Q
    LEFT JOIN city C ON C.id = Q.cityid
    LEFT JOIN reference REF ON REF.id = Q.modelid
    LEFT JOIN reference REF1 ON REF1.id = Q.typeoflift
    LEFT JOIN reference REF2 ON REF2.id = Q.capacityid
    LEFT JOIN reference REF3 ON REF3.id = Q.speedid
    LEFT JOIN reference REF4 ON REF4.id = Q.controlid
    LEFT JOIN reference REF5 ON REF5.id = Q.driveid
    LEFT JOIN reference REF6 ON REF6.id = Q.cardoorid
	LEFT JOIN reference REF7 ON REF7.id = Q.shaftconditionid
    WHERE Q.id = p_id;
    
    select ifnull(leadname,'-')as leadname,
		   ifnull(address,'-')as address,
           ifnull(shaftwidth,'-')as shaftwidth,
           ifnull(carwidth,'-')as carwidth,
           ifnull(pitdepth,'-')as pitdepth,
           ifnull(overhead,'-')as overhead,
           ifnull(city,'-')as city,
           ifnull(contactno,'-')as contactno,
           ifnull(quotedate,'-')as quotedate,
           ifnull(quotevalue,'-')as quotevalue,
           ifnull(model,'-')as model,
           ifnull(capacity,'-')as capacity,
           ifnull(speed,'-')as speed,
           ifnull(`stop`,'-')as `stop`,
           ifnull(control,'-')as control,
           ifnull(drive,'-')as drive,
           ifnull(allopeningsameside,'-')as allopeningsameside,
           ifnull(cardoor,'-')as cardoor,
           ifnull(specificationheader,'-') as specificationheader,
           ifnull(landingdoor,'-')as landingdoor,
           ifnull(floormarking,'-')as floormarking,
		   ifnull(machine,'-')as machine,
           ifnull(cityuppercase,'-')as cityuppercase,
           ifnull(month,'-')as month,
           year,
           version,
		   CONCAT('SELLP/',cityuppercase,'/',month,'/',year,'/',quoteid,'/',version) as negno,
           modeldetails,
           ifnull(travel,'-')as travel,
           result,
           unit,
           ifnull(carpanel,'-')as carpanel,
           ifnull(ventilation,'-')as ventilation,
           ifnull(tractionmedia,'-')as tractionmedia,
           ifnull(mainpowersystem,'-')as mainpowersystem,
           ifnull(carpositionindicator,'-')as carpositionindicator,
           ifnull(falseceiling,'-')as falseceiling,
           ifnull(auxilarysupplysystem,'-')as auxilarysupplysystem,
           ifnull(flooring,'-')as flooring,
           ifnull(operation,'-')as operation
	from(
	select 
			 -- GROUP_CONCAT('ELE/',Q.id) as negno,
			 L.leadname,
			 L.address,
			 Q.modelid,
			 Q.capacityid,
			 Q.speedid,
			 Q.stopsid,
			 Q.controlid,
			 Q.driveid,
			 Q.shaftwidth,
			 Q.carwidth,
			 Q.allopeningsameside as allopeningsamesideid,
			 Q.pitdepth,
			 Q.overhead,
			 Q.cardoorid,
             GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF5.description,' Unit:',Q.nooflifts) as specificationheader,
			 Q.landingdoorid,
             GROUP_CONCAT(Q.travel,'mts') as travel,
             -- 6P - 7S(C+G+5) - REF.description - S.S Car Panel - cwtposition 
			GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' ', '-',' ',Q.stopsid,'S(G','+',(Q.stopsid-1),')',' ','-',' ',REF.description,' ','-',' ',ifnull(REF12.description,'-'),' ',REF8.description) as modeldetails,
			GROUP_CONCAT(Q.nooflifts,' ','Units') as unit,
            REGEXP_SUBSTR(REF1.description, '[0-9]+') AS result,
            Q.floormarking as floormarkingid,
			Q.machineid,
			GROUP_CONCAT(C.cityname,' ','-',' ',L.pincode) as city,
			L.mobileno as contactno,
            DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
            Q.quotevalue,
            Q.cwtpositionid,
            REF.description as model,
            REF1.description as capacity,
            REF2.description as speed,
            Q.stopsid  as stop,
            REF4.description as control,
            REF5.description as drive,
            REF6.description as allopeningsameside,
            REF7.description as cardoor,
            REF8.description as landingdoor,
            REF9.description as floormarking,
            REF10.description as machine,
			REF11.description as cwtposition,
			REF12.description as carpanel,
            REF13.description as ventilation,
            REF14.description as tractionmedia,
            REF15.description as mainpowersystem,
            REF16.description as carpositionindicator,
            REF17.description as falseceiling,
            REF18.description as auxilarysupplysystem,
			REF19.description as flooring,
            REF20.description as operation,
			UPPER(SUBSTRING( CO.city, 1, 3)) as cityuppercase,
			MONTHNAME(Q.quotedate) AS month,
            YEAR(Q.quotedate) AS year,
            Q.leadid,
            Q.id as quoteid,
            ( select
			ROW_NUMBER() OVER (ORDER BY id)  Sequence_no
			-- id as quoteid
			from quotation 
			where leadid = Q.leadid order by id DESC limit 1)as version
            
            
		
		from quotation Q
		LEFT JOIN leads L ON L.id = Q.leadid
		LEFT JOIN city C ON L.cityid = C.id
		LEFT JOIN company CO ON CO.id = Q.companyid
		LEFT JOIN reference REF ON REF.id = Q.modelid
		LEFT JOIN reference REF1 ON REF1.id = Q.capacityid
		LEFT JOIN reference REF2 ON REF2.id = Q.speedid
		LEFT JOIN reference REF3 ON REF3.id = Q.stopsid
		LEFT JOIN reference REF4 ON REF4.id = Q.controlid
		LEFT JOIN reference REF5 ON REF5.id = Q.driveid
		LEFT JOIN reference REF6 ON REF6.id = Q.allopeningsameside
        LEFT JOIN reference REF7 ON REF7.id = Q.cardoorid
		LEFT JOIN reference REF8 ON REF8.id = Q.landingdoorid
		LEFT JOIN reference REF9 ON REF9.id = Q.floormarking
        LEFT JOIN reference REF10 ON REF10.id = Q.machineid
        LEFT JOIN reference REF11 ON REF11.id = Q.cwtpositionid
        LEFT JOIN reference REF12 ON REF12.id = Q.carpanelid
		LEFT JOIN reference REF13 ON REF13.id = Q.ventilationid
        LEFT JOIN reference REF14 ON REF14.id = Q.tractionmediaid
		LEFT JOIN reference REF15 ON REF15.id = Q.mainpowersystemid
		LEFT JOIN reference REF16 ON REF16.id = Q.carpositionindicatorid
        LEFT JOIN reference REF17 ON REF17.id = Q.falseceilingid
        LEFT JOIN reference REF18 ON REF18.id = Q.auxilarysupplysystemid
		LEFT JOIN reference REF19 ON REF19.id = Q.flooringid
        LEFT JOIN reference REF20 ON REF20.id = Q.operationid
		where Q.id=p_id)temp;
        
		SELECT
           -- IFNULL((UR.username),'-') as salemanager,
           ifnull(UR.username,'-') assalemanager,
           CONCAT('Contact No.','-','  ',UR.mobile) as salecontactno
			FROM user1 UR
			INNER JOIN userlicense UL ON UR.id = UL.userid
			INNER JOIN `role` R ON UL.roleid = R.id
        WHERE R.description = 'Sales Manager';

END$$

DELIMITER ;
;



DROP procedure IF EXISTS `spc_quotepdf`;

DELIMITER $$
CREATE PROCEDURE `spc_quotepdf`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
        Q.id as negno,
		   Q.quotename,
		   Q.siteaddress,
           DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
           Q.contactperson,
           Q.snehasalescontactname,
           Q.snehasalescontactno,
           Q.designation,
		   REF.description as modelcode,
           REF1.description as lifttype,
           REF2.description as capacity,
           REF3.description as speed,
           Q.stopsid,
           REF4.description as controller,
           GROUP_CONCAT(REF5.description,' mts') as drive,
           ifnull(GROUP_CONCAT(Q.shaftwidth,'mm(W)','X',Q.shaftdepth,'mm(D) (',IFNULL(REF7.description,'-'),')'),'-') as shaftsize,
           ifnull(GROUP_CONCAT(Q.carwidth,'mm(W)','X',Q.cardepth,'mm(D)','X',Q.carheight,'mm(H) (Approximately)'),'-') as carsize,
           ifnull(GROUP_CONCAT(Q.doorwidth, 'mm Open','X',Q.doorheight,'mm Height'),'-') as clearopening,
           ifnull(CONCAT(Q.pitdepth,'mm'),'-')as pitdepth,
           ifnull(CONCAT(Q.overhead,'mm'),'-')as overhead,
           ifnull(CONCAT(REF6.description,'(Manual)'),'-') as cardoor,
           GROUP_CONCAT(REGEXP_SUBSTR(REF2.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF.description,' Unit:',Q.nooflifts) as specificationheader,
           IFNULL(CONCAT(Q.advanceonorderreception,'%'),'-'),
		   IFNULL(CONCAT(Q.forrequestofmechanicalmaterial,'%'),'-'),
		   IFNULL(CONCAT(Q.forrequestofelectricalmaterial,'%'),'-'),
		   IFNULL(CONCAT(Q.oncustomerhandover,'%'),'-')
	FROM quotation Q
    LEFT JOIN city C ON C.id = Q.cityid
    LEFT JOIN reference REF ON REF.id = Q.modelid
    LEFT JOIN reference REF1 ON REF1.id = Q.typeoflift
    LEFT JOIN reference REF2 ON REF2.id = Q.capacityid
    LEFT JOIN reference REF3 ON REF3.id = Q.speedid
    LEFT JOIN reference REF4 ON REF4.id = Q.controlid
    LEFT JOIN reference REF5 ON REF5.id = Q.driveid
    LEFT JOIN reference REF6 ON REF6.id = Q.cardoorid
	LEFT JOIN reference REF7 ON REF7.id = Q.shaftconditionid
    WHERE Q.id = p_id;
    
    select ifnull(leadname,'-')as leadname,
		   ifnull(address,'-')as address,
           ifnull(shaftwidth,'-')as shaftwidth,
           ifnull(carwidth,'-')as carwidth,
           ifnull(pitdepth,'-')as pitdepth,
           ifnull(overhead,'-')as overhead,
           ifnull(city,'-')as city,
           ifnull(contactno,'-')as contactno,
           ifnull(quotedate,'-')as quotedate,
           ifnull(quotevalue,'-')as quotevalue,
           ifnull(model,'-')as model,
           ifnull(capacity,'-')as capacity,
           ifnull(speed,'-')as speed,
           ifnull(`stop`,'-')as `stop`,
           ifnull(control,'-')as control,
           ifnull(drive,'-')as drive,
           ifnull(allopeningsameside,'-')as allopeningsameside,
           ifnull(cardoor,'-')as cardoor,
           ifnull(specificationheader,'-') as specificationheader,
           ifnull(landingdoor,'-')as landingdoor,
           ifnull(floormarking,'-')as floormarking,
		   ifnull(machine,'-')as machine,
           ifnull(cityuppercase,'-')as cityuppercase,
           ifnull(month,'-')as month,
           year,
           version,
		   CONCAT('SELLP/',cityuppercase,'/',month,'/',year,'/',quoteid,'/',version) as negno,
           modeldetails,
           ifnull(travel,'-')as travel,
           result,
           unit,
           ifnull(carpanel,'-')as carpanel,
           ifnull(ventilation,'-')as ventilation,
           ifnull(tractionmedia,'-')as tractionmedia,
           ifnull(mainpowersystem,'-')as mainpowersystem,
           ifnull(carpositionindicator,'-')as carpositionindicator,
           ifnull(falseceiling,'-')as falseceiling,
           ifnull(auxilarysupplysystem,'-')as auxilarysupplysystem,
           ifnull(flooring,'-')as flooring,
           ifnull(operation,'-')as operation,
           IFNULL(advanceonorderreception,'-'),
		   IFNULL(forrequestofmechanicalmaterial,'-'),
		   IFNULL(forrequestofelectricalmaterial,'-'),
		   IFNULL(oncustomerhandover,'-')
	from(
	select 
			 -- GROUP_CONCAT('ELE/',Q.id) as negno,
			 L.leadname,
			 L.address,
			 Q.modelid,
			 Q.capacityid,
			 Q.speedid,
			 Q.stopsid,
			 Q.controlid,
			 Q.driveid,
			 Q.shaftwidth,
			 Q.carwidth,
			 Q.allopeningsameside as allopeningsamesideid,
			 Q.pitdepth,
			 Q.overhead,
			 Q.cardoorid,
             GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF5.description,' Unit:',Q.nooflifts) as specificationheader,
			 Q.landingdoorid,
             GROUP_CONCAT(Q.travel,'mts') as travel,
             -- 6P - 7S(C+G+5) - REF.description - S.S Car Panel - cwtposition 
			GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' ', '-',' ',Q.stopsid,'S(G','+',(Q.stopsid-1),')',' ','-',' ',REF.description,' ','-',' ',ifnull(REF12.description,'-'),' ',REF8.description) as modeldetails,
			GROUP_CONCAT(Q.nooflifts,' ','Units') as unit,
            REGEXP_SUBSTR(REF1.description, '[0-9]+') AS result,
            Q.floormarking as floormarkingid,
			Q.machineid,
			GROUP_CONCAT(C.cityname,' ','-',' ',L.pincode) as city,
			L.mobileno as contactno,
            DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
            Q.quotevalue,
            Q.cwtpositionid,
            REF.description as model,
            REF1.description as capacity,
            REF2.description as speed,
            Q.stopsid  as stop,
            REF4.description as control,
            REF5.description as drive,
            REF6.description as allopeningsameside,
            REF7.description as cardoor,
            REF8.description as landingdoor,
            REF9.description as floormarking,
            REF10.description as machine,
			REF11.description as cwtposition,
			REF12.description as carpanel,
            REF13.description as ventilation,
            REF14.description as tractionmedia,
            REF15.description as mainpowersystem,
            REF16.description as carpositionindicator,
            REF17.description as falseceiling,
            REF18.description as auxilarysupplysystem,
			REF19.description as flooring,
            REF20.description as operation,
            CONCAT(Q.advanceonorderreception,'%') as advanceonorderreception,
			CONCAT(Q.forrequestofmechanicalmaterial,'%') as forrequestofmechanicalmaterial,
		    CONCAT(Q.forrequestofelectricalmaterial,'%') as forrequestofelectricalmaterial,
		    CONCAT(Q.oncustomerhandover,'%') as oncustomerhandover,
			UPPER(SUBSTRING( CO.city, 1, 3)) as cityuppercase,
			MONTHNAME(Q.quotedate) AS month,
            YEAR(Q.quotedate) AS year,
            Q.leadid,
            Q.id as quoteid,
            ( select
			ROW_NUMBER() OVER (ORDER BY id)  Sequence_no
			-- id as quoteid
			from quotation 
			where leadid = Q.leadid order by id DESC limit 1)as version
            
            
		
		from quotation Q
		LEFT JOIN leads L ON L.id = Q.leadid
		LEFT JOIN city C ON L.cityid = C.id
		LEFT JOIN company CO ON CO.id = Q.companyid
		LEFT JOIN reference REF ON REF.id = Q.modelid
		LEFT JOIN reference REF1 ON REF1.id = Q.capacityid
		LEFT JOIN reference REF2 ON REF2.id = Q.speedid
		LEFT JOIN reference REF3 ON REF3.id = Q.stopsid
		LEFT JOIN reference REF4 ON REF4.id = Q.controlid
		LEFT JOIN reference REF5 ON REF5.id = Q.driveid
		LEFT JOIN reference REF6 ON REF6.id = Q.allopeningsameside
        LEFT JOIN reference REF7 ON REF7.id = Q.cardoorid
		LEFT JOIN reference REF8 ON REF8.id = Q.landingdoorid
		LEFT JOIN reference REF9 ON REF9.id = Q.floormarking
        LEFT JOIN reference REF10 ON REF10.id = Q.machineid
        LEFT JOIN reference REF11 ON REF11.id = Q.cwtpositionid
        LEFT JOIN reference REF12 ON REF12.id = Q.carpanelid
		LEFT JOIN reference REF13 ON REF13.id = Q.ventilationid
        LEFT JOIN reference REF14 ON REF14.id = Q.tractionmediaid
		LEFT JOIN reference REF15 ON REF15.id = Q.mainpowersystemid
		LEFT JOIN reference REF16 ON REF16.id = Q.carpositionindicatorid
        LEFT JOIN reference REF17 ON REF17.id = Q.falseceilingid
        LEFT JOIN reference REF18 ON REF18.id = Q.auxilarysupplysystemid
		LEFT JOIN reference REF19 ON REF19.id = Q.flooringid
        LEFT JOIN reference REF20 ON REF20.id = Q.operationid
		where Q.id=p_id)temp;
        
		SELECT
           -- IFNULL((UR.username),'-') as salemanager,
           ifnull(UR.username,'-') assalemanager,
           CONCAT('Contact No.','-','  ',UR.mobile) as salecontactno
			FROM user1 UR
			INNER JOIN userlicense UL ON UR.id = UL.userid
			INNER JOIN `role` R ON UL.roleid = R.id
        WHERE R.description = 'Sales Manager';

END$$

DELIMITER ;
;

DROP procedure IF EXISTS `spc_quotepdf`;

DELIMITER $$
CREATE PROCEDURE `spc_quotepdf`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
        Q.id as negno,
		   Q.quotename,
		   Q.siteaddress,
           DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
           Q.contactperson,
           Q.snehasalescontactname,
           Q.snehasalescontactno,
           Q.designation,
		   REF.description as modelcode,
           REF1.description as lifttype,
           REF2.description as capacity,
           REF3.description as speed,
           Q.stopsid,
           REF4.description as controller,
           GROUP_CONCAT(REF5.description,' mts') as drive,
           ifnull(GROUP_CONCAT(Q.shaftwidth,'mm(W)','X',Q.shaftdepth,'mm(D) (',IFNULL(REF7.description,'-'),')'),'-') as shaftsize,
           ifnull(GROUP_CONCAT(Q.carwidth,'mm(W)','X',Q.cardepth,'mm(D)','X',Q.carheight,'mm(H) (Approximately)'),'-') as carsize,
           ifnull(GROUP_CONCAT(Q.doorwidth, 'mm Open','X',Q.doorheight,'mm Height'),'-') as clearopening,
           ifnull(CONCAT(Q.pitdepth,'mm'),'-')as pitdepth,
           ifnull(CONCAT(Q.overhead,'mm'),'-')as overhead,
           ifnull(CONCAT(REF6.description,'(Manual)'),'-') as cardoor,
           GROUP_CONCAT(REGEXP_SUBSTR(REF2.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF.description,' Unit:',Q.nooflifts) as specificationheader,
           IFNULL(CONCAT(Q.advanceonorderreception,'%'),'-') as advanceonorderreception,
		   IFNULL(CONCAT(Q.forrequestofmechanicalmaterial,'%'),'-') as forrequestofmechanicalmaterial,
		   IFNULL(CONCAT(Q.forrequestofelectricalmaterial,'%'),'-') as forrequestofelectricalmaterial,
		   IFNULL(CONCAT(Q.oncustomerhandover,'%'),'-') as oncustomerhandover
	FROM quotation Q
    LEFT JOIN city C ON C.id = Q.cityid
    LEFT JOIN reference REF ON REF.id = Q.modelid
    LEFT JOIN reference REF1 ON REF1.id = Q.typeoflift
    LEFT JOIN reference REF2 ON REF2.id = Q.capacityid
    LEFT JOIN reference REF3 ON REF3.id = Q.speedid
    LEFT JOIN reference REF4 ON REF4.id = Q.controlid
    LEFT JOIN reference REF5 ON REF5.id = Q.driveid
    LEFT JOIN reference REF6 ON REF6.id = Q.cardoorid
	LEFT JOIN reference REF7 ON REF7.id = Q.shaftconditionid
    WHERE Q.id = p_id;
    
    select ifnull(leadname,'-')as leadname,
		   ifnull(address,'-')as address,
           ifnull(shaftwidth,'-')as shaftwidth,
           ifnull(carwidth,'-')as carwidth,
           ifnull(pitdepth,'-')as pitdepth,
           ifnull(overhead,'-')as overhead,
           ifnull(city,'-')as city,
           ifnull(contactno,'-')as contactno,
           ifnull(quotedate,'-')as quotedate,
           ifnull(quotevalue,'-')as quotevalue,
           ifnull(model,'-')as model,
           ifnull(capacity,'-')as capacity,
           ifnull(speed,'-')as speed,
           ifnull(`stop`,'-')as `stop`,
           ifnull(control,'-')as control,
           ifnull(drive,'-')as drive,
           ifnull(allopeningsameside,'-')as allopeningsameside,
           ifnull(cardoor,'-')as cardoor,
           ifnull(specificationheader,'-') as specificationheader,
           ifnull(landingdoor,'-')as landingdoor,
           ifnull(floormarking,'-')as floormarking,
		   ifnull(machine,'-')as machine,
           ifnull(cityuppercase,'-')as cityuppercase,
           ifnull(month,'-')as month,
           year,
           version,
		   CONCAT('SELLP/',cityuppercase,'/',month,'/',year,'/',quoteid,'/',version) as negno,
           modeldetails,
           ifnull(travel,'-')as travel,
           result,
           unit,
           ifnull(carpanel,'-')as carpanel,
           ifnull(ventilation,'-')as ventilation,
           ifnull(tractionmedia,'-')as tractionmedia,
           ifnull(mainpowersystem,'-')as mainpowersystem,
           ifnull(carpositionindicator,'-')as carpositionindicator,
           ifnull(falseceiling,'-')as falseceiling,
           ifnull(auxilarysupplysystem,'-')as auxilarysupplysystem,
           ifnull(flooring,'-')as flooring,
           ifnull(operation,'-')as operation,
           IFNULL(advanceonorderreception,'-') as advanceonorderreception,
		   IFNULL(forrequestofmechanicalmaterial,'-') as forrequestofmechanicalmaterial,
		   IFNULL(forrequestofelectricalmaterial,'-') as forrequestofelectricalmaterial,
		   IFNULL(oncustomerhandover,'-') as oncustomerhandover
	from(
	select 
			 -- GROUP_CONCAT('ELE/',Q.id) as negno,
			 L.leadname,
			 L.address,
			 Q.modelid,
			 Q.capacityid,
			 Q.speedid,
			 Q.stopsid,
			 Q.controlid,
			 Q.driveid,
			 Q.shaftwidth,
			 Q.carwidth,
			 Q.allopeningsameside as allopeningsamesideid,
			 Q.pitdepth,
			 Q.overhead,
			 Q.cardoorid,
             GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF5.description,' Unit:',Q.nooflifts) as specificationheader,
			 Q.landingdoorid,
             GROUP_CONCAT(Q.travel,'mts') as travel,
             -- 6P - 7S(C+G+5) - REF.description - S.S Car Panel - cwtposition 
			GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' ', '-',' ',Q.stopsid,'S(G','+',(Q.stopsid-1),')',' ','-',' ',REF.description,' ','-',' ',ifnull(REF12.description,'-'),' ',REF8.description) as modeldetails,
			GROUP_CONCAT(Q.nooflifts,' ','Units') as unit,
            REGEXP_SUBSTR(REF1.description, '[0-9]+') AS result,
            Q.floormarking as floormarkingid,
			Q.machineid,
			GROUP_CONCAT(C.cityname,' ','-',' ',L.pincode) as city,
			L.mobileno as contactno,
            DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
            Q.quotevalue,
            Q.cwtpositionid,
            REF.description as model,
            REF1.description as capacity,
            REF2.description as speed,
            Q.stopsid  as stop,
            REF4.description as control,
            REF5.description as drive,
            REF6.description as allopeningsameside,
            REF7.description as cardoor,
            REF8.description as landingdoor,
            REF9.description as floormarking,
            REF10.description as machine,
			REF11.description as cwtposition,
			REF12.description as carpanel,
            REF13.description as ventilation,
            REF14.description as tractionmedia,
            REF15.description as mainpowersystem,
            REF16.description as carpositionindicator,
            REF17.description as falseceiling,
            REF18.description as auxilarysupplysystem,
			REF19.description as flooring,
            REF20.description as operation,
            CONCAT(Q.advanceonorderreception,'%') as advanceonorderreception,
			CONCAT(Q.forrequestofmechanicalmaterial,'%') as forrequestofmechanicalmaterial,
		    CONCAT(Q.forrequestofelectricalmaterial,'%') as forrequestofelectricalmaterial,
		    CONCAT(Q.oncustomerhandover,'%') as oncustomerhandover,
			UPPER(SUBSTRING( CO.city, 1, 3)) as cityuppercase,
			MONTHNAME(Q.quotedate) AS month,
            YEAR(Q.quotedate) AS year,
            Q.leadid,
            Q.id as quoteid,
            ( select
			ROW_NUMBER() OVER (ORDER BY id)  Sequence_no
			-- id as quoteid
			from quotation 
			where leadid = Q.leadid order by id DESC limit 1)as version
            
            
		
		from quotation Q
		LEFT JOIN leads L ON L.id = Q.leadid
		LEFT JOIN city C ON L.cityid = C.id
		LEFT JOIN company CO ON CO.id = Q.companyid
		LEFT JOIN reference REF ON REF.id = Q.modelid
		LEFT JOIN reference REF1 ON REF1.id = Q.capacityid
		LEFT JOIN reference REF2 ON REF2.id = Q.speedid
		LEFT JOIN reference REF3 ON REF3.id = Q.stopsid
		LEFT JOIN reference REF4 ON REF4.id = Q.controlid
		LEFT JOIN reference REF5 ON REF5.id = Q.driveid
		LEFT JOIN reference REF6 ON REF6.id = Q.allopeningsameside
        LEFT JOIN reference REF7 ON REF7.id = Q.cardoorid
		LEFT JOIN reference REF8 ON REF8.id = Q.landingdoorid
		LEFT JOIN reference REF9 ON REF9.id = Q.floormarking
        LEFT JOIN reference REF10 ON REF10.id = Q.machineid
        LEFT JOIN reference REF11 ON REF11.id = Q.cwtpositionid
        LEFT JOIN reference REF12 ON REF12.id = Q.carpanelid
		LEFT JOIN reference REF13 ON REF13.id = Q.ventilationid
        LEFT JOIN reference REF14 ON REF14.id = Q.tractionmediaid
		LEFT JOIN reference REF15 ON REF15.id = Q.mainpowersystemid
		LEFT JOIN reference REF16 ON REF16.id = Q.carpositionindicatorid
        LEFT JOIN reference REF17 ON REF17.id = Q.falseceilingid
        LEFT JOIN reference REF18 ON REF18.id = Q.auxilarysupplysystemid
		LEFT JOIN reference REF19 ON REF19.id = Q.flooringid
        LEFT JOIN reference REF20 ON REF20.id = Q.operationid
		where Q.id=p_id)temp;
        
		SELECT
           -- IFNULL((UR.username),'-') as salemanager,
           ifnull(UR.username,'-') assalemanager,
           CONCAT('Contact No.','-','  ',UR.mobile) as salecontactno
			FROM user1 UR
			INNER JOIN userlicense UL ON UR.id = UL.userid
			INNER JOIN `role` R ON UL.roleid = R.id
        WHERE R.description = 'Sales Manager';

END$$

DELIMITER ;
;

DROP procedure IF EXISTS `spc_convertto_quote`;

DELIMITER $$
CREATE PROCEDURE `spc_convertto_quote`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
L.leadname,
L.mobileno,
L.companyname,
L.email ,
L.sourceid ,
L.stageid ,
L.leadscategory,
L.leadvalue,
L.typeoflift ,
L.nooflifts ,
L.contactperson ,
L.leadstatus ,
L.locationid ,
L.salesrep ,
L.capacityid ,
L.modelid ,
L.driveid ,
L.machineid , 
L.controlid ,
L.operationid ,
L.speedid ,
L.typeofdoorid ,
L.landingdoorid ,
L.cardoorid ,
L.lowestfloorid ,
L.cwtpositionid ,
L.floorheaightid ,
L.architectidid ,
L.leadconsaltantid ,
L.leaddate ,
L.leadscore ,
L.leaddescription  ,
L.cityid  ,
L.stateid ,
L.countryid ,
L.phoneno , 
L.linkedin ,
L.facebook ,
L.youtube , 
L.pincode , 
L.stopsid ,
L.floormarking ,
L.allopeningsameside ,
L.frontopening ,
L.backopening ,
L.leftopening , 
L.rightopening, 
L.shaftwidth ,
L.shaftdepth ,
L.cardepth ,
L.carwidth ,
L.carheight , 
L.doorwidth , 
L.doorheight ,
L.travel,
L.pitdepth ,
L.overhead,
L.mrwidth , 
L.mrdepth ,
L.mrheight ,
L.leadtype,
L.isdeleted ,
L.companyid ,
L.groupcontrolid ,
L.leadsubcategoryid  ,
L.address ,
L.gstn ,
L.mobilep ,
L.scoutername ,
L.reference ,
L.preferedlead ,
L.panno ,
L.winprobability , 
L.carpanelid ,
L.ventilationid ,
L.tractionmediaid ,
L.mainpowersystemid ,
L.carpositionindicatorid ,
L.falseceilingid ,
L.auxilarysupplysystemid ,
L.flooringid,
        L.id as leadid,
		L.leadname as quotename,
		L.sourceid as leadsourceid,
		L.stageid as quotestageid,
		L.leadscategory as quotecategory,
        L.leadvalue as quotevalue,
        DATE_FORMAT(L.leaddate,'%d/%m/%Y') as quotedate,
        L.leaddescription as quotediscription,
        L.leadscore as quotescore,
        L.address as siteaddress,
		L.linkedin as sociallink1,
        L.facebook as sociallink2,
        L.youtube as sociallink3,
        (SELECT id FROM quotation ORDER BY id DESC LIMIT 1) as lastquoteid,
        CONCAT(10.00,'%') as advanceonorderreception,
		CONCAT(60.00,'%') as forrequestofmechanicalmaterial,
		CONCAT(25.00,'%') as forrequestofelectricalmaterial,
		CONCAT(5.00,'%') as oncustomerhandover

		FROM leads L
		WHERE L.id = p_id;

END$$

DELIMITER ;
;



DROP procedure IF EXISTS `spc_order_save`;
;

DELIMITER $$

CREATE TABLE `subcontractor` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `subconname` VARCHAR(150) NULL,
  `designation` VARCHAR(100) NULL,
  `mobileno` VARCHAR(45) NULL,
  `email` VARCHAR(150) NULL,
  `isdeleted` TINYINT(4) NULL,
  `companyid` INT(11) NULL,
  PRIMARY KEY (`id`));
DROP procedure IF EXISTS `spc_subcontractor_save`;

DELIMITER $$
CREATE PROCEDURE `spc_subcontractor_save`(
	IN p_id INT(11),
	IN p_subconname VARCHAR(150),
	IN p_designation VARCHAR(100),
	IN p_mobileno VARCHAR(45),
	IN p_email VARCHAR(150),
    IN p_isdeleted TINYINT(4),
	IN p_companyid INT(11),
    OUT OUT_ID INT(11)
)
BEGIN

	SET @action = null;
	IF EXISTS(
            SELECT id from subcontractor where LOWER(subconname) = LOWER(p_subconname)
				AND ((NULLIF(p_id, 0) IS NULL)
					OR (NULLIF(p_id, 0) IS NOT NULL AND NULLIF(p_id, '0') != id))
            
            ) THEN BEGIN
        
				SELECT -1 INTO out_id;
	
			END;
    ELSE
    
		BEGIN
			IF(NULLIF(p_id, '0') IS NULL) THEN
				INSERT INTO subcontractor(subconname, designation, mobileno, email, isdeleted, companyid)
				VALUES (p_subconname, p_designation, p_mobileno, p_email, p_isdeleted, p_companyid);
					
				SET @action = 'INSERT';
				
			ELSE
				UPDATE subcontractor
				SET subconname = p_subconname,
                    designation = p_designation,
                    mobileno = p_mobileno,
                    email = p_email,
                    isdeleted = p_isdeleted,
					companyid = p_companyid,
					id = LAST_INSERT_ID(id)
					
				WHERE id = p_id
				AND companyid = p_companyid;
					
				SET @action = 'UPDATE';
					
			END IF;
				
			SELECT LAST_INSERT_ID() INTO OUT_ID;

		END;
	END IF;
END$$

DELIMITER ;
;





DROP procedure IF EXISTS `spc_subontractor_search`;

DELIMITER $$
CREATE PROCEDURE `spc_subontractor_search` (
	IN p_companyid INT(11)
)
BEGIN

	SELECT *
    FROM subcontractor
    WHERE comapnyid = p_companyid;

END$$

DELIMITER ;

DROP procedure IF EXISTS `spc_subcontractor_select`;

DELIMITER $$
CREATE PROCEDURE `spc_subcontractor_select` (
	IN p_id INT(11)
)
BEGIN

	SELECT * FROM subcontractor WHERE id = p_id;
    
END$$

DELIMITER ;

DROP procedure IF EXISTS `spc_subcontractor_delete`;

DELIMITER $$
CREATE PROCEDURE `spc_subcontractor_delete` (
	IN p_id INT(11)
)
BEGIN

	UPDATE subcontractor SET isdeleted = 1 WHERE id = p_id;

END$$

DELIMITER ;

DROP PROCEDURE IF EXISTS spc_project_update;
DELIMITER $$
CREATE  PROCEDURE `spc_project_update`(
	IN p_id INT(11),
    IN p_actualcompletiondays INT(11),
	IN p_completionper INT(11),
    IN p_actualenddate DATE,
	IN p_niengineer VARCHAR(20),
    IN p_salesengineer VARCHAR(50),
    IN p_companyid INT,
    IN p_userid INT,
    OUT out_id INT
    )
BEGIN
	SET @action = null;
    
		UPDATE project
			SET 
                actualcompletiondays = p_actualcompletiondays,
                actualenddate = p_actualenddate,
                niengineer=p_niengineer,
                completionper=p_completionper,
				salesengineer=p_salesengineer,
                companyid = p_companyid,
				id = LAST_INSERT_ID(id)
			WHERE
				id = p_id 
				AND companyid = p_companyid;
				
			SET @action = 'UPDATE';        
					
		
		SELECT LAST_INSERT_ID() INTO out_id; 
		
    
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_getallprojectdetails_enddate_final;
DELIMITER $$
CREATE  PROCEDURE `spc_getallprojectdetails_enddate_final`(
    IN p_companyid INT(11)
)
BEGIN
    SET @@sql_mode = '';
    DROP TEMPORARY TABLE IF EXISTS tempproject1;
    CREATE TEMPORARY TABLE tempproject1 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        enddatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject1
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),'-') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),'-') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
	   -- IFNULL(P.completiondays,0) as actualdays,
	   IFNULL(fnc_getprojctwiseactcomdays(PD.projectid),'-')as actualdays,
		-- D.department as Department,
        CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
        REPLACE(CONCAT(PD.stagename, 'enddate'), ' ', '')as stagename,
        CONCAT(PD.stagename, 'per')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'enddate')as enddatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
   AND Find_in_set(REF1.sequenceno,'1,2,3,4,5,6,7,8')
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
    
-- select * from tempproject1;    

 DROP TEMPORARY TABLE IF EXISTS tempproject2;
    CREATE TEMPORARY TABLE tempproject2 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        enddatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject2
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),'-') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),'-') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
		IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
		REPLACE(CONCAT(PD.stagename, 'enddate'), ' ', '')as stagename,
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
         REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'enddate')as enddatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
     AND Find_in_set(REF1.sequenceno,'9,10,11,12,13,14,15,16,17,18')
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
    
   -- select * from tempproject2;    


    DROP TEMPORARY TABLE IF EXISTS tempproject3;
    CREATE TEMPORARY TABLE tempproject3 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        enddatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject3
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),'-') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),'-') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		-- D.department as Department,
         CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
		REPLACE(CONCAT(PD.stagename, 'enddate'), ' ', '')as stagename,
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
         REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'enddate')as enddatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
     AND Find_in_set(REF1.sequenceno,'19,20,21,22,23,24,25')
	 GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
    
  -- select * from tempproject3;    
 
 
 DROP TEMPORARY TABLE IF EXISTS tempproject4;
    CREATE TEMPORARY TABLE tempproject4 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        enddatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject4
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),'-') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),'-') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		-- D.department as Department,
         CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
		REPLACE(CONCAT(PD.stagename, 'enddate'), ' ', '')as stagename,
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
         REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'enddate')as enddatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
	AND Find_in_set(REF1.sequenceno,'26,27,28,29,30,31,32,33')
    GROUP BY PD.stagename, PD.projectid
    ORDER BY PD.stageid DESC;
    
      DROP TEMPORARY TABLE IF EXISTS tempproject5;
    CREATE TEMPORARY TABLE tempproject5 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
		enddatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject5
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),' ') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),' ') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        -- IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
        30 as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		-- D.department as Department,
        D.department as Department,
        PD.stageid, 
		REPLACE(PD.stagename, ' ', '')as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		 REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'enddate')as enddatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
     WHERE PD.companyid = p_companyid
     -- AND   PD.stagename IN ('Installation Stage 3','Final Installation QC','Inspection By EI','Final Payment','Handed Over  Customer','Job Added in Warranty') 
     AND Find_in_set(REF1.sequenceno,'34,35,36,37,38,39,40,41')
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
 
 -- select * from tempproject5;
   DROP TEMPORARY TABLE IF EXISTS tempproject6;
    CREATE TEMPORARY TABLE tempproject6 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
		enddatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject6
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),' ') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),' ') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        -- IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
        30 as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        -- CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
		REPLACE(PD.stagename, ' ', '')as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		 REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'enddate')as enddatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
     WHERE PD.companyid = p_companyid
     -- AND   PD.stagename IN ('Installation Stage 3','Final Installation QC','Inspection By EI','Final Payment','Handed Over  Customer','Job Added in Warranty') 
     AND Find_in_set(REF1.sequenceno,'42,43,44,45,46,47,48,49')
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
    
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then enddate end) AS `',
      enddatesequenceno, '`'
    )
  ) INTO @sql
FROM
  tempproject1;
  
SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then enddate end) AS `',
      enddatesequenceno, '`'
    )
  ) INTO @sqlstagesecondresult
FROM
  tempproject2;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then enddate end) AS `',
      enddatesequenceno, '`'
    )
  ) INTO @sqlstagethiredresult
FROM
  tempproject3;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then enddate end) AS `',
      enddatesequenceno, '`'
    )
  ) INTO @sqlstagefourresult
FROM
  tempproject4;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then enddate end) AS `',
      enddatesequenceno, '`'
    )
  ) INTO @sqlstagefiveresult
FROM
  tempproject5;
  
   SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then enddate end) AS `',
      enddatesequenceno, '`'
    )
  ) INTO @sqlstagesixresult
FROM
  tempproject6;
  

 SET @sql = CONCAT('SELECT projectid,stagename,', @sql,
        ' FROM tempproject1 GROUP BY projectid');
        
        
    
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    
   SET @sqlstagesecondresult = CONCAT('SELECT projectid,', @sqlstagesecondresult,
        ' FROM tempproject2 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagesecondresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
     SET @sqlstagethiredresult = CONCAT('SELECT projectid,', @sqlstagethiredresult,
        ' FROM tempproject3 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagethiredresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
     SET @sqlstagefourresult = CONCAT('SELECT projectid,', @sqlstagefourresult,
        ' FROM tempproject4 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagefourresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
  IF @sqlstagefiveresult IS NOT NULL THEN
  SET @sqlstagefiveresult = CONCAT('SELECT projectid,', @sqlstagefiveresult,
        ' FROM tempproject5 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagefiveresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    END IF;
    
  IF @sqlstagesixresult IS NOT NULL THEN
  SET @sqlstagesixresult = CONCAT('SELECT projectid,', @sqlstagesixresult,
        ' FROM tempproject6 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagesixresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    END IF;
  /*  
SET @sql1 = CONCAT('SELECT projectid,', @sql1,
        ' FROM tempproject1 GROUP BY projectid');
    
    PREPARE stmt FROM @sql1;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    
SET @sql2 = CONCAT('SELECT projectid,', @sql2,
        ' FROM tempproject1 GROUP BY projectid');
    
    PREPARE stmt FROM @sql2;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;*/
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_getallprojectdetails_Departmentsp_final;
DELIMITER $$
CREATE  PROCEDURE `spc_getallprojectdetails_Departmentsp_final`(
    IN p_companyid INT(11)
)
BEGIN
    SET @@sql_mode = '';
    DROP TEMPORARY TABLE IF EXISTS tempproject1;
    CREATE TEMPORARY TABLE tempproject1 (
        id INT(11), 
        projectid INT(11),
        Department  VARCHAR(3000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
		stagenamedepartment VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
        departmentsequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject1
    SELECT 
        PD.id, 
        PD.projectid, 
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
        REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
		REPLACE((CONCAT(PD.stagename, 'Department')), ' ', '')as stagenamedepartment,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'department')as departmentsequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
	AND Find_in_set(REF1.sequenceno,'1,2,3,4,5,6,7,8')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
-- select * from tempproject1;    

 DROP TEMPORARY TABLE IF EXISTS tempproject2;
    CREATE TEMPORARY TABLE tempproject2 (
        id INT(11), 
        projectid INT(11),
        Department  VARCHAR(3000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        stagenamedepartment VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
        departmentsequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject2
    SELECT 
        PD.id, 
        PD.projectid, 
		IFNULL(D.department,'-') as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
		REPLACE((CONCAT(PD.stagename, 'Department')), ' ', '')as stagenamedepartment,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'department')as departmentsequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
	AND Find_in_set(REF1.sequenceno,'9,10,11,12,13,14,15,16,17,18')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;

    DROP TEMPORARY TABLE IF EXISTS tempproject3;
    CREATE TEMPORARY TABLE tempproject3 (
        id INT(11), 
        projectid INT(11),
        Department  VARCHAR(3000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
		stagenamedepartment VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
        departmentsequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject3
    SELECT 
        PD.id, 
        PD.projectid, 
		IFNULL(D.department,'-') as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
		REPLACE((CONCAT(PD.stagename, 'Department')), ' ', '')as stagenamedepartment,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'department')as departmentsequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'19,20,21,22,23,24,25')
    GROUP BY REF1.sequenceno, PD.projectid
    ORDER BY REF1.sequenceno;
 
    DROP TEMPORARY TABLE IF EXISTS tempproject4;
    CREATE TEMPORARY TABLE tempproject4 (
        id INT(11), 
        projectid INT(11),
        Department  VARCHAR(3000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        stagenamedepartment VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        departmentsequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject4
    SELECT 
        PD.id, 
        PD.projectid, 
		IFNULL(D.department,'-') as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
		REPLACE((CONCAT(PD.stagename, 'Department')), ' ', '')as stagenamedepartment,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'department')as departmentsequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'26,27,28,29,30,31,32,33')
    GROUP BY PD.stagename, PD.projectid
    ORDER BY PD.stageid;
    
    DROP TEMPORARY TABLE IF EXISTS tempproject5;
    CREATE TEMPORARY TABLE tempproject5 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
		departmentsequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject5
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        30 as Complete,
        IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
        IFNULL(D.department,'-') as Department,
        PD.stageid, 
		REPLACE(PD.stagename, ' ', '')as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'department')as departmentsequenceno,  
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
	WHERE PD.companyid = p_companyid 
	AND Find_in_set(REF1.sequenceno,'34,35,36,37,38,39,40,41')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
    DROP TEMPORARY TABLE IF EXISTS tempproject6;
    CREATE TEMPORARY TABLE tempproject6 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
		departmentsequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject6
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        30 as Complete,
        IFNULL(P.completiondays,0) as plandays,
	    IFNULL(P.completiondays,0) as actualdays,
		IFNULL(D.department,'-') as Department,
        PD.stageid, 
		REPLACE(PD.stagename, ' ', '')as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'department')as departmentsequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
	WHERE PD.companyid = p_companyid
	AND Find_in_set(REF1.sequenceno,'42,43,44,45,46,47,48,49')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
   -- select * from tempproject6;
    
	  SELECT
	  GROUP_CONCAT(DISTINCT
		CONCAT(
		  'MAX(case when stagename = ''',
		  stagename,
		  ''' then Department end) AS `',
		  departmentsequenceno, '`'
		)
	  ) INTO @sql
	FROM
	  tempproject1;
  
	SELECT
	  GROUP_CONCAT(DISTINCT
		CONCAT(
		  'MAX(case when stagename = ''',
		  stagename,
		  ''' then Department end) AS `',
		  departmentsequenceno, '`'
		)
	  ) INTO @sqlstagesecondresult
	FROM
	  tempproject2;
	  
	  SELECT
	  GROUP_CONCAT(DISTINCT
		CONCAT(
		  'MAX(case when stagename = ''',
		  stagename,
		  ''' then Department end) AS `',
		  departmentsequenceno, '`'
		)
	  ) INTO @sqlstagethiredresult
	FROM
	  tempproject3;
	  
	  SELECT
	  GROUP_CONCAT(DISTINCT
		CONCAT(
		  'MAX(case when stagename = ''',
		  stagename,
		  ''' then Department end) AS `',
		  departmentsequenceno, '`'
		)
	  ) INTO @sqlstagefourresult
	FROM
	  tempproject4;
	  
	  SELECT
	  GROUP_CONCAT(DISTINCT
		CONCAT(
		  'MAX(case when stagename = ''',
		  stagename,
		  ''' then Department end) AS `',
		  departmentsequenceno, '`'
		)
	  ) INTO @sqlstagefiveresult
	FROM
	  tempproject5;
	  
	SELECT
	  GROUP_CONCAT(DISTINCT
		CONCAT(
		  'MAX(case when stagename = ''',
		  stagename,
		  ''' then Department end) AS `',
		  departmentsequenceno, '`'
		)
	  ) INTO @sqlstagesixresult
	FROM
	  tempproject6;

   SET @sql = CONCAT('SELECT projectid,projectcount,', @sql,
        ' FROM tempproject1 GROUP BY projectid limit 1');
    
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    
   -- select @sql;
    
 
   SET @sqlstagesecondresult = CONCAT('SELECT projectid,', @sqlstagesecondresult,
        ' FROM tempproject2 GROUP BY projectid limit 1');
    
    PREPARE stmt FROM @sqlstagesecondresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
     SET @sqlstagethiredresult = CONCAT('SELECT projectid,', @sqlstagethiredresult,
        ' FROM tempproject3 GROUP BY projectid limit 1');
    
    PREPARE stmt FROM @sqlstagethiredresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
     SET @sqlstagefourresult = CONCAT('SELECT projectid,', @sqlstagefourresult,
        ' FROM tempproject4 GROUP BY projectid limit 1');
    
    PREPARE stmt FROM @sqlstagefourresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
	  IF @sqlstagefiveresult IS NOT NULL THEN
	  SET @sqlstagefiveresult = CONCAT('SELECT projectid,', @sqlstagefiveresult,
			' FROM tempproject5 GROUP BY projectid limit 1');
		
		PREPARE stmt FROM @sqlstagefiveresult;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt; 
		END IF;
        
	/*IF @sqlstagefiveresult IS NOT NULL THEN
    SELECT @sqlstagefiveresult AS Debug_SQL;
    PREPARE stmt FROM @sqlstagefiveresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    END IF;*/
		
	  IF @sqlstagesixresult IS NOT NULL THEN
	  SET @sqlstagesixresult = CONCAT('SELECT projectid,', @sqlstagesixresult,
			' FROM tempproject6 GROUP BY projectid limit 1');
		
		PREPARE stmt FROM @sqlstagesixresult;
		EXECUTE stmt;
		DEALLOCATE PREPARE stmt; 
		END IF;
        
/*	IF @sqlstagesixresult IS NOT NULL THEN
    SELECT @sqlstagesixresult AS Debug_SQL;
    PREPARE stmt FROM @sqlstagesixresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
END IF;*/
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_getallprojectdetails_projectweightage_final;
DELIMITER $$
CREATE  PROCEDURE `spc_getallprojectdetails_projectweightage_final`(
    IN p_companyid INT(11)
)
BEGIN
    SET @@sql_mode = '';
    DROP TEMPORARY TABLE IF EXISTS tempproject1;
    CREATE TEMPORARY TABLE tempproject1 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        weightagesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject1
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
      --  CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
        PD.parentid, 
        PD.stagecompletionpercentage, 
		IFNULL(PD.projectweightage,0)as projectweightage,  
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'weightage')as weightagesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'1,2,3,4,5,6,7,8')
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
    
-- select * from tempproject1;    

 DROP TEMPORARY TABLE IF EXISTS tempproject2;
    CREATE TEMPORARY TABLE tempproject2 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        weightagesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject2
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
		IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
		REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
      --  CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
		IFNULL(PD.projectweightage,0)as projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'weightage')as weightagesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'9,10,11,12,13,14,15,16,17,18')
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
    
   -- select * from tempproject2;    


    DROP TEMPORARY TABLE IF EXISTS tempproject3;
    CREATE TEMPORARY TABLE tempproject3 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        weightagesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject3
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
		REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
       -- CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
		IFNULL(PD.projectweightage,0)as projectweightage,  
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'weightage')as weightagesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'19,20,21,22,23,24,25')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
   -- select * from tempproject3;    
 
 
 DROP TEMPORARY TABLE IF EXISTS tempproject4;
    CREATE TEMPORARY TABLE tempproject4 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        weightagesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject4
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        -- CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
		REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
        PD.parentid, 
        PD.stagecompletionpercentage, 
		IFNULL(PD.projectweightage,0)as projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'weightage')as weightagesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'26,27,28,29,30,31,32,33')
    GROUP BY PD.stagename, PD.projectid
    ORDER BY PD.stageid DESC;
    
    DROP TEMPORARY TABLE IF EXISTS tempproject5;
    CREATE TEMPORARY TABLE tempproject5 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        weightagesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject5
    SELECT 
        PD.id, 
        IFNULL(PD.projectid,'-') as  projectid,
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
      --  CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
        PD.parentid, 
        PD.stagecompletionpercentage, 
        IFNULL(PD.projectweightage,0)as projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'weightage')as weightagesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'34,35,36,37,38,39,40,41')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
     
     DROP TEMPORARY TABLE IF EXISTS tempproject6;
    CREATE TEMPORARY TABLE tempproject6 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        weightagesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject6
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
      --  CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        IFNULL(REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', ''),0)as Projweightage,
        PD.parentid, 
        PD.stagecompletionpercentage, 
		IFNULL(PD.projectweightage,'-')as projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'weightage')as weightagesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'42,43,44,45,46,47,48,49')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
--    select * from tempproject6;
    
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then projectweightage end) AS `',
      weightagesequenceno, '`'
    )
  ) INTO @sql
FROM
  tempproject1;
  
  select @sql;
  
SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then projectweightage end) AS `',
      weightagesequenceno, '`'
    )
  ) INTO @sqlstagesecondresult
FROM
  tempproject2;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then projectweightage end) AS `',
      weightagesequenceno, '`'
    )
  ) INTO @sqlstagethiredresult
FROM
  tempproject3;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then projectweightage end) AS `',
      weightagesequenceno, '`'
    )
  ) INTO @sqlstagefourresult
FROM
  tempproject4;
  
SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then projectweightage end) AS `',
      weightagesequenceno, '`'
    )
  ) INTO @sqlstagefiveresult
FROM
  tempproject5;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then projectweightage end) AS `',
      weightagesequenceno, '`'
    )
  ) INTO @sqlstagesixresult
FROM
  tempproject6;
 

 SET @sql = CONCAT('SELECT projectid,', @sql,
        ' FROM tempproject1 GROUP BY projectid');
        
        
    
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    
   SET @sqlstagesecondresult = CONCAT('SELECT projectid,', @sqlstagesecondresult,
        ' FROM tempproject2 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagesecondresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
     SET @sqlstagethiredresult = CONCAT('SELECT projectid,', @sqlstagethiredresult,
        ' FROM tempproject3 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagethiredresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
	SET @sqlstagefourresult = CONCAT('SELECT projectid,', @sqlstagefourresult,
        ' FROM tempproject4 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagefourresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
    IF @sqlstagefiveresult IS NOT NULL THEN
  SET @sqlstagefiveresult = CONCAT('SELECT projectid,', @sqlstagefiveresult,
        ' FROM tempproject5 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagefiveresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    END IF;
    
  IF @sqlstagesixresult IS NOT NULL THEN
  SET @sqlstagesixresult = CONCAT('SELECT projectid,', @sqlstagesixresult,
        ' FROM tempproject6 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagesixresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    END IF;
 
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_getallprojectdetails_stagecompletionpercentage_final;
DELIMITER $$
CREATE  PROCEDURE `spc_getallprojectdetails_stagecompletionpercentage_final`(
    IN p_companyid INT(11)
)
BEGIN
    SET @@sql_mode = '';
    DROP TEMPORARY TABLE IF EXISTS tempproject1;
    CREATE TEMPORARY TABLE tempproject1 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
        stagecompersequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject1
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
        REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagecomper')as stagecompersequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'1,2,3,4,5,6,7,8')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
 -- select * from tempproject1;    

 DROP TEMPORARY TABLE IF EXISTS tempproject2;
    CREATE TEMPORARY TABLE tempproject2 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        stagecompersequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject2
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
		IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		-- CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
		REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagecomper')as stagecompersequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
	LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'9,10,11,12,13,14,15,16,17,18')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
   -- select * from tempproject2;    


    DROP TEMPORARY TABLE IF EXISTS tempproject3;
    CREATE TEMPORARY TABLE tempproject3 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        stagecompersequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject3
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		-- CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
		REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagecomper')as stagecompersequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'19,20,21,22,23,24,25')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
  -- select * from tempproject3;  
 
    DROP TEMPORARY TABLE IF EXISTS tempproject4;
    CREATE TEMPORARY TABLE tempproject4 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        stagecompersequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject4
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		-- CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
		REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagecomper')as stagecompersequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'26,27,28,29,30,31,32,33')
    GROUP BY PD.stagename, PD.projectid
    ORDER BY PD.stageid DESC;
    
	-- select * from tempproject4;    
    
    DROP TEMPORARY TABLE IF EXISTS tempproject5;
    CREATE TEMPORARY TABLE tempproject5 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        stagecompersequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject5
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		-- CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
		REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagecomper')as stagecompersequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'34,35,36,37,38,39,40,41')
    GROUP BY PD.stagename, PD.projectid
    ORDER BY PD.stageid DESC;
    
    DROP TEMPORARY TABLE IF EXISTS tempproject6;
    CREATE TEMPORARY TABLE tempproject6 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        stagecompersequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject6
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		-- CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
		REPLACE((CONCAT(PD.stagename, 'ComPer')), ' ', '')as stagenamePer,
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagecomper')as stagecompersequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'42,43,44,45,46,47,48,49')
    GROUP BY PD.stagename, PD.projectid
    ORDER BY PD.stageid DESC;
    
		  SELECT
		  GROUP_CONCAT(DISTINCT
			CONCAT(
			  'MAX(case when stagename = ''',
			  stagename,
			  ''' then projectweightage end) AS `',
			  stagecompersequenceno, '`'
			)
		  ) INTO @sql
		FROM
		  tempproject1 order by projectid;
		  
		SELECT
		  GROUP_CONCAT(DISTINCT
			CONCAT(
			  'MAX(case when stagename = ''',
			  stagename,
			  ''' then projectweightage end) AS `',
			  stagecompersequenceno, '`'
			)
		  ) INTO @sqlstagesecondresult
		FROM
		  tempproject2 order by projectid;
		  
		  SELECT
		  GROUP_CONCAT(DISTINCT
			CONCAT(
			  'MAX(case when stagename = ''',
			  stagename,
			  ''' then projectweightage end) AS `',
			  stagecompersequenceno, '`'
			)
		  ) INTO @sqlstagethiredresult
		FROM
		  tempproject3 order by projectid;
		  
		  SELECT
		  GROUP_CONCAT(DISTINCT
			CONCAT(
			  'MAX(case when stagename = ''',
			  stagename,
			  ''' then projectweightage end) AS `',
			  stagecompersequenceno, '`'
			)
		  ) INTO @sqlstagefourresult
		FROM
		  tempproject4 order by projectid;
		  
		  SELECT
		  GROUP_CONCAT(DISTINCT
			CONCAT(
			  'MAX(case when stagename = ''',
			  stagename,
			  ''' then projectweightage end) AS `',
			  stagecompersequenceno, '`'
			)
		  ) INTO @sqlstagefiveresult
		FROM
		  tempproject5 order by projectid;
		  
		  SELECT
		  GROUP_CONCAT(DISTINCT
			CONCAT(
			  'MAX(case when stagename = ''',
			  stagename,
			  ''' then projectweightage end) AS `',
			  stagecompersequenceno, '`'
			)
		  ) INTO @sqlstagesixresult
		FROM
		  tempproject6 order by projectid;

			SET @sql = CONCAT('SELECT projectid,projectcount,', @sql,
				' FROM tempproject1 GROUP BY projectid');
			
			PREPARE stmt FROM @sql;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt;
			
		   SET @sqlstagesecondresult = CONCAT('SELECT projectid,', @sqlstagesecondresult,
				' FROM tempproject2 GROUP BY projectid');
			
			PREPARE stmt FROM @sqlstagesecondresult;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt; 
			
			 SET @sqlstagethiredresult = CONCAT('SELECT projectid,', @sqlstagethiredresult,
				' FROM tempproject3 GROUP BY projectid');
			
			PREPARE stmt FROM @sqlstagethiredresult;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt; 
			
			 SET @sqlstagefourresult = CONCAT('SELECT projectid,', @sqlstagefourresult,
				' FROM tempproject4 GROUP BY projectid');
			
			PREPARE stmt FROM @sqlstagefourresult;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt; 
			
			IF @sqlstagefiveresult IS NOT NULL THEN
		  SET @sqlstagefiveresult = CONCAT('SELECT projectid,', @sqlstagefiveresult,
				' FROM tempproject5 GROUP BY projectid');
			
			PREPARE stmt FROM @sqlstagefiveresult;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt; 
			END IF;
			
		  IF @sqlstagesixresult IS NOT NULL THEN
		  SET @sqlstagesixresult = CONCAT('SELECT projectid,', @sqlstagesixresult,
				' FROM tempproject6 GROUP BY projectid');
			
			PREPARE stmt FROM @sqlstagesixresult;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt; 
			END IF;
 
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_getallprojectdetails_stagename_final;
DELIMITER $$
CREATE  PROCEDURE `spc_getallprojectdetails_stagename_final`(
    IN p_companyid INT(11)
)
BEGIN
    SET @@sql_mode = '';
    DROP TEMPORARY TABLE IF EXISTS tempproject1;
    CREATE TEMPORARY TABLE tempproject1 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        prostagename varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject1
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
      --  CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagename')as prostagename, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'1,2,3,4,5,6,7,8')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
-- select * from tempproject1;    

 DROP TEMPORARY TABLE IF EXISTS tempproject2;
    CREATE TEMPORARY TABLE tempproject2 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        prostagename varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject2
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
		IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
		REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
      --  CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagename')as prostagename, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'9,10,11,12,13,14,15,16,17,18')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
   -- select * from tempproject2;    


    DROP TEMPORARY TABLE IF EXISTS tempproject3;
    CREATE TEMPORARY TABLE tempproject3 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        prostagename varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject3
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
		REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
       -- CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagename')as prostagename, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'19,20,21,22,23,24,25')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
   -- select * from tempproject3;    
 
 
 DROP TEMPORARY TABLE IF EXISTS tempproject4;
    CREATE TEMPORARY TABLE tempproject4 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        prostagename varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject4
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        -- CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
		REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagename')as prostagename, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'26,27,28,29,30,31,32,33')
    GROUP BY PD.stagename, PD.projectid
    ORDER BY PD.stageid DESC;
    
    DROP TEMPORARY TABLE IF EXISTS tempproject5;
    CREATE TEMPORARY TABLE tempproject5 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        prostagename varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject5
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
      --  CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagename')as prostagename, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'34,35,36,37,38,39,40,41')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
     
     DROP TEMPORARY TABLE IF EXISTS tempproject6;
    CREATE TEMPORARY TABLE tempproject6 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        prostagename varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject6
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
      --  CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        REPLACE((CONCAT(PD.stagename, 'Proweightage')), ' ', '')as Projweightage,
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'stagename')as prostagename,  
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid
    LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    AND Find_in_set(REF1.sequenceno,'42,43,44,45,46,47,48,49')
	GROUP BY REF1.sequenceno, PD.projectid
	ORDER BY REF1.sequenceno;
    
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then stagename end) AS `',
      prostagename, '`'
    )
  ) INTO @sql
FROM
  tempproject1;
  
SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then stagename end) AS `',
      prostagename, '`'
    )
  ) INTO @sqlstagesecondresult
FROM
  tempproject2;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then stagename end) AS `',
      prostagename, '`'
    )
  ) INTO @sqlstagethiredresult
FROM
  tempproject3;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then stagename end) AS `',
      prostagename, '`'
    )
  ) INTO @sqlstagefourresult
FROM
  tempproject4;
  
SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then stagename end) AS `',
      prostagename, '`'
    )
  ) INTO @sqlstagefiveresult
FROM
  tempproject5;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then stagename end) AS `',
      prostagename, '`'
    )
  ) INTO @sqlstagesixresult
FROM
  tempproject6;
 

 SET @sql = CONCAT('SELECT projectid,', @sql,
        ' FROM tempproject1 GROUP BY projectid');
        
        
    
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    
   SET @sqlstagesecondresult = CONCAT('SELECT projectid,', @sqlstagesecondresult,
        ' FROM tempproject2 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagesecondresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
     SET @sqlstagethiredresult = CONCAT('SELECT projectid,', @sqlstagethiredresult,
        ' FROM tempproject3 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagethiredresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
	SET @sqlstagefourresult = CONCAT('SELECT projectid,', @sqlstagefourresult,
        ' FROM tempproject4 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagefourresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
  IF @sqlstagefiveresult IS NOT NULL THEN
  SET @sqlstagefiveresult = CONCAT('SELECT projectid,', @sqlstagefiveresult,
        ' FROM tempproject5 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagefiveresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    END IF;
    
  IF @sqlstagesixresult IS NOT NULL THEN
  SET @sqlstagesixresult = CONCAT('SELECT projectid,', @sqlstagesixresult,
        ' FROM tempproject6 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagesixresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    END IF;
 
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_getallprojectdetailsasperstages_final;
DELIMITER $$
CREATE  PROCEDURE `spc_getallprojectdetailsasperstages_final`(
    IN p_companyid INT(11)
)
BEGIN
    SET @@sql_mode = '';
    DROP TEMPORARY TABLE IF EXISTS tempproject1;
    CREATE TEMPORARY TABLE tempproject1 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(1000), 
		enddate VARCHAR(200), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(100), 
        stagenamePer VARCHAR(100), 
        Projweightage VARCHAR(100), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,3),
        projectweightage DECIMAL(9,3),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		saleengineer VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11)
    );
   
    INSERT INTO tempproject1
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),0) as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),0) as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),0) as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
        IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		D.department as Department,
        PD.stageid, 
        PD.stagename as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        IFNULL(U.username,'-') as niengineer,
        IFNULL(O.snehasalescontactname,'-') as saleengineer,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
    WHERE PD.companyid = p_companyid
    GROUP BY PD.stagename, PD.projectid
    ORDER BY PD.stageid DESC;
    
    SET @sql = (
        SELECT 
            GROUP_CONCAT(DISTINCT 
                CONCAT(
                    'MAX(CASE WHEN stagename = ''',
                    stagename,
                    ''' THEN startdate END) AS `',
                    stagename,
                    '`'
                )
            )
        FROM 
            tempproject1
    );
    
  SET @sql1 = (
    SELECT 
        GROUP_CONCAT(DISTINCT 
            CONCAT(
                'MAX(CASE WHEN stagename = ''',
                stagename,
                ''' THEN stagecompletionpercentage END) AS `',
                stagenamePer,
                '`'
            )
        )
    FROM 
        tempproject1
);

 SET @sql2 = (
    SELECT 
        GROUP_CONCAT(DISTINCT 
            CONCAT(
                'MAX(CASE WHEN stagename = ''',
                stagename,
                ''' THEN projectweightage END) AS `',
                Projweightage,
                '`'
            )
        )
    FROM 
        tempproject1
);
    
    SET @sql = CONCAT('SELECT projectid,startdate,projectactdate,projectcomdate,Complete,plandays,actualdays,Department,stagename,stagecompletionpercentage,projectname,orderno,niengineer,saleengineer,modelname,projectcount,  ', @sql, ',',@sql1, ',', @sql2,'  
        FROM tempproject1
        GROUP BY projectid');
    
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_getallprojectdetailsfinal;

DELIMITER $$
CREATE  PROCEDURE `spc_getallprojectdetailsfinal`(
    IN p_companyid INT(11)
)
BEGIN
    SET @@sql_mode = '';
    DROP TEMPORARY TABLE IF EXISTS tempproject1;
    CREATE TEMPORARY TABLE tempproject1 (
        id INT(11), 
        projectid INT(11),
        completionper INT(11),
        orderid INT(11),
        ordervalue DECIMAL(9,2),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		salesengineer VARCHAR(200),
        actualcompletiondays VARCHAR(200),
        actualenddate VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
        sequenceno INT(11),
        startdatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject1
    SELECT 
        PD.id, 
        PD.projectid, 
        P.completionper,
        P.orderid,
        P.ordervalue,
        DATE_FORMAT(PD.startdate,'%d/%m/%Y') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),' ') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),' ')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),' ') as  projectcomdate,
        -- IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
        30 as Complete,
       IFNULL(P.completiondays,0) as plandays,
	   -- IFNULL(P.completiondays,0) as actualdays,
	   IFNULL(fnc_getprojctwiseactcomdays(PD.projectid),'-')as actualdays,
		-- D.department as Department,
        CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
        -- PD.stagename as stagename, 
        REPLACE(PD.stagename, ' ', '')as stagename,
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
        -- IFNULL(U.username,'-') as niengineername,
		IFNULL(P.niengineer,'-') as niengineer,
		IFNULL(P.salesengineer,'-') as salesengineer,
        IFNULL(P.actualcompletiondays,NULL) as actualcompletiondays,
        IFNULL(DATE_FORMAT(P.actualenddate,'%d/%m/%Y'),' ') as actualenddate,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
        REF1. sequenceno,
	    CONCAT('Sequence',REF1.sequenceno,'startdate')as startdatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    -- AND   PD.stagename IN ('Advance Credited','File Handed Over CCD','Check Site','GAD Request','GAD Ready','GAD Approved','JSV Done','GAD  Approved','Shipment Scheduled') 
    AND Find_in_set(REF1.sequenceno,'1,2,3,4,5,6,7,8')
    -- AND projectid=12
    GROUP BY REF1.sequenceno, PD.projectid
    ORDER BY REF1.sequenceno;
    
  -- select * from tempproject1;    

 DROP TEMPORARY TABLE IF EXISTS tempproject2;
    CREATE TEMPORARY TABLE tempproject2 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		salesengineer VARCHAR(200),
		actualcompletiondays VARCHAR(200),
        actualenddate VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
		startdatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject2
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),' ') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),' ') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),' ')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),' ') as  projectcomdate,
       --  IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
        30 as Complete,
		IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
		REPLACE(PD.stagename, ' ', '')as stagename,
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
     -- IFNULL(U.username,'-') as niengineername,
		IFNULL(P.niengineer,'-') as niengineer,
		IFNULL(P.salesengineer,'-') as salesengineer,
        IFNULL(P.actualcompletiondays,NULL) as actualcompletiondays,
		IFNULL(DATE_FORMAT(P.actualenddate,'%d/%m/%Y'),' ') as actualenddate,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1.sequenceno,
        CONCAT('Sequence',REF1.sequenceno,'startdate')as startdatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
   -- AND   PD.stagename IN ('Approved GAD Design','Enter in Focus','BOQ Ready','Production Drawing Ready','Production Stage 1','Prod QC Stage 1','Payment Stage 1','Delivery Stage 1','Installation Stage 1','Installation QC Stage 1') 
     AND Find_in_set(REF1.sequenceno,'9,10,11,12,13,14,15,16,17,18')
	 -- AND projectid=12
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
    
   -- select * from tempproject2;    


    DROP TEMPORARY TABLE IF EXISTS tempproject3;
    CREATE TEMPORARY TABLE tempproject3 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		salesengineer VARCHAR(200),
		actualcompletiondays VARCHAR(200),
        actualenddate VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
		startdatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject3
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),' ') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),' ') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
       -- IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
        30 as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		-- D.department as Department,
         CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
		REPLACE(PD.stagename, ' ', '')as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
       -- IFNULL(U.username,'-') as niengineername,
		IFNULL(P.niengineer,'-') as niengineer,
		IFNULL(P.salesengineer,'-') as salesengineer,
        IFNULL(P.actualcompletiondays,NULL) as actualcompletiondays,
		IFNULL(DATE_FORMAT(P.actualenddate,'%d/%m/%Y'),' ') as actualenddate,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1.sequenceno,
        CONCAT('Sequence',REF1.sequenceno,'startdate')as startdatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
    WHERE PD.companyid = p_companyid
    -- AND   PD.stagename IN ('Payment Stage 2','Production Stage 2','Production QC Stage 2','Delivery Stage 2','Installation Stage 2','Installation QC Stage 3','Production Stage 3','Production QC Stage 3','Delivery Stage 3') 
    AND Find_in_set(REF1.sequenceno,'19,20,21,22,23,24,25')
	-- AND projectid=12
	GROUP BY REF1.sequenceno, PD.projectid
    ORDER BY REF1.sequenceno;
    
   -- select * from tempproject3;    
 
 
 DROP TEMPORARY TABLE IF EXISTS tempproject4;
    CREATE TEMPORARY TABLE tempproject4 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		salesengineer VARCHAR(200),
		actualcompletiondays VARCHAR(200),
        actualenddate VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
		startdatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject4
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),' ') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),' ') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),'-')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),'-') as  projectcomdate,
        -- IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
        30 as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		-- D.department as Department,
         CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
		REPLACE(PD.stagename, ' ', '')as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
 -- IFNULL(U.username,'-') as niengineername,
		IFNULL(P.niengineer,'-') as niengineer,
		IFNULL(P.salesengineer,'-') as salesengineer,
        IFNULL(P.actualcompletiondays,NULL) as actualcompletiondays,
		IFNULL(DATE_FORMAT(P.actualenddate,'%d/%m/%Y'),' ') as actualenddate,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1.sequenceno,
        CONCAT('Sequence',REF1.sequenceno,'startdate')as startdatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
     WHERE PD.companyid = p_companyid
     -- AND   PD.stagename IN ('Installation Stage 3','Final Installation QC','Inspection By EI','Final Payment','Handed Over  Customer','Job Added in Warranty') 
     AND Find_in_set(REF1.sequenceno,'26,27,28,29,30,31,32,33')
	 -- AND projectid=12
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
     
  DROP TEMPORARY TABLE IF EXISTS tempproject5;
    CREATE TEMPORARY TABLE tempproject5 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		salesengineer VARCHAR(200),
		actualcompletiondays VARCHAR(200),
        actualenddate VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
		startdatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject5
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),' ') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),' ') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),' ')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),' ') as  projectcomdate,
        -- IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
        30 as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		-- D.department as Department,
         CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
		REPLACE(PD.stagename, ' ', '')as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
       -- IFNULL(U.username,'-') as niengineername,
		IFNULL(P.niengineer,'-') as niengineer,
		IFNULL(P.salesengineer,'-') as salesengineer,
        IFNULL(P.actualcompletiondays,NULL) as actualcompletiondays,
		IFNULL(DATE_FORMAT(P.actualenddate,'%d/%m/%Y'),' ') as actualenddate,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1.sequenceno,
        CONCAT('Sequence',REF1.sequenceno,'startdate')as startdatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
     WHERE PD.companyid = p_companyid
     -- AND   PD.stagename IN ('Installation Stage 3','Final Installation QC','Inspection By EI','Final Payment','Handed Over  Customer','Job Added in Warranty') 
     AND Find_in_set(REF1.sequenceno,'34,35,36,37,38,39,40,41')
	 -- AND projectid=12
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
 
 -- select * from tempproject5;
   DROP TEMPORARY TABLE IF EXISTS tempproject6;
    CREATE TEMPORARY TABLE tempproject6 (
        id INT(11), 
        projectid INT(11),
        startdate VARCHAR(2000), 
		enddate VARCHAR(2000), 
        orderdate VARCHAR(200), 
        projectactdate VARCHAR(200), 
        projectcomdate VARCHAR(200), 
        Complete  VARCHAR(1000), 
        plandays VARCHAR(1000), 
        actualdays VARCHAR(1000), 
        Department  VARCHAR(1000), 
        stageid INT(11),
        stagename VARCHAR(2000), 
        stagenamePer VARCHAR(2000), 
        Projweightage VARCHAR(2000), 
        parentid INT(11), 
        stagecompletionpercentage DECIMAL(9,2),
        projectweightage DECIMAL(9,2),
        managerstatusid INT(11),
        customerstatusid INT(11),
		projectname VARCHAR(200),
        orderno INT(11),
        niengineer VARCHAR(200),
		salesengineer VARCHAR(200),
		actualcompletiondays VARCHAR(200),
        actualenddate VARCHAR(200),
        modelname VARCHAR(200),
        projectcount INT(11),
		sequenceno INT(11),
		startdatesequenceno varchar(200),
        companyid INT(11)
    );
   
    INSERT INTO tempproject6
    SELECT 
        PD.id, 
        PD.projectid, 
        IFNULL(DATE_FORMAT(PD.startdate,'%d/%m/%Y'),' ') as startdate,
		IFNULL(DATE_FORMAT(PD.enddate,'%d/%m/%Y'),' ') as enddate,
        IFNULL(DATE_FORMAT(O.orderdate,'%d/%m/%Y'),' ') as orderdate,
        IFNULL(DATE_FORMAT(fnc_getprojectactualenddate(PD.projectid),'%d/%m/%Y'),' ')as projectactdate,
		IFNULL(DATE_FORMAT(P.enddate,'%d/%m/%Y'),' ') as  projectcomdate,
        -- IFNULL(fnc_getprojctwisecomper(PD.projectid),'-') as Complete,
        30 as Complete,
       IFNULL(P.completiondays,0) as plandays,
		IFNULL(P.completiondays,0) as actualdays,
		-- D.department as Department,
         CONCAT(ifnull(PD.stagename,' '), ifnull(D.department,'-'))as Department, 
        PD.stageid, 
		REPLACE(PD.stagename, ' ', '')as stagename, 
		CONCAT(PD.stagename, 'ComPer')as stagenamePer, 
        CONCAT(PD.stagename, 'Proweightage')as Projweightage, 
        PD.parentid, 
        PD.stagecompletionpercentage, 
        PD.projectweightage, 
        PD.managerstatusid,
        PD.customerstatusid,
		O.quotename as projectname,
		P.orderid as orderno,
      -- IFNULL(U.username,'-') as niengineername,
		IFNULL(P.niengineer,'-') as niengineer,
		IFNULL(P.salesengineer,'-') as salesengineer,
        IFNULL(P.actualcompletiondays,NULL) as actualcompletiondays,
        IFNULL(DATE_FORMAT(P.actualenddate,'%d/%m/%Y'),' ') as actualenddate,
        REF.description as modelname,
		(SELECT COUNT(*) FROM project) AS projectcount,
		REF1.sequenceno,
        CONCAT('Sequence',REF1.sequenceno,'startdate')as startdatesequenceno, 
        PD.companyid
        
	FROM project_detail PD
    LEFT JOIN project P ON PD.projectid = P.id
    LEFT JOIN department D ON D.id = PD.departmentid
    LEFT JOIN user1  U ON U.id = P.niengineer
	LEFT JOIN user1  U1 ON U1.id = P.nimanager
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN `reference` REF ON REF.id = O.modelid 
	LEFT JOIN `reference` REF1 ON REF1.id = PD.stageid 
     WHERE PD.companyid = p_companyid
     -- AND   PD.stagename IN ('Installation Stage 3','Final Installation QC','Inspection By EI','Final Payment','Handed Over  Customer','Job Added in Warranty') 
     AND Find_in_set(REF1.sequenceno,'42,43,44,45,46,47,48,49')
	 -- AND projectid=12
     GROUP BY REF1.sequenceno, PD.projectid
     ORDER BY REF1.sequenceno;
    
SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then startdate end) AS `',
      startdatesequenceno, '`'
    )
  ) INTO @sql
FROM
  tempproject1 ORDER BY sequenceno ASC;
  
SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then startdate end) AS `',
      startdatesequenceno, '`'
    )
  ) INTO @sqlstagesecondresult
FROM
  tempproject2 order by sequenceno;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then startdate end) AS `',
      startdatesequenceno, '`'
    )
  ) INTO @sqlstagethiredresult
FROM
  tempproject3 order by sequenceno;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then startdate end) AS `',
      startdatesequenceno, '`'
    )
  ) INTO @sqlstagefourresult
FROM
  tempproject4;
  
 SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then startdate end) AS `',
      startdatesequenceno, '`'
    )
  ) INTO @sqlstagefiveresult
FROM
  tempproject5;
  
  SELECT
  GROUP_CONCAT(DISTINCT
    CONCAT(
      'MAX(case when stagename = ''',
      stagename,
      ''' then startdate end) AS `',
      startdatesequenceno, '`'
    )
  ) INTO @sqlstagesixresult
FROM
  tempproject6;
  
 

 -- SET @sql = CONCAT('SELECT projectid,sequenceno,startdate,orderdate,projectactdate,projectcomdate,Complete,plandays,actualdays,Department,stagename,stagecompletionpercentage,projectname,orderno,niengineer,saleengineer,modelname,projectcount,', @sql,
        -- ' FROM tempproject1 GROUP BY projectid ORDER BY sequenceno ASC');
        
     SET @sql = CONCAT('SELECT projectid,stageid,completionper,sequenceno,startdatesequenceno,orderid,ordervalue, startdate, orderdate, projectactdate, projectcomdate, Complete, plandays, actualdays, Department, stagename, stagecompletionpercentage, projectname, orderno, niengineer, salesengineer, actualcompletiondays,actualenddate, modelname, projectcount, ', @sql,
        ' FROM tempproject1 GROUP BY projectid ORDER BY sequenceno ASC;');
        
        
    
    PREPARE stmt FROM @sql;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
    
   SET @sqlstagesecondresult = CONCAT('SELECT projectid,', @sqlstagesecondresult,
        ' FROM tempproject2 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagesecondresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
     SET @sqlstagethiredresult = CONCAT('SELECT projectid,', @sqlstagethiredresult,
        ' FROM tempproject3 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagethiredresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    
     SET @sqlstagefourresult = CONCAT('SELECT projectid,', @sqlstagefourresult,
        ' FROM tempproject4 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagefourresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 

  IF @sqlstagefiveresult IS NOT NULL THEN
  SET @sqlstagefiveresult = CONCAT('SELECT projectid,', @sqlstagefiveresult,
        ' FROM tempproject5 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagefiveresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    END IF;
    
  IF @sqlstagesixresult IS NOT NULL THEN
  SET @sqlstagesixresult = CONCAT('SELECT projectid,', @sqlstagesixresult,
        ' FROM tempproject6 GROUP BY projectid');
    
    PREPARE stmt FROM @sqlstagesixresult;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt; 
    END IF;
 
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_order_save;

DELIMITER $$
CREATE  PROCEDURE `spc_order_save`(
	IN p_id int(11), 
    IN p_quoteid int(11),
	IN p_leadid int(11), 
	IN p_quotevalue decimal(12,3), 
	IN p_quotetype int(11), 
	IN p_orderdate date, 
	IN p_quotename varchar(45), 
	IN p_quotediscription varchar(45), 
	IN p_quotestatusid int(11), 
	IN p_quotescore decimal(9,3), 
	IN p_quotecategory int(11), 
	IN p_quotesubcategory int(11), 
	IN p_leadsourceid int(11),
	IN p_quotestageid int(11), 
	IN p_typeoflift int(11), 
	IN p_nooflifts int(11), 
	IN p_capacityid int(11), 
	IN p_modelid int(11), 
	IN p_driveid int(11), 
	IN p_machineid int(11), 
	IN p_controlid int(11), 
	IN p_groupcontrolid int(11), 
	IN p_operationid int(11), 
	IN p_speedid int(11), 
	IN p_typeofdoorid int(11), 
	IN p_landingdoorid int(11), 
	IN p_cardoorid int(11), 
	IN p_lowestfloorid int(11), 
	IN p_cwtpositionid int(11), 
	IN p_floorheaightid int(11), 
    IN p_carpanelid int(11),
	IN p_ventilationid int(11),
	IN p_tractionmediaid int(11),
	IN p_mainpowersystemid int(11),
	IN p_carpositionindicatorid int(11),
	IN p_falseceilingid int(11),
	IN p_auxilarysupplysystemid int(11),
	IN p_flooringid int(11),
	IN p_architectidid int(11), 
	IN p_consaltantid int(11), 
	IN p_stopsid int(11), 
	IN p_floormarking int(11), 
	IN p_allopeningsameside varchar(45), 
	IN p_frontopening varchar(45), 
	IN p_backopening varchar(45), 
	IN p_leftopening varchar(45), 
	IN p_rightopening varchar(45), 
	IN p_shaftwidth int(11), 
	IN p_shaftdepth int(11), 
	IN p_cardepth int(11), 
	IN p_carwidth int(11), 
	IN p_carheight int(11), 
	IN p_doorwidth int(11), 
	IN p_doorheight int(11), 
	IN p_travel varchar(45), 
	IN p_pitdepth int(11), 
	IN p_overhead int(11), 
	IN p_mrwidth int(11), 
	IN p_mrdepth int(11), 
	IN p_mrheight int(11), 
	IN p_isdeleted tinyint(4), 
	IN p_winprobability decimal(9,3), 
	IN p_siteaddress varchar(150), 
	IN p_cityid int(11), 
	IN p_stateid int(11), 
	IN p_countryid int(11), 
	IN p_pincode int(11), 
	IN p_phoneno VARCHAR(45), 
	IN p_officialemail varchar(100), 
	IN p_gstn varchar(100), 
	IN p_panno varchar(100), 
	IN p_sociallink1 varchar(100), 
	IN p_sociallink2 varchar(100), 
	IN p_sociallink3 varchar(100),
	IN p_primarycontactid varchar(45), 
	IN p_contactperson varchar(45), 
	IN p_designation varchar(45), 
	IN p_mobileno1 varchar(45), 
    IN p_status VARCHAR(45),
	IN p_companyid int(11),
	IN p_userid INT(11), 
	OUT out_id INT
)
BEGIN

	SET @action = null;

	IF(NULLIF(p_id, '0') IS NULL) THEN
		
		INSERT INTO `order`(id,
							  quoteid,
							  leadid,
							  quotevalue,
                              quotetype,
                              orderdate,
                              quotename,
                              quotediscription,
                              quotestatusid,
                              quotescore,
                              quotecategory, 
							  quotesubcategory,
                              leadsourceid,
                              quotestageid,
                              typeoflift,
                              nooflifts,
                              capacityid,
                              modelid,
                              driveid,
                              machineid, 
                              controlid,
                              operationid,
                              speedid,
                              typeofdoorid,
                              landingdoorid,
                              cardoorid,
                              lowestfloorid,
                              cwtpositionid,
                              floorheaightid,
                              carpanelid,
                              ventilationid,
                              tractionmediaid,
                              mainpowersystemid,
                              carpositionindicatorid,
                              falseceilingid,
							  auxilarysupplysystemid,
                              flooringid,
                              architectidid, 
                              leadconsaltantid,
                              stopsid,
                              floormarking,
                              allopeningsameside,
                              frontopening,
                              backopening,
                              leftopening,
                              rightopening, 
                              shaftwidth,
                              shaftdepth,
                              cardepth,
                              carwidth,
                              carheight,
                              doorwidth,
                              doorheight,
                              travel,
                              pitdepth,
                              overhead,
                              mrwidth,
                              mrdepth, 
                              mrheight,
                              isdeleted,
                              groupcontrolid,
                              winprobability,
                              siteaddress,
                              cityid,
                              stateid,
                              countryid,
                              pincode,
                              phoneno,
                              officialemail,
                              gstn,
                              panno,
                              sociallink1,
                              sociallink2,
                              sociallink3,
                              primarycontactid,
                              contactperson,
                              designation,
                              mobileno1,
                              status,
                              revisionno,
                              companyid)
					   VALUES (p_id,
						       p_quoteid,
                               p_leadid,
						       p_quotevalue,
                               p_quotetype,
                               p_orderdate,
                               p_quotename,
                               p_quotediscription,
                               p_quotestatusid,
                               p_quotescore,
                               p_quotecategory, 
							   p_quotesubcategory,
                               p_leadsourceid,
                               p_quotestageid,
                               p_typeoflift,
                               p_nooflifts,
                               p_capacityid,
                               p_modelid,
                               p_driveid,
                               p_machineid, 
                               p_controlid,
                               p_operationid,
                               p_speedid,
                               p_typeofdoorid,
                               p_landingdoorid,
                               p_cardoorid,
                               p_lowestfloorid,
                               p_cwtpositionid,
                               p_floorheaightid,
                               p_carpanelid,
							   p_ventilationid,
							   p_tractionmediaid,
							   p_mainpowersystemid,
							   p_carpositionindicatorid,
							   p_falseceilingid,
							   p_auxilarysupplysystemid,
							   p_flooringid,
                               p_architectidid, 
                               p_consaltantid,
                               p_stopsid,
                               p_floormarking,
                               p_allopeningsameside,
                               p_frontopening,
                               p_backopening,
                               p_leftopening,
                               p_rightopening, 
                               p_shaftwidth,
                               p_shaftdepth,
                               p_cardepth,
                               p_carwidth,
                               p_carheight,
                               p_doorwidth,
                               p_doorheight,
                               p_travel,
                               p_pitdepth,
                               p_overhead,
                               p_mrwidth,
                               p_mrdepth, 
                               p_mrheight,
                               0,
                               p_groupcontrolid,
                               p_winprobability,
                               p_siteaddress,
                               p_cityid,
                               p_stateid,
                               p_countryid,
                               p_pincode,
                               p_phoneno,
                               p_officialemail,
                               p_gstn,
                               p_panno,
                               p_sociallink1,
                               p_sociallink2,
                               p_sociallink3,
                               p_primarycontactid,
                               p_contactperson,
                               p_designation,
                               p_mobileno1,
                               p_status,
                               1,
                               p_companyid);
		
		SET @action = 'INSERT';
	
	ELSE
		-- save previous values in metadata column
        SET @previouscol = null;
        SET @revisionno = null;
        SET @currval = null;
        SELECT JSON_OBJECT('id',IFNULL(id,'-'),'quoteid',IFNULL(quoteid,'-'),'leadid',IFNULL(leadid,'-'),'quotevalue',IFNULL(quotevalue,'-'),'quotetype',IFNULL(quotetype,'-'),'orderdate',IFNULL(orderdate,'-'),'quotename',IFNULL(quotename,''),
							  'quotediscription',IFNULL(quotediscription,'-'),'quotestatusid',IFNULL(quotestatusid,'-'),'quotescore',IFNULL(quotescore,'-'),'quotecategory',IFNULL(quotecategory,'-'), 
							  'quotesubcategory',IFNULL(quotesubcategory,'-'),'leadsourceid',IFNULL(leadsourceid,'-'),'quotestageid',IFNULL(quotestageid,'-'),'typeoflift',IFNULL(typeoflift,'-'),'nooflifts',IFNULL(nooflifts,'-'),'capacityid',IFNULL(capacityid,'-'),'modelid',IFNULL(modelid,'-'),'driveid',IFNULL(driveid,'-'),'machineid',IFNULL(machineid,'-'), 
                              'controlid',IFNULL(controlid,'-'),'operationid',IFNULL(operationid,'-'),'speedid',IFNULL(speedid,'-'),'typeofdoorid',IFNULL(typeofdoorid,'-'),'landingdoorid',IFNULL(landingdoorid,'-'),'cardoorid',IFNULL(cardoorid,'-'),'lowestfloorid',IFNULL(lowestfloorid,'-'),'cwtpositionid',IFNULL(cwtpositionid,'-'),'floorheaightid',IFNULL(floorheaightid,'-'),
                              'architectidid',IFNULL(architectidid,'-'),'leadconsaltantid',IFNULL(leadconsaltantid,'-'),'stopsid',IFNULL(stopsid,'-'),'floormarking',IFNULL(floormarking,'-'),'allopeningsameside',IFNULL(allopeningsameside,'-'),'frontopening',IFNULL(frontopening,'-'),'backopening',IFNULL(backopening,'-'),'leftopening',IFNULL(leftopening,'-'),
                              'rightopening',IFNULL(rightopening,'-'),'shaftwidth',IFNULL(shaftwidth,'-'),'shaftdepth',IFNULL(shaftdepth,'-'),'cardepth',IFNULL(cardepth,'-'),'carwidth',IFNULL(carwidth,'-'),'carheight',IFNULL(carheight,'-'),'doorwidth',IFNULL(doorwidth,'-'),'doorheight',IFNULL(doorheight,'-'),'travel',IFNULL(travel,'-'),'pitdepth',IFNULL(pitdepth,'-'),
                              'overhead',IFNULL(overhead,'-'),'mrwidth',IFNULL(mrwidth,'-'),'mrdepth',IFNULL(mrdepth,'-'),'mrheight',IFNULL(mrheight,'-'),'isdeleted',IFNULL(isdeleted,'-'),'groupcontrolid',IFNULL(groupcontrolid,'-'),'winprobability',IFNULL(winprobability,'-'),'siteaddress',IFNULL(siteaddress,'-'),'cityid',IFNULL(cityid,'-'),'stateid',IFNULL(stateid,'-'),
                              'countryid',IFNULL(countryid,'-'),'pincode',IFNULL(pincode,'-'),'phoneno',IFNULL(phoneno,'-'),'officialemail',IFNULL(officialemail,'-'),'gstn',IFNULL(gstn,'-'),'panno',IFNULL(panno,'-'),'sociallink1',IFNULL(sociallink1,'-'),'sociallink2',IFNULL(sociallink2,'-'),'sociallink3',IFNULL(sociallink3,'-'),'primarycontactid',IFNULL(primarycontactid,'-'),
                              'contactperson',IFNULL(contactperson,'-'),'destination',IFNULL(designation,'-'),'mobileno1',IFNULL(mobileno1,'-'),'status',IFNULL(status,'-'),'includinggst',IFNULL(includinggst,'-'),'snehasalescontactname',IFNULL(snehasalescontactname,'-'),
                              'snehasalescontactno',IFNULL(snehasalescontactno,'-'),'revisionno',IFNULL(revisionno,'-'),'carpanelid',IFNULL(carpanelid,'-'),'ventilationid',IFNULL(ventilationid,'-'),'tractionmediaid',IFNULL(tractionmediaid,'-'),'mainpowersystemid',IFNULL(mainpowersystemid,'-'),'carpositionindicatorid',IFNULL(carpositionindicatorid,'-'),
                              'falseceilingid',IFNULL(falseceilingid,'-'),'auxilarysupplysystemid',IFNULL(auxilarysupplysystemid,'-'),'flooringid',IFNULL(flooringid,'-'),'shaftconditionid',IFNULL(shaftconditionid,'-'),'unitid',IFNULL(unitid,'-'))
		INTO @currval FROM `order` WHERE id = p_id;
        
        SELECT @currval;
        
        -- get current value form metadata
        SELECT previousvalues INTO @previouscol FROM `order` WHERE id = p_id AND previousvalues IS NOT NULL;
		SELECT revisionno INTO @revisionno FROM `order` WHERE id = p_id;

		IF @previouscol IS NOT NULL THEN
			UPDATE `order`
			SET previousvalues = JSON_ARRAY_APPEND(CAST(@previouscol AS JSON), '$', @currval),
				revisionno = (@revisionno + 1)
			WHERE id = p_id;
		ELSE
			UPDATE `order`
			SET previousvalues = JSON_ARRAY(@currval),
				revisionno = (@revisionno + 1)
			WHERE id = p_id;
		END IF;
       
		UPDATE `order`
		SET 
            leadid = p_leadid,
            quoteid = p_quoteid,
            quotevalue = p_quotevalue,
            quotetype = p_quotetype,
            orderdate = p_orderdate,
            quotename = p_quotename,
            quotediscription = p_quotediscription,
            quotestatusid = p_quotestatusid,
            quotescore = p_quotescore,
            quotecategory = p_quotecategory,
            quotesubcategory = p_quotesubcategory,
            leadsourceid = p_leadsourceid,
            quotestageid = p_quotestageid,
            typeoflift = p_typeoflift,
            nooflifts = p_nooflifts,
            capacityid = p_capacityid,
            modelid = p_modelid,
            driveid = p_driveid,
            machineid = p_machineid,
			controlid = p_controlid,
            operationid = p_operationid,
            speedid = p_speedid,
            typeofdoorid = p_typeofdoorid,
            landingdoorid = p_landingdoorid,
            cardoorid = p_cardoorid,
            lowestfloorid = p_lowestfloorid,
            cwtpositionid = p_cwtpositionid,
            floorheaightid = p_floorheaightid,
            carpanelid = p_carpanelid,
			ventilationid = p_ventilationid,
			tractionmediaid = p_tractionmediaid,
			mainpowersystemid = p_mainpowersystemid,
			carpositionindicatorid = p_carpositionindicatorid,
			falseceilingid = p_falseceilingid,
			auxilarysupplysystemid = p_auxilarysupplysystemid,
			flooringid = p_flooringid,
            architectidid = p_architectidid, 
			leadconsaltantid = p_consaltantid,
            stopsid = p_stopsid,
            floormarking = p_floormarking,
            allopeningsameside = p_allopeningsameside,
            frontopening = p_frontopening,
            backopening = p_backopening,
            leftopening = p_leftopening,
            rightopening = p_rightopening, 
			shaftwidth = p_shaftwidth,
            shaftdepth = p_shaftdepth,
            cardepth = p_cardepth,
            carwidth = p_carwidth,
            carheight = p_carheight,
            doorwidth = p_doorwidth,
            doorheight = p_doorheight,
            travel = p_travel,
            pitdepth = p_pitdepth,
            overhead = p_overhead,
            mrwidth = p_mrwidth,
            mrdepth = p_mrdepth, 
			mrheight = p_mrheight,
            isdeleted = p_isdeleted,
            groupcontrolid = p_groupcontrolid,
            winprobability = p_winprobability,
            siteaddress = p_siteaddress,
            cityid = p_cityid,
            stateid = p_stateid,
            countryid = p_countryid,
            pincode = p_pincode,
            phoneno = p_phoneno,
			officialemail = p_officialemail,
            gstn = p_gstn,
            panno = p_panno,
            sociallink1 = p_sociallink1,
            sociallink2 = p_sociallink2,
            sociallink3 = p_sociallink3,
            primarycontactid = p_primarycontactid,
            contactperson = p_contactperson,
            designation = p_designation,
			mobileno1 = p_mobileno1,
            status = p_status,
            companyid = p_companyid,
			id = LAST_INSERT_ID(id)
			
		WHERE id = p_id
		AND companyid = p_companyid;
		
		SET @action = 'UPDATE';
		
	END IF;
	
	SELECT LAST_INSERT_ID() INTO OUT_ID;
    
    -- save order as project when order gets confirmed
    IF(p_status = 'Confirmed') THEN
		
		SET @projectid = null;
		call spc_project_save(
			null, OUT_ID, p_quotevalue, null, p_orderdate, null,null, 1,null,null, null, null, null,null,p_companyid, p_userid, @projectid
        );
        
        SET @row_number = 0;
	   
		DROP TABLE IF EXISTS tempprojectdetail;
		CREATE TEMPORARY TABLE tempprojectdetail
		
		SELECT (@row_number:=@row_number + 1) AS num, id as stageid, description, stageper, projectper from (
			SELECT 
				id,
				description,
				stageper,
				projectper
			FROM reference
			where typecode = 'ProMilestones' AND  active=1
            
		) 
		as tblprojectdetail;
        
        BEGIN
			DECLARE n INT DEFAULT 0;
			DECLARE i INT DEFAULT 0;
			SELECT COUNT(*) FROM tempprojectdetail INTO n;
			 
			WHILE i<n DO 
				SET @stageid = null;
				SET @description = null;
				SET @stageper = null;
				SET @projectper = null;
				select stageid, description, stageper, projectper 
                into @stageid, @description, @stageper, @projectper from tempprojectdetail where num = i+1;
				 
				 SET @projectdetailid = null;
				 CALL spc_projectdetail_save( 	
					NULL,
					@projectid,
					@stageid,
					@description,
					NULL,
					@stageper,
					@projectper,
					NULL,
					NULL,
					NULL,
                    Null,
					NULL,
					NULL,
					NULL,
                    NULL,
					NULL,
					NULL,
                    NULL,
                    NULL,
                    0,
                    0,
					NULL,
					p_companyid,
					p_userid,
					@projectdetailid
				 );
				SET i = i + 1;
			END WHILE;
		End;
        
        -- save project NI details
        
        SET @row_number1 = 0;
	   
		DROP TABLE IF EXISTS tempprojectnidetail;
		CREATE TEMPORARY TABLE tempprojectnidetail
        
		
		SELECT (@row_number1:=@row_number1 + 1) AS num1, id as stageid, description, stageper, projectper, parentid from (
			SELECT 
				id,
				description,
				stageper,
				projectper,
                parentid
			FROM reference
			where typecode = 'Nimaster' AND  active=1
		) 
		as tblprojectnidetail;
        
        BEGIN
			DECLARE n1 INT DEFAULT 0;
			DECLARE i1 INT DEFAULT 0;
			SELECT COUNT(*) FROM tempprojectnidetail INTO n1;
			 
			WHILE i1<n1 DO 
				SET @stageid1 = null;
				SET @description1 = null;
				SET @stageper1 = null;
				SET @projectper1 = null;
                SET @parentid1 = null;
				select stageid, description, stageper, projectper, parentid 
                into @stageid1, @description1, @stageper1, @projectper1, @parentid1 from tempprojectnidetail where num1 = i1+1;
				
                 SET @nidetailid = null;
                 call spc_niprojectdetail_save(
					NULL,
					@projectid,
					@stageid1,
					@description1,
					@parentid1,
					@stageper1,
					@projectper1,
                    NULL,
					NULL,
					NULL,
                    Null,
					NULL,
					NULL,
					NULL,
                    0,
					NULL,
					NULL,
                    NULL,
                    NULL,
					p_companyid,
                    @nidetailid
                 );
				SET i1 = i1 + 1;
			END WHILE;
		End;
    END IF;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_project_save;

DELIMITER $$
CREATE  PROCEDURE `spc_project_save`(
	IN p_id INT,
	IN p_orderid INT(11),
    IN p_ordervalue DECIMAL(12,3),
    IN p_completiondays INT(11),
    IN p_startdate DATE,
    IN p_enddate DATE,
	IN p_leadname VARCHAR(20),
	IN p_isactive TINYINT(4),
	IN p_niengineer VARCHAR(20),
	IN p_nimanager VARCHAR(20),
    IN p_salesengineer VARCHAR(50),
	IN p_salesmanager VARCHAR(50),
    IN p_assignedto INT(11),
    IN p_assignedby INT(11), 
    IN p_companyid INT,
    IN p_userid INT,
    OUT out_id INT
)
BEGIN

	SET @action = null;
    
    SET @action = null;
	SET @leadid = null;
    SET @orderid= null;

	BEGIN
		
		IF(NULLIF(p_id, '0') IS NULL) THEN
		
			INSERT INTO project 
				(orderid, ordervalue, completiondays, startdate, enddate,isactive,niengineer,nimanager, assignedto, assignedby, companyid,salesengineer,salesmanager)
			VALUES 
				(p_orderid, p_ordervalue, p_completiondays, p_startdate, p_enddate,p_isactive,p_niengineer,p_nimanager, p_assignedto, p_assignedby, p_companyid,p_salesengineer,p_salesmanager);
				
		SET @action = 'INSERT';
		
	ELSE
    
    IF(p_leadname IS  NOT NULL) THEN
     SELECT 
     O.leadid  INTO  @leadid 
     from
     `order` O where  O.id=p_orderid;
    
    UPDATE leads 
    SET leadname =p_leadname
    where  id= @leadid ;
    
    UPDATE quotation 
    SET quotename = p_leadname
    WHERE leadid = @leadid;
    END IF;


		UPDATE project
			SET 
				orderid = p_orderid,
                ordervalue = p_ordervalue,
                completiondays = p_completiondays,
                startdate = p_startdate,
                enddate = p_enddate,
                niengineer=p_niengineer,
                nimanager=p_nimanager,
				salesengineer=p_salesengineer,
                salesmanager=p_salesmanager,
                assignedto = p_assignedto,
                assignedby = p_assignedby,
                companyid = p_companyid,
                isactive=p_isactive,
				id = LAST_INSERT_ID(id)
			WHERE
				id = p_id 
				AND companyid = p_companyid;
				
			SET @action = 'UPDATE';        
					
		END IF;
		
		SELECT LAST_INSERT_ID() INTO out_id; 
		
	END;
    
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_project_search;

DELIMITER $$
CREATE  PROCEDURE `spc_project_search`(
	IN p_companyid INT
)
BEGIN

	SELECT
			P.id,
            P.orderid,
            Q.quotename,
            P.ordervalue,
            REF.description as model,
            DATE_FORMAT(P.startdate,'%d/%m/%Y') as startdate,
			DATE_FORMAT(P.enddate,'%d/%m/%Y') as enddate,
            P.completiondays,
            P.assignedby,
            P.assignedto
	FROM project P
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN quotation Q ON Q.id = O.quoteid
    LEFT JOIN `reference` REF ON REF.id = Q.modelid
    
	WHERE P.companyid = p_companyid;
	
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_project_select;

DELIMITER $$
CREATE  PROCEDURE `spc_project_select`(
	IN p_id INT
)
BEGIN

	SELECT
			P.id,
            P.orderid,
            P.ordervalue,
            L.leadname,
            DATE_FORMAT(P.startdate,'%d/%m/%Y') as startdate,
			DATE_FORMAT(P.enddate,'%d/%m/%Y') as enddate,
            P.completiondays,
            P.isactive,
			P.niengineer,
            P.nimanager,
            P.salesengineer,
            P.salesmanager,
            P.assignedby,
            P.assignedto
	FROM project P
    LEFT JOIN `order` O ON O.id = P.orderid
    LEFT JOIN leads L ON L.id = O.leadid
	WHERE P.id = p_id;
	
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_projectdetail_save;

DELIMITER $$
CREATE  PROCEDURE `spc_projectdetail_save`(
	IN p_id INT(11),
    IN p_projectid int(11), 
	IN p_stageid int(11), 
	IN p_stagename varchar(100), 
	IN p_parentid int(11), 
	IN p_stagecompletionpercentage decimal(9,3), 
	IN p_projectweightage decimal(9,3), 
	IN p_managerstatusid int(11), 
	IN p_customerstatusid int(11), 
	IN p_iscompleted tinyint(4), 
	IN p_startdate date, 
	IN p_enddate date,
    IN p_actualstartdate DATETIME, 
    IN p_actualenddate DATETIME, 
	IN p_actualcompletiondays DECIMAL(4,1),
    IN p_completionper INT(11),
    IN p_departmentid INT(11),
    IN P_isactive tinyint(4),
	IN p_attachment varchar(150), 
	IN p_isstd tinyint(4), 
	IN p_isdeleted tinyint(4),
	IN p_completiondays varchar(50), 
	IN p_companyid int(11),
	IN p_userid INT(11),
	OUT out_id INT(11)
)
BEGIN

	SET @action = null;
    
    SET @action = null;
	BEGIN
		
		IF(NULLIF(p_id, '0') IS NULL) THEN
		
			INSERT INTO project_detail 
				(projectid, stageid, stagename, parentid, stagecompletionpercentage, projectweightage, managerstatusid,
                customerstatusid, iscompleted, startdate, enddate,actualstartdate,actualenddate,actualcompletiondays,completionper,departmentid,isactive, attachment, isstd, isdeleted,completiondays,companyid)
			VALUES 
				(p_projectid, p_stageid, p_stagename, p_parentid, p_stagecompletionpercentage, p_projectweightage, p_managerstatusid,
                p_customerstatusid, p_iscompleted, p_startdate, p_enddate,p_actualstartdate,p_actualenddate,p_actualcompletiondays,p_completionper,p_departmentid,P_isactive,p_attachment, p_isstd, p_isdeleted,p_completiondays,p_companyid);
				
		SET @action = 'INSERT';
		
	ELSE
	
		UPDATE project_detail
			SET 
				projectid = p_projectid,
                stageid = p_stageid,
                stagename = p_stagename,
                parentid = p_parentid,
                stagecompletionpercentage = p_stagecompletionpercentage,
                projectweightage = p_projectweightage,
                managerstatusid = p_managerstatusid,
                customerstatusid = p_customerstatusid,
                iscompleted = p_iscompleted,
                startdate = p_startdate,
                enddate = p_enddate,
                actualstartdate=p_actualstartdate,
                actualenddate=p_actualenddate,
                actualcompletiondays=p_actualcompletiondays,
                departmentid=p_departmentid,
                isactive=P_isactive,
                attachment = p_attachment,
                isstd = p_isstd,
                completiondays=p_completiondays,
                completionper=p_completionper,
                isdeleted = p_isdeleted,
                companyid = p_companyid,
				id = LAST_INSERT_ID(id)
			WHERE
				id = p_id 
				AND companyid = p_companyid;
                
			
			SET @action = 'UPDATE';        
					
		END IF;
		
		SELECT LAST_INSERT_ID() INTO out_id; 
		
	END;

END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS spc_projectdetail_search;

DELIMITER $$
CREATE  PROCEDURE `spc_projectdetail_search`(
	IN p_companyid int(11)
)
BEGIN
		
	SELECT id, 
		   projectid, 
		   stageid, 
		   stagename, 
		   parentid, 
		   stagecompletionpercentage, 
		   projectweightage, 
		   managerstatusid,
		   customerstatusid, 
		   iscompleted, 
		   DATE_FORMAT(startdate,'%d/%m/%Y') as startdate,
		   DATE_FORMAT(enddate,'%d/%m/%Y') as enddate, 
		   attachment, 
		   isstd, 
		   isdeleted
		FROM project_detail
		
		WHERE id = p_id;
        
END$$
DELIMITER ;


DROP PROCEDURE IF EXISTS spc_projectdetail_select;

DELIMITER $$
CREATE  PROCEDURE `spc_projectdetail_select`(
	IN p_id INT(11)
)
BEGIN

	SET @counter = 0;

SELECT (@counter := @counter + 1) AS count ,  
              id, 
           projectid, 
		   stageid, 
           stagename, 
           parentid, 
           stagecompletionpercentage, 
           projectweightage, 
           managerstatusid,
		   customerstatusid,
           completiondays,
           isactive,
           iscompleted, 
           DATE_FORMAT(startdate,'%d/%m/%Y') as startdate,
		   DATE_FORMAT(enddate,'%d/%m/%Y') as enddate,
           actualstartdate,
           actualenddate,
           actualcompletiondays,
           completionper,
           departmentid,
           attachment,
           isstd,
           isdeleted,
           companyid
	FROM project_detail
    
    WHERE projectid= p_id;

END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_niprojectdetail_save;
DELIMITER $$
CREATE  PROCEDURE `spc_niprojectdetail_save`(
	IN p_id int(11), 
	IN p_projectid int(11), 
	IN p_stageid int(11),
	IN p_stagename varchar(150), 
	IN p_parentid int(11), 
	IN p_stagecompletionpercentage decimal(9,3), 
	IN p_projectweightage decimal(9,3), 
	IN p_managerstatusid int(11), 
	IN p_customerstatusid int(11), 
	IN p_iscompleted tinyint(4), 
	IN p_startdate date, 
	IN p_enddate date, 
	IN p_attachment varchar(150), 
	IN p_isstd tinyint(4), 
	IN p_isdeleted tinyint(4), 
	IN p_completiondays varchar(45), 
	IN p_isactive tinyint(4), 
	IN p_actualstartdate date, 
	IN p_actualenddate date, 
	IN p_companyid int(11),
    OUT out_id int(11)
)
BEGIN
	SET @action = null;
    
    BEGIN
		
		IF(NULLIF(p_id, '0') IS NULL) THEN
			INSERT INTO project_ni_detail(
						projectid, 
						stageid,
						stagename, 
						parentid, 
						stagecompletionpercentage, 
						projectweightage, 
						managerstatusid, 
						customerstatusid, 
						iscompleted, 
						startdate, 
						enddate, 
						attachment, 
						isstd, 
						isdeleted, 
						completiondays, 
						isactive, 
						actualstartdate, 
                        actualenddate,
                        companyid
                        )
            VALUES(
						p_projectid, 
						p_stageid,
						p_stagename, 
						p_parentid, 
						p_stagecompletionpercentage, 
						p_projectweightage, 
						p_managerstatusid, 
						p_customerstatusid, 
						p_iscompleted, 
						p_startdate, 
						p_enddate, 
						p_attachment, 
						p_isstd, 
						p_isdeleted, 
						p_completiondays, 
						p_isactive, 
						p_actualstartdate, 
                        p_actualenddate,
                        p_companyid
					);
		    SET @action = 'INSERT';
        ELSE
		/*	UPDATE project_ni_detail
			SET 
				projectid = p_projectid,
                stageid = p_stageid,
                startdate = p_startdate,
                enddate = p_enddate,
                companyid = p_companyid,
				id = LAST_INSERT_ID(id)
			WHERE
				-- id = p_id 
                projectid= p_projectid
				AND stageid = p_stageid
				AND companyid = p_companyid;
        END IF;*/
        
        UPDATE project_ni_detail
			SET 
			            projectid = p_projectid, 
						stageid = p_stageid,
						stagename = p_stagename,  
						parentid = p_parentid, 
						stagecompletionpercentage = p_stagecompletionpercentage, 
						projectweightage = p_projectweightage,  
						managerstatusid = p_managerstatusid, 
						customerstatusid = p_customerstatusid, 
						iscompleted = p_iscompleted, 
						startdate = p_startdate, 
						enddate = p_enddate, 
						attachment = p_attachment, 
						isstd = p_isstd, 
						isdeleted = p_isdeleted, 
						completiondays = p_completiondays, 
						isactive = p_isactive, 
						actualstartdate = p_actualstartdate, 
                        actualenddate = p_actualenddate,
                        companyid = p_companyid,
				        id = LAST_INSERT_ID(id)
			WHERE
				id = p_id 
                AND projectid= p_projectid
				-- AND stageid = p_stageid
				AND companyid = p_companyid;
        END IF;
        
        SELECT LAST_INSERT_ID() INTO out_id; 
		
	END;
    
END$$
DELIMITER ;
DROP PROCEDURE IF EXISTS spc_niprojectdetail_search;
DELIMITER $$
CREATE  PROCEDURE `spc_niprojectdetail_search`(
	IN p_projectid INT(11)
)
BEGIN

	SELECT PN.id,
		   PN.projectid,
           PN.stageid,
           PN.stagename,
           PN.parentid,
           PN.stagecompletionpercentage,
           PN.projectweightage, 
		   PN.managerstatusid,
		   PN.customerstatusid, 
		   PN.iscompleted, 
		   PN.startdate, 
		   PN.enddate, 
		   PN.attachment, 
		   PN.isstd, 
		   PN.isdeleted, 
		   PN.completiondays, 
		   PN.isactive, 
		   PN.actualstartdate, 
		   PN.actualenddate, 
		   PN.companyid
	FROM project_ni_detail PN 
    WHERE PN.projectid = p_projectid;

END$$
DELIMITER ;
DROP PROCEDURE IF EXISTS spc_niprojectdetail_select;

DELIMITER $$
CREATE  PROCEDURE `spc_niprojectdetail_select`(
	IN p_id INT(11)
)
BEGIN

SET @counter = 0;
SELECT (@counter := @counter + 1) AS count ,  
		   PN.id,
		   PN.projectid,
           PN.stageid,
           PN.stagename,
           PN.parentid,
           PN.stagecompletionpercentage,
           PN.projectweightage, 
		   PN.managerstatusid,
		   PN.customerstatusid, 
		   PN.iscompleted, 
		   DATE_FORMAT(PN.startdate,'%d/%m/%Y') as startdate,
		   DATE_FORMAT(PN.enddate,'%d/%m/%Y') as enddate,
		   PN.attachment, 
		   PN.isstd, 
		   PN.isdeleted, 
		   PN.completiondays, 
		   PN.isactive, 
		   DATE_FORMAT(PN.actualstartdate,'%d/%m/%Y') as actualstartdate,
		   DATE_FORMAT(PN.actualenddate,'%d/%m/%Y') as actualenddate,
		   PN.companyid
	FROM project_ni_detail PN 
    WHERE PN.projectid = p_id;

END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_documentcollectiondetails_save;
DELIMITER $$
CREATE  PROCEDURE `spc_documentcollectiondetails_save`(
	IN p_id INT(11),
    IN p_projectid INT(11),
    IN p_stageid INT(11),
    IN p_parentstageid INT(11),
    IN p_document_id INT(11),
    IN p_image_url VARCHAR(250),
    IN p_companyid INT,
    IN p_userid INT,
    OUT out_id INT
)
BEGIN

	SET @action = null;

	IF(NULLIF(p_id, '0') IS NULL) THEN
	
		INSERT INTO  documentcollectiondetails
				(id,projectid, stageid,parentstageid, document_id, image_url, company_id)
			VALUES 
				(p_id,p_projectid, p_stageid,p_parentstageid,p_document_id, p_image_url, p_companyid);
		
        SET @action = 'INSERT';
        
	ELSE
    
		UPDATE documentcollectiondetails
				SET projectid=p_projectid,
					stageid = p_stageid, 
                    parentstageid = p_parentstageid,
					document_id = p_document_id,
					image_url = p_image_url,
					company_id = p_companyid,
					id = LAST_INSERT_ID(id)
			WHERE
				id = p_id
                AND companyid = p_companyid;
                
			SET @action = 'UPDATE';

	END IF;
    
    SELECT LAST_INSERT_ID() INTO out_id;
    
    -- record log
   -- CALL spc_commonlog_save(p_companyid, 'cbf_documentcollectiondetails', out_id, @action, p_userid);

    

END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_documentcollectiondetails_search;

DELIMITER $$
CREATE  PROCEDURE `spc_documentcollectiondetails_search`(
	-- IN p_projectid INT(11),
  --   IN p_stageid INT(11),
	IN p_companyid INT(11)
)
BEGIN
	SELECT *
    FROM documentcollectiondetails DD
    WHERE 
    -- DD.stageid = p_stageid 
    -- AND  DD.projectid=p_projectid
     DD.company_id = p_companyid;
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_documentcollectiondetails_select;

DELIMITER $$
CREATE  PROCEDURE `spc_documentcollectiondetails_select`(
    IN p_projectid INT(11),
    IN p_stageid INT(11),
    IN p_companyid INT(11),
	IN p_document_id INT(11)

)
BEGIN
	SELECT * FROM documentcollectiondetails DD
    WHERE
    -- DD.id = p_id
    DD.projectid = p_projectid
	AND DD.stageid = p_stageid 
    AND DD.company_id = p_companyid
    AND DD.document_id=p_document_id;
    
END$$
DELIMITER ;

DROP PROCEDURE IF EXISTS spc_documentcollectiondetails_delete;

DELIMITER $$
CREATE  PROCEDURE `spc_documentcollectiondetails_delete`(
IN p_id INT(11),
IN p_projectid INT(11),
IN p_stageid INT(11)
)
BEGIN

	DELETE FROM documentcollectiondetails WHERE id = p_id;

END$$
DELIMITER ;

DROP FUNCTION IF EXISTS fnc_getprojectactualenddate;
DELIMITER $$
CREATE  FUNCTION `fnc_getprojectactualenddate`(
	p_projectid INT
) RETURNS date
    READS SQL DATA
    DETERMINISTIC
BEGIN

	SET @projctactenddate = null;
	  select 
       DATE(actualenddate) INTO @projctactenddate
      from project_detail 
	   where projectid = p_projectid
       ORDER BY id DESC limit 1;

RETURN @projctactenddate;
END$$
DELIMITER ;

DROP FUNCTION IF EXISTS fnc_getprojctwiseactcomdays;
DELIMITER $$
CREATE  FUNCTION `fnc_getprojctwiseactcomdays`(
	p_projectid INT
) RETURNS int(11)
    READS SQL DATA
    DETERMINISTIC
BEGIN

	SET @actualcompletiondays = null;
	    select SUM(actualcompletiondays)  INTO @actualcompletiondays
        from project_detail 
		where projectid=p_projectid
		ORDER BY id DESC limit 1;

RETURN @actualcompletiondays;
END$$
DELIMITER ;



ALTER TABLE `project` 
ADD COLUMN `niactualcompletiondays` INT(11) NULL AFTER `nicompletionper`,
ADD COLUMN `niactualenddate` INT(11) NULL AFTER `actualdays`;




DROP procedure IF EXISTS `spc_project_update`;

DELIMITER $$

CREATE  PROCEDURE `spc_project_update`(
    IN p_id INT(11),
    IN p_actualcompletiondays INT(11),
    IN p_field VARCHAR(20),
    IN p_actualenddate DATE,
    IN p_niengineer VARCHAR(20),
    IN p_salesengineer VARCHAR(50),
    IN p_completionper INT(11),
    IN p_companyid INT,
    IN p_userid INT,
    OUT out_id INT
)
BEGIN
    DECLARE action VARCHAR(10);
    
    IF p_field = 'project' THEN
        UPDATE project
        SET 
            actualcompletiondays = p_actualcompletiondays,
            actualenddate = p_actualenddate,
            niengineer = p_niengineer,
            completionper = p_completionper,
            salesengineer = p_salesengineer,
            companyid = p_companyid
        WHERE
            id = p_id 
            AND companyid = p_companyid;
        SET action = 'UPDATE'; 
    ELSE
        UPDATE project
        SET 
            niactualcompletiondays = p_actualcompletiondays,
            niactualenddate = p_actualenddate,
            niengineer = p_niengineer,
            nicompletionper = p_completionper,
            salesengineer = p_salesengineer,
            companyid = p_companyid
        WHERE
            id = p_id 
            AND companyid = p_companyid;
        SET action = 'UPDATE'; 
    END IF;
    
    SELECT LAST_INSERT_ID() INTO out_id;
END;$$

DELIMITER ;
;

ALTER TABLE `db_elev8r`.`reference` 
ADD COLUMN `modelid` INT(11) NULL DEFAULT NULL AFTER `sequenceno`;


ALTER TABLE `project` 
CHANGE COLUMN `niactualenddate` `niactualenddate` DATE NULL DEFAULT NULL ;

ALTER TABLE `documentcollectiondetails` 
ADD COLUMN `document_name` VARCHAR(45) NULL DEFAULT NULL AFTER `projectid`;




ALTER TABLE `project` 
ADD COLUMN `nicompletionper` INT(11) NULL AFTER `subcontractorid2`,
ADD COLUMN `niactualcompletiondays` INT(11) NULL AFTER `nicompletionper`,
ADD COLUMN `niactualenddate` DATE NULL AFTER `niactualcompletiondays`;



ALTER TABLE `documentcollectiondetails` 
ADD COLUMN `document_name` VARCHAR(150) NULL AFTER `projectid`,
CHANGE COLUMN `image_url` `document_url` VARCHAR(250) NULL DEFAULT NULL ;





DROP procedure IF EXISTS `db_elev8r`.`spc_project_update`;
;

DELIMITER $$
CREATE  PROCEDURE `spc_project_update`(
    IN p_id INT(11),
    IN p_actualcompletiondays INT(11),
    IN p_field VARCHAR(20),
    IN p_actualenddate DATE,
    IN p_niengineer VARCHAR(20),
    IN p_salesengineer VARCHAR(50),
    IN p_completionper INT(11),
    IN p_companyid INT,
    IN p_userid INT,
    OUT out_id INT
)
BEGIN
    DECLARE action VARCHAR(10);
    
    IF p_field = 'project' THEN
        UPDATE project
        SET 
            actualcompletiondays = p_actualcompletiondays,
            actualenddate = p_actualenddate,
            niengineer = p_niengineer,
            completionper = p_completionper,
            salesengineer = p_salesengineer,
            companyid = p_companyid
        WHERE
            id = p_id 
            AND companyid = p_companyid;
        SET action = 'UPDATE'; 
    ELSE
        UPDATE project
        SET 
            niactualcompletiondays = p_actualcompletiondays,
            niactualenddate = p_actualenddate,
            niengineer = p_niengineer,
            nicompletionper = p_completionper,
            salesengineer = p_salesengineer,
            companyid = p_companyid
        WHERE
            id = p_id 
            AND companyid = p_companyid;
        SET action = 'UPDATE'; 
    END IF;
    
    SELECT LAST_INSERT_ID() INTO out_id;
END$$

DELIMITER ;
;




DROP procedure IF EXISTS `db_elev8r`.`spc_reference_save`;
;

DELIMITER $$
CREATE PROCEDURE `spc_reference_save`(
 IN p_id INT(11),
 IN p_typecode VARCHAR(100),
 IN p_parentid INT(11),
 IN p_parenttypecode VARCHAR(200),
 IN p_description VARCHAR(200),
 IN p_active TINYINT(4),
 IN p_defaultvalue TINYINT(4),
 IN p_projectper DECIMAL(9,3),
 IN p_stageper DECIMAL(9,3),
 IN p_departmentid INT(11),
 IN p_sequenceno INT(11),
 IN p_modelid varchar(200),
 IN p_companyid INT(11),
 IN p_userid INT(11),
 OUT out_id INT )
BEGIN
	SET @action = null;
    SET @prjCnt = null;
    
    SELECT count(*) INTO @prjCnt FROM project WHERE companyid = p_companyid;
	IF(p_defaultvalue = 1) THEN
		UPDATE reference SET defaultvalue = 0 WHERE typecode = p_typecode;
    END IF;
	IF(NULLIF(p_id, '0') IS NULL) THEN
		INSERT INTO reference(typecode, parentid, parenttypecode, description, active, defaultvalue,projectper,stageper, createddate, modifieddate, departmentid, sequenceno, modelid, companyid)
		VALUES (p_typecode, p_parentid, p_parenttypecode, p_description, p_active,p_defaultvalue,p_projectper,p_stageper, now(), now(),p_departmentid, p_sequenceno, p_modelid, p_companyid);
		
        
		SET @action = 'INSERT';
        
        IF(p_typecode = 'ProMilestones') THEN
			IF(@prjCnt > 0) THEN
				SET @row_number = 0;
				
				DROP TABLE IF EXISTS tempproject;
				CREATE TEMPORARY TABLE tempproject
				
				SELECT (@row_number:=@row_number + 1) AS num, id as projectid from (
					SELECT 
						id
					FROM project
				) 
				as tblproject;

				BEGIN
					DECLARE n INT DEFAULT 0;
					DECLARE i INT DEFAULT 0; 
					SELECT COUNT(*) FROM tempproject INTO n;

					WHILE i < n DO
						SET @projectid = NULL;
						SELECT projectid INTO @projectid FROM tempproject WHERE num = i + 1;

						SET @projectdetailid = null;
						 CALL spc_projectdetail_save( 	
							NULL,
							@projectid,
							(SELECT id FROM reference WHERE description = p_description LIMIT 1),
							p_description,
							p_parentid,
							null,
							null,
							NULL,
							NULL,
							0,
							Null,
							NULL,
							NULL,
							NULL,
							NULL,
							NULL,
							p_departmentid,
							0,
							NULL,
							1,
							0,
							NULL,
							p_companyid,
							p_userid,
							@projectdetailid
						 );

						SET i = i + 1;
					END WHILE;
				END;
			END IF;
        END IF;
	
	ELSE
		UPDATE reference
		SET typecode = p_typecode, 
			parentid = p_parentid, 
            parenttypecode = p_parenttypecode, 
			description = p_description,
            active = p_active,
            defaultvalue = p_defaultvalue,
            projectper = p_projectper,
            stageper = p_stageper,
            modifieddate = now(),
            departmentid = p_departmentid,
            sequenceno = p_sequenceno,
            modelid = p_modelid,
			companyid = p_companyid,
			id = LAST_INSERT_ID(id)
			
		WHERE id = p_id
		AND companyid = p_companyid;
		
		SET @action = 'UPDATE';
        
        IF(@prjCnt > 0) THEN
			SET @master = null;
			SELECT master INTO @master FROM referencetype WHERE typecode = p_typecode;
			
			IF(@master = 'ProjectMaster') THEN
				UPDATE project_detail
				SET stagename = p_description
				-- stagecompletionpercentage = p_stageper,
				-- projectweightage = p_projectper
				WHERE stageid = p_id;
			END IF;
		END IF;
	END IF;
	
	SELECT LAST_INSERT_ID() INTO OUT_ID;
	
	-- record log
   CALL spc_commonlog_save(p_companyid, 'reference', out_id, @action, p_userid);

END$$

DELIMITER ;
;


DROP procedure IF EXISTS `spc_reference_select`;


CREATE PROCEDURE `spc_reference_select`(
	IN p_id varchar(30)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            IFNULL(parentid,0)as parentid, 
            parenttypecode, 
            description,
            active,
            defaultvalue,
            projectper,
            stageper,
            displayorder,
            sequenceno,
            departmentid,
            modelid
		FROM
			`reference`
		WHERE
			id = p_id;
END$$

DELIMITER ;
;

USE `db_elev8r`;
DROP procedure IF EXISTS `spc_reference_selectbytypecodedepartment`;

DELIMITER $$
USE `db_elev8r`$$
CREATE DEFINER=`sa`@`%` PROCEDURE `spc_reference_selectbytypecodedepartment`(
	IN p_typecode varchar(20),
    IN p_departmentid  INT(11)
)
BEGIN
	
		SELECT 
			id,
			typecode,
            parentid, 
            parenttypecode, 
            description,
            active,
            defaultvalue,
            displayorder,
			projectper,
            stageper,
            sequenceno
		FROM
			`reference`
		WHERE
			typecode = p_typecode AND departmentid=p_departmentid
            order by defaultvalue DESC;
END$$

DELIMITER ;





