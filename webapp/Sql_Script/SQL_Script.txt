ALTER TABLE `db_test_elev8r`.`employee` 
ADD COLUMN `designation` VARCHAR(100) NULL AFTER `companyid`;

ALTER TABLE `db_test_elev8r`.`employee` 
DROP COLUMN `emproleids`;

DROP procedure IF EXISTS db_test_elev8r.`spc_employee_save`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_employee_save`(
   IN p_id INT(11),
   IN p_employeename VARCHAR(200),
   IN p_emailid VARCHAR(200),
   IN p_mobileno VARCHAR(15),
   IN p_isactive TINYINT(4),
   IN p_designation VARCHAR(100),
   IN p_companyid INT(11),
   IN p_userid INT(11),
   OUT out_id INT
)
BEGIN
    SET @action = null;
    IF EXISTS(
            SELECT employeename,emailid,mobileno from employee where (LOWER(employeename) = LOWER(p_employeename) OR  emailid = p_emailid OR  mobileno = p_mobileno) 
				AND ((NULLIF(p_id, 0) IS NULL)
					OR (NULLIF(p_id, 0) IS NOT NULL AND NULLIF(p_id, '0') != id))
            
            ) THEN BEGIN
        
				SELECT -1 INTO out_id;
	
			END;
    ELSE 
BEGIN

	SET @action = null;
    
    IF(NULLIF(p_id, '0') IS NULL) THEN
	
		INSERT INTO employee 
				(employeename, emailid, mobileno, isactive, designation, companyid)
			VALUES 
				(p_employeename, p_emailid, p_mobileno, p_isactive,p_designation, p_companyid);
	  SET @action = 'INSERT';
	ELSE
    
		UPDATE employee
				SET employeename = p_employeename,
					emailid = p_emailid,
                    mobileno = p_mobileno,
                    isactive = p_isactive,
                    designation = p_designation,
					companyid = p_companyid,
				id = LAST_INSERT_ID(id)
			WHERE
				id = p_id
                AND companyid = p_companyid;
           SET @action = 'UPDATE';     
                
                
	END IF;
    
    SELECT LAST_INSERT_ID() INTO out_id; 
    
   -- record log
   CALL spc_commonlog_save(p_companyid, 'employee', out_id, @action, p_userid);
END;
        
	END IF;
END$$

DELIMITER ;
;

DROP procedure IF EXISTS db_test_elev8r.`spc_employee_search`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_employee_search`(
	IN p_companyid INT(11)
)
BEGIN

	SELECT EMP.id,EMP.employeename, EMP.emailid, EMP.mobileno, IF(EMP.isactive = 1, "true", "false") as isactive, EMP.designation, EMP.companyid
	FROM employee EMP
    
    WHERE EMP.companyid = p_companyid;

END$$

DELIMITER ;
;

DROP procedure IF EXISTS db_test_elev8r.`spc_employee_select`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_employee_select`(
IN p_id INT(11)
)
BEGIN

	SELECT EMP.id,employeename,
    -- EMP.ledgerid,
    EMP.emailid, EMP.mobileno, EMP.isactive, EMP.designation, EMP.companyid
    -- R.refname,
    -- COA.coaname as ledgername,COA.glcode
           
	FROM employee EMP
    -- left join `reference` R ON R.id = EMP.emproleids
    -- left join chartofaccount COA ON COA.id = EMP.ledgerid
    
    WHERE 
		(
			NULLIF(p_id, '') IS NOT NULL AND EMP.id = p_id 
            OR NULLIF(p_id, '') IS NULL
		);

END$$

DELIMITER ;
;


ALTER TABLE `db_test_elev8r`.`employee` 
CHANGE COLUMN `employeename` `employeename` VARCHAR(200) NULL ,
CHANGE COLUMN `emailid` `emailid` VARCHAR(200) NULL ,
CHANGE COLUMN `mobileno` `mobileno` VARCHAR(15) NULL ,
CHANGE COLUMN `isactive` `isactive` TINYINT(4) NULL ,
CHANGE COLUMN `companyid` `companyid` INT(11) NULL ;

DROP procedure IF EXISTS db_test_elev8r.`spc_employee_ddl`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_employee_ddl`(
	IN p_companyid INT(11)
)
BEGIN

	SELECT id, employeename
           
	FROM employee
    
    WHERE isactive = 1 AND companyid = p_companyid;

END$$

DELIMITER ;
;

ALTER TABLE `db_test_elev8r`.`leads` 
CHANGE COLUMN `salesrep` `salesrepid` INT(11) NULL DEFAULT NULL ;

DROP procedure IF EXISTS `db_test_elev8r`.`spc_leads_save`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_leads_save`(
IN p_id INT,
IN p_leadname VARCHAR(45),
IN p_mobileno VARCHAR(45),
IN p_companyname VARCHAR(45),
IN p_email VARCHAR(45),
IN p_sourceid INT(11),
IN p_stageid INT(11),
IN p_leadscategory INT(11),
IN p_leadsubcategoryid INT(11),
IN p_leadvalue INT(11),
IN p_typeoflift INT(11),
IN p_nooflifts INT(11),
IN p_contactperson VARCHAR(45),
IN p_leadstatus INT(11),
IN p_locationid INT(11),
IN p_salesrepid INT(11),
IN p_capacityid INT(11),
IN p_modelid INT(11),
IN p_driveid INT(11),
IN p_machineid INT(11),
IN p_controlid INT(11),
IN p_groupcontrolid INT(11),
IN p_operationid INT(11),
IN p_speedid INT(11),
IN p_typeofdoorid INT(11),
IN p_landingdoorid INT(11),
IN p_cardoorid INT(11),
IN p_lowestfloorid INT(11),
IN p_cwtpositionid INT(11),
IN p_floorheaightid INT(11),
IN p_carpanelid int(11),
IN p_ventilationid int(11),
IN p_tractionmediaid int(11),
IN p_mainpowersystemid int(11),
IN p_carpositionindicatorid int(11),
IN p_falseceilingid int(11),
IN p_auxilarysupplysystemid int(11),
IN p_flooringid int(11),
IN p_architectidid INT(11),
IN p_leadconsaltantid INT(11),
IN p_leaddate DATE,
IN p_leadscore INT(11),
IN p_phoneno VARCHAR(45),
IN p_leaddescription VARCHAR(100),
IN p_address VARCHAR(150),
IN p_gstn VARCHAR(45),
IN p_panno VARCHAR(45),
IN p_winprobability DECIMAL(9,3),
IN p_mobilep VARCHAR(45),
IN p_scoutername VARCHAR(100),
IN p_reference VARCHAR(100),
IN p_preferedlead TINYINT(4),
IN p_cityid INT(11),
IN p_stateid INT(11),
IN p_countryid INT(11),
IN p_linkedin VARCHAR(100),
IN p_facebook VARCHAR(100),
IN p_youtube VARCHAR(100),
IN p_pincode VARCHAR(45),
IN p_stopsid INT(11),
IN p_floormarking INT(11),
IN p_allopeningsameside VARCHAR(45),
IN p_frontopening VARCHAR(45),
IN p_backopening VARCHAR(45),
IN p_leftopening VARCHAR(45),
IN p_rightopening VARCHAR(45),
IN p_shaftwidth INT(11),
IN p_shaftdepth INT(11),
IN p_cardepth INT(11),
IN p_carwidth INT(11),
IN p_carheight INT(11),
IN p_doorwidth INT(11),
IN p_doorheight INT(11),
IN p_travel VARCHAR(45),
IN p_pitdepth INT(11),
IN p_overhead INT(11),
IN p_mrwidth INT(11),
IN p_mrdepth INT(11),
IN p_mrheight INT(11),
IN p_leadtype INT(11),
IN p_unitid INT(11),
IN p_shaftconditionid INT(11),
IN p_companyid INT(11),
IN p_userid INT,
OUT out_id INT
)
BEGIN

SET @action = null;

IF (NULLIF(p_id,0) IS NULL) THEN

INSERT INTO leads 
					(leadname, mobileno,companyname, email, sourceid, 
					stageid,leadscategory,leadsubcategoryid,leadvalue,typeoflift,nooflifts,contactperson,
                    leadstatus,locationid,salesrepid,capacityid,modelid,driveid,machineid,controlid,groupcontrolid,operationid,
                    speedid,typeofdoorid,landingdoorid,cardoorid,lowestfloorid,cwtpositionid,floorheaightid,
                    carpanelid,ventilationid,tractionmediaid,mainpowersystemid,carpositionindicatorid,falseceilingid,
					auxilarysupplysystemid,flooringid,
                    architectidid,leadconsaltantid,leaddate,leadscore,phoneno,leaddescription,address,gstn,panno,winprobability,mobilep,scoutername,reference,preferedlead,cityid,stateid,countryid,
                    linkedin,facebook,youtube,pincode,stopsid,floormarking,allopeningsameside,frontopening,backopening,
                    leftopening,rightopening,shaftwidth,shaftdepth,cardepth,carwidth,carheight,doorwidth,doorheight,
                    travel,pitdepth,overhead,mrwidth,mrdepth,mrheight,leadtype,unitid,shaftconditionid,isdeleted,companyid)
				VALUES 
					(p_leadname, p_mobileno,p_companyname, p_email, p_sourceid, 
					p_stageid,p_leadscategory,p_leadsubcategoryid,p_leadvalue,p_typeoflift,p_nooflifts,
                    p_contactperson,p_leadstatus,p_locationid,p_salesrepid,
                    p_capacityid,p_modelid,p_driveid,p_machineid,p_controlid,p_groupcontrolid,p_operationid,
                    p_speedid,p_typeofdoorid,p_landingdoorid,p_cardoorid,p_lowestfloorid,p_cwtpositionid,p_floorheaightid,
                    p_carpanelid,p_ventilationid,p_tractionmediaid,p_mainpowersystemid,p_carpositionindicatorid,p_falseceilingid,
					p_auxilarysupplysystemid,p_flooringid,
                    p_architectidid,p_leadconsaltantid,p_leaddate,p_leadscore,p_phoneno,p_leaddescription,
                    p_address,p_gstn,p_panno,p_winprobability,p_mobilep,p_scoutername,p_reference,p_preferedlead,p_cityid,p_stateid,p_countryid,
                    p_linkedin,p_facebook,p_youtube,p_pincode,p_stopsid,p_floormarking,p_allopeningsameside,p_frontopening,p_backopening,
                    p_leftopening,p_rightopening,p_shaftwidth,p_shaftdepth,p_cardepth,p_carwidth,p_carheight,p_doorwidth,p_doorheight,
                    p_travel,p_pitdepth,p_overhead,p_mrwidth,p_mrdepth,p_mrheight,p_leadtype,p_unitid,p_shaftconditionid,0,p_companyid);
					
			SET @action = 'INSERT';
	ELSE

				UPDATE leads
				SET 
					leadname = p_leadname, 
					mobileno = p_mobileno,
                    companyname = p_companyname,
					email = p_email,
					sourceid = p_sourceid,
					stageid = p_stageid,
                    leadscategory = p_leadscategory,
                    leadsubcategoryid = p_leadsubcategoryid,
                    leadvalue = p_leadvalue,
                    typeoflift = p_typeoflift,
                    nooflifts = p_nooflifts,
                    contactperson = p_contactperson,
                    leadstatus = p_leadstatus,
                    locationid = p_locationid,
                    salesrepid = p_salesrepid,
                    capacityid = p_capacityid,
                    modelid = p_modelid,
                    driveid = p_driveid,
                    machineid = p_machineid,
                    controlid = p_controlid,
                    groupcontrolid = p_groupcontrolid,
                    operationid = p_operationid,
                    speedid = p_speedid,
                    typeofdoorid = p_typeofdoorid,
                    landingdoorid = p_landingdoorid,
                    cardoorid = p_cardoorid,
                    lowestfloorid = p_lowestfloorid,
                    cwtpositionid = p_cwtpositionid,
                    floorheaightid = p_floorheaightid,
                    carpanelid = p_carpanelid,
                    ventilationid = p_ventilationid,
                    tractionmediaid = p_tractionmediaid,
                    mainpowersystemid = p_mainpowersystemid,
                    carpositionindicatorid = p_carpositionindicatorid,
                    falseceilingid = p_falseceilingid,
					auxilarysupplysystemid = p_auxilarysupplysystemid,
                    flooringid = p_flooringid,
                    architectidid = p_architectidid,
                    leadconsaltantid = p_leadconsaltantid,
                    leaddate = p_leaddate,
                    leadscore = p_leadscore,
                    phoneno = p_phoneno,
                    leaddescription = p_leaddescription,
                    address = p_address,
                    gstn = p_gstn,
                    panno = p_panno,
                    winprobability = p_winprobability,
                    mobilep = p_mobilep,
                    scoutername = p_scoutername,
                    reference = p_reference,
                    preferedlead = p_preferedlead,
                    cityid = p_cityid,
                    stateid = p_stateid,
                    countryid = p_countryid,
                    linkedin = p_linkedin,
                    facebook = p_facebook,
                    youtube = p_youtube,
                    pincode = p_pincode,
                    stopsid = p_stopsid,
                    floormarking = p_floormarking,
                    allopeningsameside = p_allopeningsameside,
                    frontopening = p_frontopening,
                    backopening = p_backopening,
                    leftopening = p_leftopening,
                    rightopening = p_rightopening,
                    shaftwidth = p_shaftwidth,
                    shaftdepth = p_shaftdepth,
                    cardepth = p_cardepth,
                    carwidth = p_carwidth,
                    carheight = p_carheight,
                    doorwidth = p_doorwidth,
                    doorheight = p_doorheight,
                    travel = p_travel,
                    pitdepth = p_pitdepth,
                    overhead = p_overhead,
                    mrwidth = p_mrwidth,
                    mrdepth = p_mrdepth,
                    mrheight = p_mrheight,
                    leadtype = p_leadtype,
                    unitid = p_unitid,
                    shaftconditionid = p_shaftconditionid,
					companyid = p_companyid,
					id = LAST_INSERT_ID(id)
				WHERE
					id = p_id 
					AND companyid = p_companyid;
					
				SET @action = 'UPDATE';   
			END IF;
            
		   SELECT LAST_INSERT_ID() INTO out_id; 
			
		   -- record log
		   -- CALL spc_commonlog_save(p_companyid, 'project', out_id, @action, p_userid);

END$$

DELIMITER ;
;

DROP procedure IF EXISTS db_test_elev8r.`spc_leads_search`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_leads_search`(
IN p_companyid INT(11)
)
BEGIN

	SELECT
		L.id,
		L.leadname,
		L.mobileno,
		L.email,
		L.sourceid,
		L.stageid,
		L.companyid,
        L.leadscategory as leadscategoryid,
        L.leadvalue,
        L.typeoflift,
        L.nooflifts,
        L.contactperson,
        L.leadstatus as leadstatusid,
        L.locationid,
        L.salesrepid,
        E.employeename as salesrep,
		L.capacityid,
        L.modelid,
        L.driveid,
        L.machineid,
        L.controlid,
        L.operationid,
        L.speedid,
        L.typeofdoorid,
        L.landingdoorid,
        L.cardoorid,
        L.lowestfloorid,
        L.cwtpositionid,
        L.floorheaightid,
        L.architectidid,
        L.leadconsaltantid,
        DATE_FORMAT(L.leaddate,'%d/%m/%Y') as leaddate,
        L.phoneno,
        L.leaddescription,
        L.cityid,
        L.stateid,
        L.countryid,
		L.linkedin,
        L.facebook,
        L.youtube,
        L.stopsid,
        L.floormarking,
        L.allopeningsameside,
        L.frontopening,
        L.backopening,
		L.leftopening,
        L.rightopening,
        L.shaftwidth,
        L.shaftdepth,
        L.cardepth,
        L.carwidth,
        L.carheight,
        L.doorwidth,
        L.doorheight,
		L.travel,
        L.pitdepth,
        L.overhead,
        L.mrwidth,
        L.mrdepth,
        L.mrheight,
        L.leadtype as leadtypeid,
        REF.`description` as sourcename,
	    REF1.`description` as stagename,
		REF2.`description` as leadscategory,
	    REF3.`description` as leadtype,
		REF4.`description` as leadstatus,
        LO.locationname
	FROM leads L
	LEFT JOIN location LO ON LO.id = L.locationid
    LEFT JOIN `reference` REF ON REF.id = L.sourceid
	LEFT JOIN `reference` REF1 ON REF1.id = L.stageid
    LEFT JOIN `reference` REF2 ON REF2.id = L.leadscategory
    LEFT JOIN `reference` REF3 ON REF3.id = L.leadtype
	LEFT JOIN `reference` REF4 ON REF4.id = L.leadstatus
    LEFT JOIN employee E ON E.id = L.salesrepid
  
	Where L.companyid = p_companyid
	AND L.isdeleted = 0;
    
    select 
    count(leadstatus) as qualified
    from leads L
    LEFT JOIN `reference` REF1 ON REF1.id = L.leadstatus 
    where REF1.typecode = "LeadStatus"
    AND REF1.`description`= "Qualified"
    AND L.isdeleted = 0;
    
    select 
    count(leadstatus) as unqualified
    from leads L
    LEFT JOIN `reference` REF1 ON REF1.id = L.leadstatus 
    where REF1.typecode = "LeadStatus"
    AND REF1.`description`= "Unqualified"
    AND L.isdeleted = 0;
    
    select 
    count(leadstatus) as totalleads
    from leads L
    LEFT JOIN `reference` REF1 ON REF1.id = L.leadstatus 
    where REF1.typecode = "LeadStatus"
    AND L.isdeleted = 0;
END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_test_elev8r`.`spc_leads_select`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_leads_select`(
IN p_id INT(11)
)
BEGIN

		SELECT 
		L.id,
        L.id as leadid,
        L.scoutername,
        L.`reference`,
        L.address,
        L.preferedlead,
        L.mobilep,
        L.gstn,
        L.panno,
        L.id as leadid,
		L.leadname,
		L.mobileno,
		L.email,
		L.sourceid,
		L.stageid,
		L.companyid,
		L.leadscategory,
        L.leadvalue,
        L.typeoflift,
        L.nooflifts,
        L.contactperson,
        L.leadstatus,
        L.locationid,
        L.salesrepid,
        E.employeename as salesrep,
        L.capacityid,
        L.modelid,
        L.driveid,
        L.machineid,
        L.controlid,
        L.operationid,
        L.speedid,
        L.typeofdoorid,
        L.landingdoorid,
        L.cardoorid,
        L.lowestfloorid,
        L.cwtpositionid,
        L.floorheaightid,
        L.carpanelid,
        L.ventilationid,
        L.tractionmediaid,
        L.mainpowersystemid,
        L.carpositionindicatorid,
        L.falseceilingid,
		L.auxilarysupplysystemid,
        L.flooringid,
        L.architectidid,
        L.leadconsaltantid,
        DATE_FORMAT(L.leaddate,'%d/%m/%Y') as leaddate,
        L.phoneno,
        L.leaddescription,
        L.leadscore,
        L.leadsubcategoryid,
        L.cityid,
        L.stateid,
        L.pincode,
		L.stopsid,
        L.floormarking,
        L.allopeningsameside,
        L.frontopening,
        L.backopening,
		L.leftopening,
        L.rightopening,
        L.shaftwidth,
        L.shaftdepth,
        L.cardepth,
        L.carwidth,
        L.carheight,
        L.doorwidth,
        L.doorheight,
		L.travel,
        L.pitdepth,
        L.overhead,
        L.mrwidth,
        L.mrdepth,
        L.mrheight,
		L.leadtype,
        L.companyname,
        L.countryid,
		L.linkedin,
        L.facebook,
        L.youtube,
        L.winprobability,
        L.groupcontrolid,
        L.lowestfloorid

		FROM leads L
        LEFT JOIN employee E ON E.id = L.employeeid
		WHERE L.id = p_id;
        
        select 
			id,
			leadid,
			cityid,
			stateid,
			countryid,
			address,
			pincode
		from leadaddress
		where leadid=p_id;

END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_test_elev8r`.`spc_convertto_quote`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_convertto_quote`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
		L.leadname,
		L.mobileno,
		L.companyname,
		L.email ,
		L.sourceid ,
		L.stageid ,
		L.leadscategory,
		L.leadvalue,
		L.typeoflift ,
		L.nooflifts ,
		L.contactperson ,
		L.leadstatus ,
		L.locationid ,
		L.salesrepid,
		L.capacityid ,
		L.modelid ,
		L.driveid ,
		L.machineid , 
		L.controlid ,
		L.operationid ,
		L.speedid ,
		L.typeofdoorid ,
		L.landingdoorid ,
		L.cardoorid ,
		L.lowestfloorid ,
		L.cwtpositionid ,
		L.floorheaightid ,
		L.architectidid ,
		L.leadconsaltantid ,
		L.leaddate ,
		L.leadscore ,
		L.leaddescription  ,
		L.cityid  ,
		L.stateid ,
		L.countryid ,
		L.phoneno , 
		L.linkedin ,
		L.facebook ,
		L.youtube , 
		L.pincode , 
		L.stopsid ,
		L.floormarking ,
		L.allopeningsameside ,
		L.frontopening ,
		L.backopening ,
		L.leftopening , 
		L.rightopening, 
		L.shaftwidth ,
		L.shaftdepth ,
		L.cardepth ,
		L.carwidth ,
		L.carheight , 
		L.doorwidth , 
		L.doorheight ,
		L.travel,
		L.pitdepth ,
		L.overhead,
		L.mrwidth , 
		L.mrdepth ,
		L.mrheight ,
		L.leadtype,
		L.isdeleted ,
		L.companyid ,
		L.groupcontrolid ,
		L.leadsubcategoryid  ,
		L.address ,
		L.gstn ,
		L.mobilep ,
		L.scoutername ,
		L.reference ,
		L.preferedlead ,
		L.panno ,
		L.winprobability , 
		L.carpanelid ,
		L.ventilationid ,
		L.tractionmediaid ,
		L.mainpowersystemid ,
		L.carpositionindicatorid ,
		L.falseceilingid ,
		L.auxilarysupplysystemid ,
		L.flooringid,
        L.unitid,
        L.shaftconditionid,
        L.id as leadid,
		L.leadname as quotename,
		L.sourceid as leadsourceid,
		L.stageid as quotestageid,
		L.leadscategory as quotecategory,
        L.leadvalue as quotevalue,
        DATE_FORMAT(L.leaddate,'%d/%m/%Y') as quotedate,
        L.leaddescription as quotediscription,
        L.leadscore as quotescore,
        L.address as siteaddress,
		L.linkedin as sociallink1,
        L.facebook as sociallink2,
        L.youtube as sociallink3,
        (SELECT id FROM quotation ORDER BY id DESC LIMIT 1) as lastquoteid,
        10 as advanceonorderreception,
		60 as forrequestofmechanicalmaterial,
		25 as forrequestofelectricalmaterial,
		5 as oncustomerhandover


		FROM leads L
		WHERE L.id = p_id;

END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_test_elev8r`.`spc_quotation_select`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_quotation_select`(
	IN p_id INT(11)
)
BEGIN
	SELECT 
				Q.id,
                Q.id as quotationid,
				Q.leadid,
                Q.groupcontrolid,
                Q.quotestatusid,
				Q.quotevalue,
				Q.quotetype,
                DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
				Q.quotename,
				Q.quotediscription,
				Q.quotestatusid,
				Q.quotescore,
				Q.quotecategory,
				Q.quotesubcategory,
				Q.companyid,
				Q.completiondays,
				L.leadname,
                L.mobileno,
                L.companyname,
                L.email,
                L.sourceid,
                L.stageid,
                L.leadscategory,
                L.leadvalue,
                L.typeoflift,
                L.nooflifts,
                L.contactperson,
                L.leadstatus,
                L.locationid,
                L.salesrepid,
                Q.capacityid,
                Q.modelid,
                Q.driveid,
                Q.machineid,
                Q.controlid,
                Q.operationid,
                Q.speedid,
                Q.typeofdoorid,
				Q.landingdoorid,
				Q.cardoorid,
				Q.lowestfloorid,
				Q.cwtpositionid,
				Q.floorheaightid,
				Q.architectidid,
				Q.leadconsaltantid,
                Q.officialemail,
                Q.gstn,
                Q.panno,
                Q.primarycontactid,
                Q.designation,
                Q.mobileno1,
                Q.includinggst,
				DATE_FORMAT(L.leaddate,'%d/%m/%Y') as leaddate,
				L.phoneno,
				L.leaddescription,
				L.leadscore,
                L.salesrep,
				L.cityid,
				L.stateid,
				L.pincode,
				Q.stopsid,
				Q.floormarking,
				Q.allopeningsameside,
				Q.frontopening,
				Q.backopening,
				Q.leftopening,
                Q.leadsourceid,
				Q.rightopening,
				Q.shaftwidth,
				Q.shaftdepth,
                Q.shaftconditionid,
                Q.unitid,
				Q.cardepth,
				Q.carwidth,
				Q.carheight,
				Q.doorwidth,
				Q.doorheight,
				Q.travel,
                Q.remark1,
			    Q.remark1,
			    Q.remark2,
			    Q.remark3,
			    Q.remark4,
			    Q.remark5,
				Q.pitdepth,
				Q.overhead,
				Q.mrwidth,
				Q.mrdepth,
				Q.mrheight,
				Q.mainpowersystemid,
                Q.carpositionindicatorid,
                Q.falseceilingid,
                Q.tractionmediaid,
                Q.auxilarysupplysystemid,
                Q.carpanelid,
                Q.ventilationid,
                Q.flooringid,
				L.companyname,
				L.countryid,
				L.linkedin,
				L.facebook,
				L.youtube,
                R.description as leadstatusdetail,
				R1.description as quotecategorydetail,
                Q.advanceonorderreception,
				Q.forrequestofmechanicalmaterial,
				Q.forrequestofelectricalmaterial,
				Q.oncustomerhandover
                 
    FROM quotation Q
    
    LEFT JOIN leads L ON L.id = Q.leadid
	LEFT JOIN reference R ON R.id =  Q.quotestatusid
    LEFT JOIN reference R1 ON R1.id =  Q.quotecategory
    WHERE Q.id = p_id;
END$$

DELIMITER ;
;

DROP procedure IF EXISTS db_test_elev8r.`spc_quotepdf`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_quotepdf`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
        Q.id as negno,
		   Q.quotename,
		   Q.siteaddress,
           DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
           Q.contactperson,
           Q.snehasalescontactid,
           Q.snehasalescontactno,
           Q.designation,
		   REF.description as modelcode,
           REF1.description as lifttype,
           REF2.description as capacity,
           REF3.description as speed,
           Q.stopsid,
           REF4.description as controller,
           GROUP_CONCAT(REF5.description,' mts') as drive,
           ifnull(GROUP_CONCAT(Q.shaftwidth,' mm (W) ',' X ',Q.shaftdepth,' mm (D) (',IFNULL(REF7.description,'-'),')'),'-') as shaftsize,
           ifnull(GROUP_CONCAT(Q.carwidth,' mm (W) ',' X ',Q.cardepth,' mm (D) ',' X ',Q.carheight,' mm (H) (Approximately)'),'-') as carsize,
           ifnull(GROUP_CONCAT(Q.doorwidth, ' mm Open',' X ',Q.doorheight,' mm Height'),'-') as clearopening,
           ifnull(CONCAT(Q.pitdepth,' mm'),'-')as pitdepth,
           ifnull(CONCAT(Q.overhead,' mm'),'-')as overhead,
           ifnull(CONCAT(REF6.description,' (Manual)'),'-') as cardoor,
           GROUP_CONCAT(REGEXP_SUBSTR(REF2.description, '[0-9]+'),' P',' - ',left(Q.stopsid,1),' S',' - ',REF.description,' Unit:',Q.nooflifts) as specificationheader,
           IFNULL(CONCAT(Q.advanceonorderreception,'%'),'-') as advanceonorderreception,
		   IFNULL(CONCAT(Q.forrequestofmechanicalmaterial,'%'),'-') as forrequestofmechanicalmaterial,
		   IFNULL(CONCAT(Q.forrequestofelectricalmaterial,'%'),'-') as forrequestofelectricalmaterial,
		   IFNULL(CONCAT(Q.oncustomerhandover,'%'),'-') as oncustomerhandover,
           REF8.description as doortype
	FROM quotation Q
    LEFT JOIN city C ON C.id = Q.cityid
    LEFT JOIN reference REF ON REF.id = Q.modelid
    LEFT JOIN reference REF1 ON REF1.id = Q.typeoflift
    LEFT JOIN reference REF2 ON REF2.id = Q.capacityid
    LEFT JOIN reference REF3 ON REF3.id = Q.speedid
    LEFT JOIN reference REF4 ON REF4.id = Q.controlid
    LEFT JOIN reference REF5 ON REF5.id = Q.driveid
    LEFT JOIN reference REF6 ON REF6.id = Q.cardoorid
	LEFT JOIN reference REF7 ON REF7.id = Q.shaftconditionid
    LEFT JOIN reference REF8 ON REF8.id = Q.typeofdoorid
    WHERE Q.id = p_id;
    
    select ifnull(leadname,'-')as leadname,
		   ifnull(address,'-')as address,
           ifnull(shaftwidth,'-')as shaftwidth,
           ifnull(carwidth,'-')as carwidth,
           ifnull(pitdepth,'-')as pitdepth,
           ifnull(overhead,'-')as overhead,
           ifnull(city,'-')as city,
           ifnull(contactno,'-')as contactno,
           ifnull(quotedate,'-')as quotedate,
           ifnull(quotevalue,'-')as quotevalue,
           ifnull(model,'-')as model,
           ifnull(capacity,'-')as capacity,
           ifnull(speed,'-')as speed,
           ifnull(`stop`,'-')as `stop`,
           ifnull(control,'-')as control,
           ifnull(drive,'-')as drive,
           ifnull(allopeningsameside,'-')as allopeningsameside,
           ifnull(cardoor,'-')as cardoor,
           ifnull(specificationheader,'-') as specificationheader,
           ifnull(landingdoor,'-')as landingdoor,
           ifnull(floormarking,'-')as floormarking,
		   ifnull(machine,'-')as machine,
           ifnull(cityuppercase,'-')as cityuppercase,
           ifnull(month,'-')as month,
           year,
           version,
		   CONCAT('SELLP/',cityuppercase,'/',month,'/',year,'/',quoteid,'/',version) as negno,
           modeldetails,
           ifnull(travel,'-')as travel,
           result,
           unit,
           ifnull(carpanel,'-')as carpanel,
           ifnull(ventilation,'-')as ventilation,
           ifnull(tractionmedia,'-')as tractionmedia,
           ifnull(mainpowersystem,'-')as mainpowersystem,
           ifnull(carpositionindicator,'-')as carpositionindicator,
           ifnull(falseceiling,'-')as falseceiling,
           ifnull(auxilarysupplysystem,'-')as auxilarysupplysystem,
           ifnull(doortype,'-') as doortype,
           ifnull(flooring,'-')as flooring,
           ifnull(operation,'-')as operation,
           IFNULL(advanceonorderreception,'-') as advanceonorderreception,
		   IFNULL(forrequestofmechanicalmaterial,'-') as forrequestofmechanicalmaterial,
		   IFNULL(forrequestofelectricalmaterial,'-') as forrequestofelectricalmaterial,
		   IFNULL(oncustomerhandover,'-') as oncustomerhandover,
           IFNULL(salesrepname,'-') as salesrepname,
           IFNULL(mobileno,'-') as mobileno,
		   IFNULL(designation,'-') as designation,
           IFNULL(emailid,'-') as emailid
	from(
	select 
			 -- GROUP_CONCAT('ELE/',Q.id) as negno,
			 L.leadname,
			 L.address,
			 Q.modelid,
			 Q.capacityid,
			 Q.speedid,
			 Q.stopsid,
			 Q.controlid,
			 Q.driveid,
			 Q.shaftwidth,
			 Q.carwidth,
			 Q.allopeningsameside as allopeningsamesideid,
			 Q.pitdepth,
			 Q.overhead,
			 Q.cardoorid,
             GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF5.description,' Unit:',Q.nooflifts) as specificationheader,
			 Q.landingdoorid,
             GROUP_CONCAT(Q.travel,'mts') as travel,
             -- 6P - 7S(C+G+5) - REF.description - S.S Car Panel - cwtposition 
			GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' ', '-',' ',Q.stopsid,'S(G','+',(Q.stopsid-1),')',' ','-',' ',REF.description,' ','-',' ',ifnull(REF12.description,'-'),' ',REF8.description) as modeldetails,
			GROUP_CONCAT(Q.nooflifts,' ','Units') as unit,
            REGEXP_SUBSTR(REF1.description, '[0-9]+') AS result,
            Q.floormarking as floormarkingid,
			Q.machineid,
			GROUP_CONCAT(C.cityname,' ','-',' ',L.pincode) as city,
			L.mobileno as contactno,
            DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
            Q.quotevalue,
            Q.cwtpositionid,
            REF.description as model,
            REF1.description as capacity,
            REF2.description as speed,
            GROUP_CONCAT(Q.stopsid, ' Landings /', Q.stopsid, ' Openings (All Openings are same Side)') as stop,
            REF4.description as control,
            REF5.description as drive,
            REF6.description as allopeningsameside,
            REF7.description as cardoor,
            REF8.description as landingdoor,
            REF9.description as floormarking,
            REF10.description as machine,
			REF11.description as cwtposition,
			REF12.description as carpanel,
            REF13.description as ventilation,
            REF14.description as tractionmedia,
            REF15.description as mainpowersystem,
            REF16.description as carpositionindicator,
            REF17.description as falseceiling,
            REF18.description as auxilarysupplysystem,
            REF21.description as doortype,
			REF19.description as flooring,
            REF20.description as operation,
            CONCAT(Q.advanceonorderreception,'%') as advanceonorderreception,
			CONCAT(Q.forrequestofmechanicalmaterial,'%') as forrequestofmechanicalmaterial,
		    CONCAT(Q.forrequestofelectricalmaterial,'%') as forrequestofelectricalmaterial,
		    CONCAT(Q.oncustomerhandover,'%') as oncustomerhandover,
            E.employeename as salesrepname,
            E.mobileno,
            E.designation,
            E.emailid,
			UPPER(SUBSTRING( CO.city, 1, 3)) as cityuppercase,
			UPPER(MONTHNAME(Q.quotedate)) AS month,
            YEAR(Q.quotedate) AS year,
            Q.leadid,
            Q.id as quoteid,
            ( select
			ROW_NUMBER() OVER (ORDER BY id)  Sequence_no
			-- id as quoteid
			from quotation 
			where leadid = Q.leadid order by id DESC limit 1)as version
            
            
		
		from quotation Q
		LEFT JOIN leads L ON L.id = Q.leadid
		LEFT JOIN employee E ON E.id = L.salesrepid
		LEFT JOIN city C ON L.cityid = C.id
		LEFT JOIN company CO ON CO.id = Q.companyid
		LEFT JOIN reference REF ON REF.id = Q.modelid
		LEFT JOIN reference REF1 ON REF1.id = Q.capacityid
		LEFT JOIN reference REF2 ON REF2.id = Q.speedid
		LEFT JOIN reference REF3 ON REF3.id = Q.stopsid
		LEFT JOIN reference REF4 ON REF4.id = Q.controlid
		LEFT JOIN reference REF5 ON REF5.id = Q.driveid
		LEFT JOIN reference REF6 ON REF6.id = Q.allopeningsameside
        LEFT JOIN reference REF7 ON REF7.id = Q.cardoorid
		LEFT JOIN reference REF8 ON REF8.id = Q.landingdoorid
		LEFT JOIN reference REF9 ON REF9.id = Q.floormarking
        LEFT JOIN reference REF10 ON REF10.id = Q.machineid
        LEFT JOIN reference REF11 ON REF11.id = Q.cwtpositionid
        LEFT JOIN reference REF12 ON REF12.id = Q.carpanelid
		LEFT JOIN reference REF13 ON REF13.id = Q.ventilationid
        LEFT JOIN reference REF14 ON REF14.id = Q.tractionmediaid
		LEFT JOIN reference REF15 ON REF15.id = Q.mainpowersystemid
		LEFT JOIN reference REF16 ON REF16.id = Q.carpositionindicatorid
        LEFT JOIN reference REF17 ON REF17.id = Q.falseceilingid
        LEFT JOIN reference REF18 ON REF18.id = Q.auxilarysupplysystemid
		LEFT JOIN reference REF19 ON REF19.id = Q.flooringid
        LEFT JOIN reference REF20 ON REF20.id = Q.operationid
        LEFT JOIN reference REF21 ON REF21.id = Q.typeofdoorid
		where Q.id=p_id)temp;
        
		SELECT
           -- IFNULL((UR.username),'-') as salemanager,
           ifnull(UR.username,'-') assalemanager,
           CONCAT('Contact No.','-','  ',UR.mobile) as salecontactno
			FROM user1 UR
			INNER JOIN userlicense UL ON UR.id = UL.userid
			INNER JOIN `role` R ON UL.roleid = R.id
        WHERE R.description = 'Sales Manager';
        
        SET @doortype = null;
		SELECT REF.description INTO @doortype 
        FROM reference REF
        LEFT JOIN quotation Q ON Q.typeofdoorid = REF.id
        WHERE Q.id = p_id AND REF.typecode = 'DrTyp';
        
        IF(@doortype = 'Auto') THEN
			SELECT 'Manual Rescue Operation,
					Auto Fan Cut Off,
					Rear side SS Hand rail,
					Automatic leveling with Ground Floor on Power Restoration,
					Floor Position and Direction indicator in car and Landings,
					Terminal approach slow down for safety,
					Final Limit protection,
					Emergency alarm,
					Door Open,
					V3F drive for door operation,
					Door Time Protection, 
					Floor announcement, 
					Parking floor,
					Emergency electric break releaser,
					Full curtain infrared door safety' as stdfeatures,
                    'Automatic Rescue Device - ARD
					OSG ( Over Speed Governor)' as safetyfeatures;
        ELSEIF(@doortype = 'Manual') THEN
			SELECT 'Manual Rescue Operation,
					Auto Fan Cut Off,
					Rear side SS Hand rail,
					Automatic leveling with Ground Floor on Power Restoration,
					Floor Position and Direction indicator in car and Landings,
					Terminal approach slow down for safety,
					Final Limit protection,
					Emergency alarm' as stdfeatures,
                    'Automatic Rescue Device - ARD
					OSG ( Over Speed Governor)' as safetyfeatures;
        END IF;
	
END$$

DELIMITER ;
;


ALTER TABLE `db_test_elev8r`.`quotation` 
CHANGE COLUMN `snehasalescontactname` `snehasalescontactid` INT(11) NULL DEFAULT NULL ;

ALTER TABLE `db_test_elev8r`.`quotation` 
ADD COLUMN `salesrepid` INT(11) NULL AFTER `oncustomerhandover`;

DROP procedure IF EXISTS `db_test_elev8r`.`spc_quotation_save`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_quotation_save`(
	IN p_id int(11), 
	IN p_leadid int(11), 
	IN p_quotevalue decimal(12,3), 
    IN p_withgst TINYINT(4),
	IN p_quotetype int(11), 
	IN p_quotedate date, 
	IN p_quotename varchar(45), 
	IN p_quotediscription varchar(45), 
	IN p_quotestatusid int(11), 
	IN p_quotescore decimal(9,3), 
	IN p_quotecategory int(11), 
	IN p_quotesubcategory int(11), 
	IN p_leadsourceid int(11),
	IN p_quotestageid int(11), 
	IN p_typeoflift int(11), 
	IN p_nooflifts int(11), 
	IN p_capacityid int(11), 
	IN p_modelid int(11), 
	IN p_driveid int(11), 
	IN p_machineid int(11), 
	IN p_controlid int(11), 
	IN p_groupcontrolid int(11), 
	IN p_operationid int(11), 
	IN p_speedid int(11), 
	IN p_typeofdoorid int(11), 
	IN p_landingdoorid int(11), 
	IN p_cardoorid int(11), 
	IN p_lowestfloorid int(11), 
	IN p_cwtpositionid int(11), 
	IN p_floorheaightid int(11), 
    IN p_carpanelid int(11),
    IN p_ventilationid int(11),
    IN p_tractionmediaid int(11),
    IN p_mainpowersystemid int(11),
    IN p_carpositionindicatorid int(11),
    IN p_falseceilingid int(11),
    IN p_auxilarysupplysystemid int(11),
    IN p_flooringid int(11),
	IN p_architectidid int(11), 
	IN p_consaltantid int(11), 
	IN p_stopsid int(11), 
	IN p_floormarking int(11), 
	IN p_allopeningsameside varchar(45), 
	IN p_frontopening varchar(45), 
	IN p_backopening varchar(45), 
	IN p_leftopening varchar(45), 
	IN p_rightopening varchar(45), 
	IN p_shaftwidth int(11), 
	IN p_shaftdepth int(11), 
    IN p_shaftconditionid INT(11),
    IN p_unitid INT(11),
	IN p_cardepth int(11), 
	IN p_carwidth int(11), 
	IN p_carheight int(11), 
	IN p_doorwidth int(11), 
	IN p_doorheight int(11), 
	IN p_travel varchar(45), 
	IN p_pitdepth int(11), 
	IN p_overhead int(11), 
	IN p_mrwidth int(11), 
	IN p_mrdepth int(11), 
	IN p_mrheight int(11), 
	IN p_isdeleted tinyint(4), 
	IN p_winprobability decimal(9,3), 
	IN p_siteaddress varchar(150),
    IN p_leadstatus INT(11),
    IN p_locationid int(11),
	IN p_cityid int(11), 
	IN p_stateid int(11), 
	IN p_countryid int(11), 
	IN p_pincode int(11), 
	IN p_phoneno VARCHAR(45), 
	IN p_officialemail varchar(100), 
	IN p_gstn varchar(100), 
	IN p_panno varchar(100), 
	IN p_sociallink1 varchar(100), 
	IN p_sociallink2 varchar(100), 
	IN p_sociallink3 varchar(100),
	IN p_primarycontactid varchar(45), 
	IN p_contactperson varchar(45), 
	IN p_designation varchar(45), 
	IN p_mobileno1 varchar(45), 
    IN p_completiondays INT(11),
    IN p_remark1 VARCHAR(100),
    IN p_remark2 VARCHAR(100),
    IN p_remark3 VARCHAR(100),
    IN p_remark4 VARCHAR(100),
    IN p_remark5 VARCHAR(100),
    IN p_advanceonorderreception DECIMAL(9,3),
    IN p_forrequestofmechanicalmaterial DECIMAL(9,3),
    IN p_forrequestofelectricalmaterial DECIMAL(9,3),
    IN p_oncustomerhandover DECIMAL(9,3),
    IN p_salesrepid INT(11),
	IN p_companyid int(11),
	IN p_userid INT(11), 
	OUT out_id INT
)
BEGIN

	SET @action = null;
    
    SET @revisionno = null;
    SELECT count(*) INTO @revisionno FROM quotation WHERE leadid = p_leadid;

	IF(NULLIF(p_id, '0') IS NULL) THEN
		
		INSERT INTO quotation(id,
							  leadid,
							  quotevalue,
                              withgst,
                              quotetype,
                              quotedate,
                              quotename,
                              quotediscription,
                              quotestatusid,
                              quotescore,
                              quotecategory, 
							  quotesubcategory,
                              leadsourceid,
                              quotestageid,
                              typeoflift,
                              nooflifts,
                              capacityid,
                              modelid,
                              driveid,
                              machineid, 
                              controlid,
                              operationid,
                              speedid,
                              typeofdoorid,
                              landingdoorid,
                              cardoorid,
                              lowestfloorid,
                              cwtpositionid,
                              floorheaightid,
                              carpanelid,
							  ventilationid,
							  tractionmediaid,
							  mainpowersystemid,
							  carpositionindicatorid,
							  falseceilingid,
							  auxilarysupplysystemid,
							  flooringid,
                              architectidid, 
                              leadconsaltantid,
                              stopsid,
                              floormarking,
                              allopeningsameside,
                              frontopening,
                              backopening,
                              leftopening,
                              rightopening, 
                              shaftwidth,
                              shaftdepth,
                              shaftconditionid,
                              unitid,
                              cardepth,
                              carwidth,
                              carheight,
                              doorwidth,
                              doorheight,
                              travel,
                              pitdepth,
                              overhead,
                              mrwidth,
                              mrdepth, 
                              mrheight,
                              isdeleted,
                              groupcontrolid,
                              winprobability,
                              siteaddress,
                              cityid,
                              stateid,
                              countryid,
                              pincode,
                              phoneno,
                              officialemail,
                              gstn,
                              panno,
                              sociallink1,
                              sociallink2,
                              sociallink3,
                              primarycontactid,
                              contactperson,
                              designation,
                              mobileno1,
                              completiondays,
                              revisionno,
                              remark1,
                              remark2,
                              remark3,
                              remark4,
                              remark5,
                              advanceonorderreception,
                              forrequestofmechanicalmaterial,
                              forrequestofelectricalmaterial,
							  oncustomerhandover,
                              salesrepid,
                              companyid)
					   VALUES (p_id,
                               p_leadid,
						       p_quotevalue,
                               p_withgst,
                               p_quotetype,
                               p_quotedate,
                               p_quotename,
                               p_quotediscription,
                               p_quotestatusid,
                               p_quotescore,
                               p_quotecategory, 
							   p_quotesubcategory,
                               p_leadsourceid,
                               p_quotestageid,
                               p_typeoflift,
                               p_nooflifts,
                               p_capacityid,
                               p_modelid,
                               p_driveid,
                               p_machineid, 
                               p_controlid,
                               p_operationid,
                               p_speedid,
                               p_typeofdoorid,
                               p_landingdoorid,
                               p_cardoorid,
                               p_lowestfloorid,
                               p_cwtpositionid,
                               p_floorheaightid,
                               p_carpanelid,
							   p_ventilationid,
							   p_tractionmediaid,
							   p_mainpowersystemid,
							   p_carpositionindicatorid,
							   p_falseceilingid,
							   p_auxilarysupplysystemid,
							   p_flooringid,
                               p_architectidid, 
                               p_consaltantid,
                               p_stopsid,
                               p_floormarking,
                               p_allopeningsameside,
                               p_frontopening,
                               p_backopening,
                               p_leftopening,
                               p_rightopening, 
                               p_shaftwidth,
                               p_shaftdepth,
                               p_shaftconditionid,
                               p_unitid,
                               p_cardepth,
                               p_carwidth,
                               p_carheight,
                               p_doorwidth,
                               p_doorheight,
                               p_travel,
                               p_pitdepth,
                               p_overhead,
                               p_mrwidth,
                               p_mrdepth, 
                               p_mrheight,
                               0,
                               p_groupcontrolid,
                               p_winprobability,
                               p_siteaddress,
                               p_cityid,
                               p_stateid,
                               p_countryid,
                               p_pincode,
                               p_phoneno,
                               p_officialemail,
                               p_gstn,
                               p_panno,
                               p_sociallink1,
                               p_sociallink2,
                               p_sociallink3,
                               p_primarycontactid,
                               p_contactperson,
                               p_designation,
                               p_mobileno1,
                               p_completiondays,
                               (@revisionno + 1),
							   p_remark1,
							   p_remark2,
							   p_remark3,
							   p_remark4,
							   p_remark5,
                               p_advanceonorderreception,
                               p_forrequestofmechanicalmaterial,
                               p_forrequestofelectricalmaterial,
							   p_oncustomerhandover,
                               p_salesrepid,
                               p_companyid);
		
		SET @action = 'INSERT';
	
	ELSE
		UPDATE quotation
		SET 
            leadid = p_leadid,
            quotevalue = p_quotevalue,
            withgst = p_withgst,
            quotetype = p_quotetype,
            quotedate = p_quotedate,
            quotename = p_quotename,
            quotediscription = p_quotediscription,
            quotestatusid = p_quotestatusid,
            quotescore = p_quotescore,
            quotecategory = p_quotecategory,
            quotesubcategory = p_quotesubcategory,
            leadsourceid = p_leadsourceid,
            quotestageid = p_quotestageid,
            typeoflift = p_typeoflift,
            nooflifts = p_nooflifts,
            capacityid = p_capacityid,
            modelid = p_modelid,
            driveid = p_driveid,
            machineid = p_machineid,
			controlid = p_controlid,
            operationid = p_operationid,
            speedid = p_speedid,
            typeofdoorid = p_typeofdoorid,
            landingdoorid = p_landingdoorid,
            cardoorid = p_cardoorid,
            lowestfloorid = p_lowestfloorid,
            cwtpositionid = p_cwtpositionid,
            floorheaightid = p_floorheaightid,
            carpanelid = p_carpanelid,
			ventilationid = p_ventilationid,
			tractionmediaid = p_tractionmediaid,
			mainpowersystemid = p_mainpowersystemid,
			carpositionindicatorid = p_carpositionindicatorid,
			falseceilingid = p_falseceilingid,
			auxilarysupplysystemid = p_auxilarysupplysystemid,
			flooringid = p_flooringid,
            architectidid = p_architectidid, 
			leadconsaltantid = p_consaltantid,
            stopsid = p_stopsid,
            floormarking = p_floormarking,
            allopeningsameside = p_allopeningsameside,
            frontopening = p_frontopening,
            backopening = p_backopening,
            leftopening = p_leftopening,
            rightopening = p_rightopening, 
			shaftwidth = p_shaftwidth,
            shaftdepth = p_shaftdepth,
            shaftconditionid = p_shaftconditionid,
			unitid = p_unitid,
            cardepth = p_cardepth,
            carwidth = p_carwidth,
            carheight = p_carheight,
            doorwidth = p_doorwidth,
            doorheight = p_doorheight,
            travel = p_travel,
            pitdepth = p_pitdepth,
            overhead = p_overhead,
            mrwidth = p_mrwidth,
            mrdepth = p_mrdepth, 
			mrheight = p_mrheight,
            isdeleted = p_isdeleted,
            groupcontrolid = p_groupcontrolid,
            winprobability = p_winprobability,
            siteaddress = p_siteaddress,
            cityid = p_cityid,
            stateid = p_stateid,
            countryid = p_countryid,
            pincode = p_pincode,
            phoneno = p_phoneno,
			officialemail = p_officialemail,
            gstn = p_gstn,
            panno = p_panno,
            sociallink1 = p_sociallink1,
            sociallink2 = p_sociallink2,
            sociallink3 = p_sociallink3,
            primarycontactid = p_primarycontactid,
            contactperson = p_contactperson,
            designation = p_designation,
			mobileno1 = p_mobileno1,
            completiondays = p_completiondays,
			remark1 = p_remark1,
			remark2 = p_remark2,
			remark3 = p_remark3,
			remark4 = p_remark4,
			remark5 = p_remark5,
            companyid = p_companyid,
            advanceonorderreception = p_advanceonorderreception,
			forrequestofmechanicalmaterial = p_forrequestofmechanicalmaterial,
			forrequestofelectricalmaterial = p_forrequestofelectricalmaterial,
			oncustomerhandover = p_oncustomerhandover,
            salesrepid = p_salesrepid,
			id = LAST_INSERT_ID(id)
			
		WHERE id = p_id
		AND companyid = p_companyid;
         
         UPDATE leads L
         SET
		 L.locationid=p_locationid,
         L.leadstatus=p_leadstatus
         WHERE L.id = p_leadid 
		 AND companyid = p_companyid;
                

		SET @action = 'UPDATE';
		
	END IF;
	
	SELECT LAST_INSERT_ID() INTO OUT_ID;
    
END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_test_elev8r`.`spc_quotation_search`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_quotation_search`(
	IN p_companyid INT(11)
)
BEGIN

	SELECT 
    Q.id,
    Q.leadid,
    Q.quotevalue,
    Q.quotetype,
	DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
    Q.quotename,
    Q.quotediscription,
    Q.quotestatusid,
    -- Q.quotescore,
    Q.quotecategory,
    Q.quotesubcategory,
    L.leadscore,
    Q.companyid,
    L.leadname,
    R.description as leadstatus,
    R1.description as quotecategory,
    Q.advanceonorderreception,
	Q.forrequestofmechanicalmaterial,
	Q.forrequestofelectricalmaterial,
	Q.oncustomerhandover,
    Q.salesrepid,
    E.employeename as salesrep
    
    FROM quotation Q
    LEFT JOIN leads L ON L.id = Q.leadid
    LEFT JOIN reference R ON R.id =  Q.quotestatusid
    LEFT JOIN reference R1 ON R1.id =  Q.quotecategory
    LEFT JOIN employee E ON E.id = Q.salesrepid
    WHERE Q.companyid = p_companyid;

END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_test_elev8r`.`spc_quotation_select`;
;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_quotation_select`(
	IN p_id INT(11)
)
BEGIN
	SELECT 
				Q.id,
                Q.id as quotationid,
				Q.leadid,
                Q.groupcontrolid,
                Q.quotestatusid,
				Q.quotevalue,
				Q.quotetype,
                DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
				Q.quotename,
				Q.quotediscription,
				Q.quotestatusid,
				Q.quotescore,
				Q.quotecategory,
				Q.quotesubcategory,
				Q.companyid,
				Q.completiondays,
                Q.siteaddress,
				L.leadname,
                L.mobileno,
                L.companyname,
                L.email,
                L.sourceid,
                L.stageid,
                L.leadscategory,
                L.leadvalue,
                L.typeoflift,
                L.nooflifts,
                L.contactperson,
                L.leadstatus,
                L.locationid,
                L.salesrepid,
                Q.capacityid,
                Q.modelid,
                Q.driveid,
                Q.machineid,
                Q.controlid,
                Q.operationid,
                Q.speedid,
                Q.typeofdoorid,
				Q.landingdoorid,
				Q.cardoorid,
				Q.lowestfloorid,
				Q.cwtpositionid,
				Q.floorheaightid,
				Q.architectidid,
				Q.leadconsaltantid,
                Q.officialemail,
                Q.gstn,
                Q.panno,
                Q.primarycontactid,
                Q.designation,
                Q.mobileno1,
                Q.includinggst,
				DATE_FORMAT(L.leaddate,'%d/%m/%Y') as leaddate,
				L.phoneno,
				L.leaddescription,
				L.leadscore,
              --  L.salesrep,
				L.cityid,
				L.stateid,
				L.pincode,
				Q.stopsid,
				Q.floormarking,
				Q.allopeningsameside,
				Q.frontopening,
				Q.backopening,
				Q.leftopening,
                Q.leadsourceid,
				Q.rightopening,
				Q.shaftwidth,
				Q.shaftdepth,
                Q.shaftconditionid,
                Q.unitid,
				Q.cardepth,
				Q.carwidth,
				Q.carheight,
				Q.doorwidth,
				Q.doorheight,
				Q.travel,
                Q.remark1,
			    Q.remark1,
			    Q.remark2,
			    Q.remark3,
			    Q.remark4,
			    Q.remark5,
				Q.pitdepth,
				Q.overhead,
				Q.mrwidth,
				Q.mrdepth,
				Q.mrheight,
				Q.mainpowersystemid,
                Q.carpositionindicatorid,
                Q.falseceilingid,
                Q.tractionmediaid,
                Q.auxilarysupplysystemid,
                Q.carpanelid,
                Q.ventilationid,
                Q.flooringid,
				L.companyname,
				L.countryid,
				L.linkedin,
				L.facebook,
				L.youtube,
                R.description as leadstatusdetail,
				R1.description as quotecategorydetail,
                Q.advanceonorderreception,
				Q.forrequestofmechanicalmaterial,
				Q.forrequestofelectricalmaterial,
				Q.oncustomerhandover,
                Q.salesrepid,
                E.employeename as salesrep
                 
    FROM quotation Q
    
    LEFT JOIN leads L ON L.id = Q.leadid
	LEFT JOIN reference R ON R.id =  Q.quotestatusid
    LEFT JOIN reference R1 ON R1.id =  Q.quotecategory
    LEFT JOIN employee E ON E.id = Q.salesrepid
    WHERE Q.id = p_id;
END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_test_elev8r`.`spc_quotepdf`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_quotepdf`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
           Q.id as negno,
		   Q.quotename,
		   Q.siteaddress,
           DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
           Q.contactperson,
           Q.snehasalescontactid,
           Q.snehasalescontactno,
           Q.designation,
		   REF.description as modelcode,
           REF1.description as lifttype,
           REF2.description as capacity,
           REF3.description as speed,
           Q.stopsid,
           REF4.description as controller,
           GROUP_CONCAT(REF5.description,' mts') as drive,
           ifnull(GROUP_CONCAT(Q.shaftwidth,' mm (W) ',' X ',Q.shaftdepth,' mm (D) (',IFNULL(REF7.description,'-'),')'),'-') as shaftsize,
           ifnull(GROUP_CONCAT(Q.carwidth,' mm (W) ',' X ',Q.cardepth,' mm (D) ',' X ',Q.carheight,' mm (H) (Approximately)'),'-') as carsize,
           ifnull(GROUP_CONCAT(Q.doorwidth, ' mm Open',' X ',Q.doorheight,' mm Height'),'-') as clearopening,
           ifnull(CONCAT(Q.pitdepth,' mm'),'-')as pitdepth,
           ifnull(CONCAT(Q.overhead,' mm'),'-')as overhead,
           ifnull(CONCAT(REF6.description,' (Manual)'),'-') as cardoor,
           GROUP_CONCAT(REGEXP_SUBSTR(REF2.description, '[0-9]+'),' P',' - ',left(Q.stopsid,1),' S',' - ',REF.description,' Unit:',Q.nooflifts) as specificationheader,
           IFNULL(CONCAT(ROUND(Q.advanceonorderreception,0),'%'),'-') as advanceonorderreception,
		   IFNULL(CONCAT(ROUND(Q.forrequestofmechanicalmaterial,0),'%'),'-') as forrequestofmechanicalmaterial,
		   IFNULL(CONCAT(ROUND(Q.forrequestofelectricalmaterial,0),'%'),'-') as forrequestofelectricalmaterial,
		   IFNULL(CONCAT(ROUND(Q.oncustomerhandover,0),'%'),'-') as oncustomerhandover,
           IFNULL(E.employeename,'-') as employeename,
           IFNULL(E.emailid, '-') as emailid,
           IFNULL(E.mobileno, '-') as mobileno,
           IFNULL(E.designation, '-') as designation,
           REF8.description as doortype           
	FROM quotation Q
    LEFT JOIN city C ON C.id = Q.cityid
    LEFT JOIN reference REF ON REF.id = Q.modelid
    LEFT JOIN reference REF1 ON REF1.id = Q.typeoflift
    LEFT JOIN reference REF2 ON REF2.id = Q.capacityid
    LEFT JOIN reference REF3 ON REF3.id = Q.speedid
    LEFT JOIN reference REF4 ON REF4.id = Q.controlid
    LEFT JOIN reference REF5 ON REF5.id = Q.driveid
    LEFT JOIN reference REF6 ON REF6.id = Q.cardoorid
	LEFT JOIN reference REF7 ON REF7.id = Q.shaftconditionid
    LEFT JOIN reference REF8 ON REF8.id = Q.typeofdoorid
    LEFT JOIN employee E ON E.id = Q.salesrepid
    WHERE Q.id = p_id;
    
    select ifnull(leadname,'-')as leadname,
		   ifnull(address,'-')as address,
           ifnull(shaftwidth,'-')as shaftwidth,
           ifnull(carwidth,'-')as carwidth,
           ifnull(pitdepth,'-')as pitdepth,
           ifnull(overhead,'-')as overhead,
           ifnull(city,'-')as city,
           ifnull(contactno,'-')as contactno,
           ifnull(quotedate,'-')as quotedate,
           ifnull(quotevalue,'-')as quotevalue,
           ifnull(model,'-')as model,
           ifnull(capacity,'-')as capacity,
           ifnull(speed,'-')as speed,
           ifnull(`stop`,'-')as `stop`,
           ifnull(control,'-')as control,
           ifnull(drive,'-')as drive,
           ifnull(allopeningsameside,'-')as allopeningsameside,
           ifnull(cardoor,'-')as cardoor,
           ifnull(specificationheader,'-') as specificationheader,
           ifnull(landingdoor,'-')as landingdoor,
           ifnull(floormarking,'-')as floormarking,
		   ifnull(machine,'-')as machine,
           ifnull(cityuppercase,'-')as cityuppercase,
           ifnull(month,'-')as month,
           year,
           version,
		   CONCAT('SELLP/',cityuppercase,'/',month,'/',year,'/',quoteid,'/',version) as negno,
           modeldetails,
           ifnull(travel,'-')as travel,
           result,
           unit,
           ifnull(carpanel,'-')as carpanel,
           ifnull(ventilation,'-')as ventilation,
           ifnull(tractionmedia,'-')as tractionmedia,
           ifnull(mainpowersystem,'-')as mainpowersystem,
           ifnull(carpositionindicator,'-')as carpositionindicator,
           ifnull(falseceiling,'-')as falseceiling,
           ifnull(auxilarysupplysystem,'-')as auxilarysupplysystem,
           ifnull(doortype,'-') as doortype,
           ifnull(flooring,'-')as flooring,
           ifnull(operation,'-')as operation,
           IFNULL(ROUND(advanceonorderreception,0),'-') as advanceonorderreception,
		   IFNULL(ROUND(forrequestofmechanicalmaterial,0),'-') as forrequestofmechanicalmaterial,
		   IFNULL(ROUND(forrequestofelectricalmaterial,0),'-') as forrequestofelectricalmaterial,
		   IFNULL(ROUND(oncustomerhandover,0),'-') as oncustomerhandover,
           IFNULL(salesrepname,'-') as salesrepname,
           IFNULL(mobileno,'-') as mobileno,
		   IFNULL(designation,'-') as designation,
           IFNULL(emailid,'-') as emailid,
           isgst,
           isgsttogle
	from(
	select 
			 -- GROUP_CONCAT('ELE/',Q.id) as negno,
			
			 L.leadname,
			 L.address,
			 Q.modelid,
			 Q.capacityid,
			 Q.speedid,
			 Q.stopsid,
			 Q.controlid,
			 Q.driveid,
			 Q.shaftwidth,
			 Q.carwidth,
			 Q.allopeningsameside as allopeningsamesideid,
			 Q.pitdepth,
			 Q.overhead,
			 Q.cardoorid,
             GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF5.description,' Unit:',Q.nooflifts) as specificationheader,
			 Q.landingdoorid,
             GROUP_CONCAT(Q.travel,'mts') as travel,
             --  -6P - 7S(C+G+5) - REF.description - S.S Car Panel - cwtposition 
			GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' ', '-',' ',Q.stopsid,'S(G','+',(Q.stopsid-1),')',' ','-',' ',REF.description,' ','-',' ',ifnull(REF12.description,'-'),' ',REF8.description) as modeldetails,
			GROUP_CONCAT(Q.nooflifts,' ','Units') as unit,
            REGEXP_SUBSTR(REF1.description, '[0-9]+') AS result,
            Q.floormarking as floormarkingid,
			Q.machineid,
			GROUP_CONCAT(C.cityname,' ','-',' ',L.pincode) as city,
			L.mobileno as contactno,
            DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
            Q.quotevalue,
            Q.cwtpositionid,
            REF.description as model,
            REF1.description as capacity,
            REF2.description as speed,
            GROUP_CONCAT(Q.stopsid, ' Landings /', Q.stopsid, ' Openings (All Openings are same Side)') as stop,
            REF4.description as control,
            REF5.description as drive,
            REF6.description as allopeningsameside,
            REF7.description as cardoor,
            REF8.description as landingdoor,
            REF9.description as floormarking,
            REF10.description as machine,
			REF11.description as cwtposition,
			REF12.description as carpanel,
            REF13.description as ventilation,
            REF14.description as tractionmedia,
            REF15.description as mainpowersystem,
            REF16.description as carpositionindicator,
            REF17.description as falseceiling,
            REF18.description as auxilarysupplysystem,
            REF21.description as doortype,
			REF19.description as flooring,
            REF20.description as operation,
            CONCAT(Q.advanceonorderreception,'%') as advanceonorderreception,
			CONCAT(Q.forrequestofmechanicalmaterial,'%') as forrequestofmechanicalmaterial,
		    CONCAT(Q.forrequestofelectricalmaterial,'%') as forrequestofelectricalmaterial,
		    CONCAT(Q.oncustomerhandover,'%') as oncustomerhandover,
            E.employeename as salesrepname,
            E.mobileno,
            E.designation,
            E.emailid,
			UPPER(SUBSTRING( CO.city, 1, 3)) as cityuppercase,
			UPPER(MONTHNAME(Q.quotedate)) AS month,
            YEAR(Q.quotedate) AS year,
            Q.leadid,
            Q.id as quoteid,
            ( select
			ROW_NUMBER() OVER (ORDER BY id)  Sequence_no
			-- id as quoteid
			from quotation 
			where leadid = Q.leadid order by id DESC limit 1)as version,
			IF(Q.includinggst=1,"inclusive","exclusive") as isgst,
            IF(Q.includinggst=1,"including","excluding") as isgsttogle
            
            
		
		from quotation Q
		LEFT JOIN leads L ON L.id = Q.leadid
		LEFT JOIN employee E ON E.id = L.salesrepid
		LEFT JOIN city C ON L.cityid = C.id
		LEFT JOIN company CO ON CO.id = Q.companyid
		LEFT JOIN reference REF ON REF.id = Q.modelid
		LEFT JOIN reference REF1 ON REF1.id = Q.capacityid
		LEFT JOIN reference REF2 ON REF2.id = Q.speedid
		LEFT JOIN reference REF3 ON REF3.id = Q.stopsid
		LEFT JOIN reference REF4 ON REF4.id = Q.controlid
		LEFT JOIN reference REF5 ON REF5.id = Q.driveid
		LEFT JOIN reference REF6 ON REF6.id = Q.allopeningsameside
        LEFT JOIN reference REF7 ON REF7.id = Q.cardoorid
		LEFT JOIN reference REF8 ON REF8.id = Q.landingdoorid
		LEFT JOIN reference REF9 ON REF9.id = Q.floormarking
        LEFT JOIN reference REF10 ON REF10.id = Q.machineid
        LEFT JOIN reference REF11 ON REF11.id = Q.cwtpositionid
        LEFT JOIN reference REF12 ON REF12.id = Q.carpanelid
		LEFT JOIN reference REF13 ON REF13.id = Q.ventilationid
        LEFT JOIN reference REF14 ON REF14.id = Q.tractionmediaid
		LEFT JOIN reference REF15 ON REF15.id = Q.mainpowersystemid
		LEFT JOIN reference REF16 ON REF16.id = Q.carpositionindicatorid
        LEFT JOIN reference REF17 ON REF17.id = Q.falseceilingid
        LEFT JOIN reference REF18 ON REF18.id = Q.auxilarysupplysystemid
		LEFT JOIN reference REF19 ON REF19.id = Q.flooringid
        LEFT JOIN reference REF20 ON REF20.id = Q.operationid
        LEFT JOIN reference REF21 ON REF21.id = Q.typeofdoorid
		where Q.id=p_id)temp;
        
		SELECT
           -- IFNULL((UR.username),'-') as salemanager,
           ifnull(UR.username,'-') assalemanager,
           CONCAT('Contact No.','-','  ',UR.mobile) as salecontactno
			FROM user1 UR
			INNER JOIN userlicense UL ON UR.id = UL.userid
			INNER JOIN `role` R ON UL.roleid = R.id
        WHERE R.description = 'Sales Manager';
        
        SET @doortype = null;
		SELECT REF.description INTO @doortype 
        FROM reference REF
        LEFT JOIN quotation Q ON Q.typeofdoorid = REF.id
        WHERE Q.id = p_id AND REF.typecode = 'DrTyp';
        
        IF(@doortype = 'Auto') THEN
			SELECT 'Manual Rescue Operation,
					Auto Fan Cut Off,
					Rear side SS Hand rail,
					Automatic leveling with Ground Floor on Power Restoration,
					Floor Position and Direction indicator in car and Landings,
					Terminal approach slow down for safety,
					Final Limit protection,
					Emergency alarm,
					Door Open,
					V3F drive for door operation,
					Door Time Protection, 
					Floor announcement, 
					Parking floor,
					Emergency electric break releaser,
					Full curtain infrared door safety' as stdfeatures,
                    'Automatic Rescue Device - ARD
					OSG ( Over Speed Governor)' as safetyfeatures;
        ELSEIF(@doortype = 'Manual') THEN
			SELECT 'Manual Rescue Operation,
					Auto Fan Cut Off,
					Rear side SS Hand rail,
					Automatic leveling with Ground Floor on Power Restoration,
					Floor Position and Direction indicator in car and Landings,
					Terminal approach slow down for safety,
					Final Limit protection,
					Emergency alarm' as stdfeatures,
                    'Automatic Rescue Device - ARD
					OSG ( Over Speed Governor)' as safetyfeatures;
        END IF;
	
END$$

DELIMITER ;
;


DROP procedure IF EXISTS `db_test_elev8r`.`spc_leads_search`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_leads_search`(
IN p_companyid INT(11)
)
BEGIN

	SELECT
		L.id,
		L.leadname,
		L.mobileno,
		L.email,
		L.sourceid,
		L.stageid,
		L.companyid,
        L.leadscategory as leadscategoryid,
        L.leadvalue,
        L.typeoflift,
        L.nooflifts,
        L.contactperson,
        L.leadstatus as leadstatusid,
        L.locationid,
        L.salesrepid,
        E.employeename as salesrep,
		L.capacityid,
        L.modelid,
        L.driveid,
        L.machineid,
        L.controlid,
        L.operationid,
        L.speedid,
        L.typeofdoorid,
        L.landingdoorid,
        L.cardoorid,
        L.lowestfloorid,
        L.cwtpositionid,
        L.floorheaightid,
        L.architectidid,
        L.leadconsaltantid,
        DATE_FORMAT(L.leaddate,'%d/%m/%Y') as leaddate,
        L.phoneno,
        L.leaddescription,
        L.cityid,
        L.stateid,
        L.countryid,
		L.linkedin,
        L.facebook,
        L.youtube,
        L.stopsid,
        L.floormarking,
        L.allopeningsameside,
        L.frontopening,
        L.backopening,
		L.leftopening,
        L.rightopening,
        L.shaftwidth,
        L.shaftdepth,
        L.cardepth,
        L.carwidth,
        L.carheight,
        L.doorwidth,
        L.doorheight,
		L.travel,
        L.pitdepth,
        L.overhead,
        L.mrwidth,
        L.mrdepth,
        L.mrheight,
        L.leadtype as leadtypeid,
        L.unitid,
        L.shaftconditionid,
        REF.`description` as sourcename,
	    REF1.`description` as stagename,
		REF2.`description` as leadscategory,
	    REF3.`description` as leadtype,
		REF4.`description` as leadstatus,
        LO.locationname
        
	FROM leads L
	LEFT JOIN location LO ON LO.id = L.locationid
    LEFT JOIN `reference` REF ON REF.id = L.sourceid
	LEFT JOIN `reference` REF1 ON REF1.id = L.stageid
    LEFT JOIN `reference` REF2 ON REF2.id = L.leadscategory
    LEFT JOIN `reference` REF3 ON REF3.id = L.leadtype
	LEFT JOIN `reference` REF4 ON REF4.id = L.leadstatus
    LEFT JOIN employee E ON E.id = L.salesrepid
  
	Where L.companyid = p_companyid
	AND L.isdeleted = 0;
    
    select 
    count(leadstatus) as qualified
    from leads L
    LEFT JOIN `reference` REF1 ON REF1.id = L.leadstatus 
    where REF1.typecode = "LeadStatus"
    AND REF1.`description`= "Qualified"
    AND L.isdeleted = 0;
    
    select 
    count(leadstatus) as unqualified
    from leads L
    LEFT JOIN `reference` REF1 ON REF1.id = L.leadstatus 
    where REF1.typecode = "LeadStatus"
    AND REF1.`description`= "Unqualified"
    AND L.isdeleted = 0;
    
    select 
    count(leadstatus) as totalleads
    from leads L
    LEFT JOIN `reference` REF1 ON REF1.id = L.leadstatus 
    where REF1.typecode = "LeadStatus"
    AND L.isdeleted = 0;
END$$

DELIMITER ;
;

DROP procedure IF EXISTS `db_test_elev8r`.`spc_leads_select`;

DELIMITER $$
CREATE PROCEDURE db_test_elev8r.`spc_leads_select`(
IN p_id INT(11)
)
BEGIN

		SELECT 
		L.id,
        L.id as leadid,
        L.scoutername,
        L.`reference`,
        L.address,
        L.preferedlead,
        L.mobilep,
        L.gstn,
        L.panno,
        L.id as leadid,
		L.leadname,
		L.mobileno,
		L.email,
		L.sourceid,
		L.stageid,
		L.companyid,
		L.leadscategory,
        L.leadvalue,
        L.typeoflift,
        L.nooflifts,
        L.contactperson,
        L.leadstatus,
        L.locationid,
        L.salesrepid,
        E.employeename as salesrep,
        L.capacityid,
        L.modelid,
        L.driveid,
        L.machineid,
        L.controlid,
        L.operationid,
        L.speedid,
        L.typeofdoorid,
        L.landingdoorid,
        L.cardoorid,
        L.lowestfloorid,
        L.cwtpositionid,
        L.floorheaightid,
        L.carpanelid,
        L.ventilationid,
        L.tractionmediaid,
        L.mainpowersystemid,
        L.carpositionindicatorid,
        L.falseceilingid,
		L.auxilarysupplysystemid,
        L.flooringid,
        L.architectidid,
        L.leadconsaltantid,
        DATE_FORMAT(L.leaddate,'%d/%m/%Y') as leaddate,
        L.phoneno,
        L.leaddescription,
        L.leadscore,
        L.leadsubcategoryid,
        L.cityid,
        L.stateid,
        L.pincode,
		L.stopsid,
        L.floormarking,
        L.allopeningsameside,
        L.frontopening,
        L.backopening,
		L.leftopening,
        L.rightopening,
        L.shaftwidth,
        L.shaftdepth,
        L.cardepth,
        L.carwidth,
        L.carheight,
        L.doorwidth,
        L.doorheight,
		L.travel,
        L.pitdepth,
        L.overhead,
        L.mrwidth,
        L.mrdepth,
        L.mrheight,
		L.leadtype,
        L.companyname,
        L.countryid,
		L.linkedin,
        L.facebook,
        L.youtube,
        L.winprobability,
        L.groupcontrolid,
        L.lowestfloorid,
        L.unitid,
        L.shaftconditionid

		FROM leads L
        LEFT JOIN employee E ON E.id = L.salesrepid
		WHERE L.id = p_id;
        
        select 
			id,
			leadid,
			cityid,
			stateid,
			countryid,
			address,
			pincode
		from leadaddress
		where leadid=p_id;

END$$

DELIMITER ;
;



DROP procedure IF EXISTS `db_elev8r`.`spc_quotepdf`;

DELIMITER $$
CREATE PROCEDURE db_elev8r.`spc_quotepdf`(
	IN p_id INT(11)
)
BEGIN

	SELECT 
           Q.id as negno,
		   Q.quotename,
		   Q.siteaddress,
           DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
           Q.contactperson,
           Q.snehasalescontactid,
           Q.snehasalescontactno,
           Q.designation,
		   REF.description as modelcode,
           REF1.description as lifttype,
           REF2.description as capacity,
           REF3.description as speed,
           Q.stopsid,
           REF4.description as controller,
           GROUP_CONCAT(REF5.description,' mts') as drive,
           ifnull(GROUP_CONCAT(Q.shaftwidth,' mm (W) ',' X ',Q.shaftdepth,' mm (D) (',IFNULL(REF7.description,'-'),')'),'-') as shaftsize,
           ifnull(GROUP_CONCAT(Q.carwidth,' mm (W) ',' X ',Q.cardepth,' mm (D) ',' X ',Q.carheight,' mm (H) (Approximately)'),'-') as carsize,
           ifnull(GROUP_CONCAT(Q.doorwidth, ' mm Open',' X ',Q.doorheight,' mm Height'),'-') as clearopening,
           ifnull(CONCAT(Q.pitdepth,' mm'),'-')as pitdepth,
           ifnull(CONCAT(Q.overhead,' mm'),'-')as overhead,
           ifnull(CONCAT(REF6.description,' (Manual)'),'-') as cardoor,
           GROUP_CONCAT(REGEXP_SUBSTR(REF2.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF.description,' Unit:',Q.nooflifts) as specificationheader,
           IFNULL(CONCAT(Q.advanceonorderreception,'%'),'-') as advanceonorderreception,
		   IFNULL(CONCAT(Q.forrequestofmechanicalmaterial,'%'),'-') as forrequestofmechanicalmaterial,
		   IFNULL(CONCAT(Q.forrequestofelectricalmaterial,'%'),'-') as forrequestofelectricalmaterial,
		   IFNULL(CONCAT(Q.oncustomerhandover,'%'),'-') as oncustomerhandover,
           IFNULL(E.employeename,'-') as employeename,
           IFNULL(E.emailid, '-') as emailid,
           IFNULL(E.mobileno, '-') as mobileno,
           IFNULL(E.designation, '-') as designation,
           REF8.description as doortype           
	FROM quotation Q
    LEFT JOIN city C ON C.id = Q.cityid
    LEFT JOIN reference REF ON REF.id = Q.modelid
    LEFT JOIN reference REF1 ON REF1.id = Q.typeoflift
    LEFT JOIN reference REF2 ON REF2.id = Q.capacityid
    LEFT JOIN reference REF3 ON REF3.id = Q.speedid
    LEFT JOIN reference REF4 ON REF4.id = Q.controlid
    LEFT JOIN reference REF5 ON REF5.id = Q.driveid
    LEFT JOIN reference REF6 ON REF6.id = Q.cardoorid
	LEFT JOIN reference REF7 ON REF7.id = Q.shaftconditionid
    LEFT JOIN reference REF8 ON REF8.id = Q.typeofdoorid
    LEFT JOIN employee E ON E.id = Q.salesrepid
    WHERE Q.id = p_id;
    
    select ifnull(leadname,'-')as leadname,
		   ifnull(address,'-')as address,
           ifnull(shaftwidth,'-')as shaftwidth,
           ifnull(carwidth,'-')as carwidth,
           ifnull(pitdepth,'-')as pitdepth,
           ifnull(overhead,'-')as overhead,
           ifnull(city,'-')as city,
           ifnull(contactno,'-')as contactno,
           ifnull(quotedate,'-')as quotedate,
           ifnull(quotevalue,'-')as quotevalue,
           ifnull(model,'-')as model,
           ifnull(capacity,'-')as capacity,
           ifnull(speed,'-')as speed,
           ifnull(`stop`,'-')as `stop`,
           ifnull(control,'-')as control,
           ifnull(drive,'-')as drive,
           ifnull(allopeningsameside,'-')as allopeningsameside,
           ifnull(cardoor,'-')as cardoor,
           ifnull(specificationheader,'-') as specificationheader,
           ifnull(landingdoor,'-')as landingdoor,
           ifnull(floormarking,'-')as floormarking,
		   ifnull(machine,'-')as machine,
           ifnull(cityuppercase,'-')as cityuppercase,
           ifnull(month,'-')as month,
           year,
           version,
		   CONCAT('SELLP/',cityuppercase,'/',month,'/',year,'/',quoteid,'/',version) as negno,
           modeldetails,
           ifnull(travel,'-')as travel,
           result,
           unit,
           ifnull(carpanel,'-')as carpanel,
           ifnull(ventilation,'-')as ventilation,
           ifnull(tractionmedia,'-')as tractionmedia,
           ifnull(mainpowersystem,'-')as mainpowersystem,
           ifnull(carpositionindicator,'-')as carpositionindicator,
           ifnull(falseceiling,'-')as falseceiling,
           ifnull(auxilarysupplysystem,'-')as auxilarysupplysystem,
           ifnull(doortype,'-') as doortype,
           ifnull(flooring,'-')as flooring,
           ifnull(operation,'-')as operation,
           IFNULL(advanceonorderreception,'-') as advanceonorderreception,
		   IFNULL(forrequestofmechanicalmaterial,'-') as forrequestofmechanicalmaterial,
		   IFNULL(forrequestofelectricalmaterial,'-') as forrequestofelectricalmaterial,
		   IFNULL(oncustomerhandover,'-') as oncustomerhandover,
           IFNULL(salesrepname,'-') as salesrepname,
           IFNULL(mobileno,'-') as mobileno,
		   IFNULL(designation,'-') as designation,
           IFNULL(emailid,'-') as emailid,
           isgst,
           isgsttogle
	from(
	select 
			 -- GROUP_CONCAT('ELE/',Q.id) as negno,
			
			 L.leadname,
			 L.address,
			 Q.modelid,
			 Q.capacityid,
			 Q.speedid,
			 Q.stopsid,
			 Q.controlid,
			 Q.driveid,
			 Q.shaftwidth,
			 Q.carwidth,
			 Q.allopeningsameside as allopeningsamesideid,
			 Q.pitdepth,
			 Q.overhead,
			 Q.cardoorid,
             GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' - ',left(Q.stopsid,1),'S',' - ',REF5.description,' Unit:',Q.nooflifts) as specificationheader,
			 Q.landingdoorid,
             GROUP_CONCAT(Q.travel,'mts') as travel,
             --  -6P - 7S(C+G+5) - REF.description - S.S Car Panel - cwtposition 
			GROUP_CONCAT(REGEXP_SUBSTR(REF1.description, '[0-9]+'),'P',' ', '-',' ',Q.stopsid,'S(G','+',(Q.stopsid-1),')',' ','-',' ',REF.description,' ','-',' ',ifnull(REF12.description,'-'),' ',REF8.description) as modeldetails,
			GROUP_CONCAT(Q.nooflifts,' ','Units') as unit,
            REGEXP_SUBSTR(REF1.description, '[0-9]+') AS result,
            Q.floormarking as floormarkingid,
			Q.machineid,
			GROUP_CONCAT(C.cityname,' ','-',' ',L.pincode) as city,
			L.mobileno as contactno,
            DATE_FORMAT(Q.quotedate,'%d/%m/%Y') as quotedate,
            Q.quotevalue,
            Q.cwtpositionid,
            REF.description as model,
            REF1.description as capacity,
            REF2.description as speed,
            GROUP_CONCAT(Q.stopsid, ' Landings /', Q.stopsid, ' Openings (All Openings are same Side)') as stop,
            REF4.description as control,
            REF5.description as drive,
            REF6.description as allopeningsameside,
            REF7.description as cardoor,
            REF8.description as landingdoor,
            REF9.description as floormarking,
            REF10.description as machine,
			REF11.description as cwtposition,
			REF12.description as carpanel,
            REF13.description as ventilation,
            REF14.description as tractionmedia,
            REF15.description as mainpowersystem,
            REF16.description as carpositionindicator,
            REF17.description as falseceiling,
            REF18.description as auxilarysupplysystem,
            REF21.description as doortype,
			REF19.description as flooring,
            REF20.description as operation,
            CONCAT(Q.advanceonorderreception,'%') as advanceonorderreception,
			CONCAT(Q.forrequestofmechanicalmaterial,'%') as forrequestofmechanicalmaterial,
		    CONCAT(Q.forrequestofelectricalmaterial,'%') as forrequestofelectricalmaterial,
		    CONCAT(Q.oncustomerhandover,'%') as oncustomerhandover,
            E.employeename as salesrepname,
            E.mobileno,
            E.designation,
            E.emailid,
			UPPER(SUBSTRING( CO.city, 1, 3)) as cityuppercase,
			UPPER(MONTHNAME(Q.quotedate)) AS month,
            YEAR(Q.quotedate) AS year,
            Q.leadid,
            Q.id as quoteid,
            ( select
			ROW_NUMBER() OVER (ORDER BY id)  Sequence_no
			-- id as quoteid
			from quotation 
			where leadid = Q.leadid order by id DESC limit 1)as version,
			IF(Q.includinggst=1,"inclusive","exclusive") as isgst,
            IF(Q.includinggst=1,"including","excluding") as isgsttogle
            
            
		
		from quotation Q
		LEFT JOIN leads L ON L.id = Q.leadid
		LEFT JOIN employee E ON E.id = L.salesrepid
		LEFT JOIN city C ON L.cityid = C.id
		LEFT JOIN company CO ON CO.id = Q.companyid
		LEFT JOIN reference REF ON REF.id = Q.modelid
		LEFT JOIN reference REF1 ON REF1.id = Q.capacityid
		LEFT JOIN reference REF2 ON REF2.id = Q.speedid
		LEFT JOIN reference REF3 ON REF3.id = Q.stopsid
		LEFT JOIN reference REF4 ON REF4.id = Q.controlid
		LEFT JOIN reference REF5 ON REF5.id = Q.driveid
		LEFT JOIN reference REF6 ON REF6.id = Q.allopeningsameside
        LEFT JOIN reference REF7 ON REF7.id = Q.cardoorid
		LEFT JOIN reference REF8 ON REF8.id = Q.landingdoorid
		LEFT JOIN reference REF9 ON REF9.id = Q.floormarking
        LEFT JOIN reference REF10 ON REF10.id = Q.machineid
        LEFT JOIN reference REF11 ON REF11.id = Q.cwtpositionid
        LEFT JOIN reference REF12 ON REF12.id = Q.carpanelid
		LEFT JOIN reference REF13 ON REF13.id = Q.ventilationid
        LEFT JOIN reference REF14 ON REF14.id = Q.tractionmediaid
		LEFT JOIN reference REF15 ON REF15.id = Q.mainpowersystemid
		LEFT JOIN reference REF16 ON REF16.id = Q.carpositionindicatorid
        LEFT JOIN reference REF17 ON REF17.id = Q.falseceilingid
        LEFT JOIN reference REF18 ON REF18.id = Q.auxilarysupplysystemid
		LEFT JOIN reference REF19 ON REF19.id = Q.flooringid
        LEFT JOIN reference REF20 ON REF20.id = Q.operationid
        LEFT JOIN reference REF21 ON REF21.id = Q.typeofdoorid
		where Q.id=p_id)temp;
        
		SELECT
           -- IFNULL((UR.username),'-') as salemanager,
           ifnull(UR.username,'-') assalemanager,
           CONCAT('Contact No.','-','  ',UR.mobile) as salecontactno
			FROM user1 UR
			INNER JOIN userlicense UL ON UR.id = UL.userid
			INNER JOIN `role` R ON UL.roleid = R.id
        WHERE R.description = 'Sales Manager';
        
        SET @doortype = null;
		SELECT REF.description INTO @doortype 
        FROM reference REF
        LEFT JOIN quotation Q ON Q.typeofdoorid = REF.id
        WHERE Q.id = p_id AND REF.typecode = 'DrTyp';
        
        IF(@doortype = 'Auto') THEN
			SELECT 'Manual Rescue Operation,
					Auto Fan Cut Off,
					Rear side SS Hand rail,
					Automatic leveling with Ground Floor on Power Restoration,
					Floor Position and Direction indicator in car and Landings,
					Terminal approach slow down for safety,
					Final Limit protection,
					Emergency alarm,
					Door Open,
					V3F drive for door operation,
					Door Time Protection, 
					Floor announcement, 
					Parking floor,
					Emergency electric break releaser,
					Full curtain infrared door safety' as stdfeatures,
                    'Automatic Rescue Device - ARD
					OSG ( Over Speed Governor)' as safetyfeatures;
        ELSEIF(@doortype = 'Manual') THEN
			SELECT 'Manual Rescue Operation,
					Auto Fan Cut Off,
					Rear side SS Hand rail,
					Automatic leveling with Ground Floor on Power Restoration,
					Floor Position and Direction indicator in car and Landings,
					Terminal approach slow down for safety,
					Final Limit protection,
					Emergency alarm' as stdfeatures,
                    'Automatic Rescue Device - ARD
					OSG ( Over Speed Governor)' as safetyfeatures;
        END IF;
	
END$$

DELIMITER ;

DROP PROCEDURE IF EXISTS spc_attributelist_select;

DELIMITER $$
CREATE  PROCEDURE `spc_attributelist_select`(
	IN p_projectid INT(11)
)
BEGIN
	SELECT 
     PA.id,
	 PA.projectid,
	 PA.stageid,
	 PA.activityid,
	 PA.attributetypeids,
	 PA.attributename,
	 PA.attributevalue,
	 PA.attributeid,
	 PA.remark,
     PD.stagename,
     PD.id AS projectdetailid,
     PD1.stagename as parentstagename
     
	FROM project_attributes PA  
    LEFT JOIN  project_detail PD ON PD.stageid=PA.activityid
	LEFT JOIN  project_detail PD1 ON PD1.stageid=PA.stageid AND PD1.`type`= 'Stage'
    
    WHERE PA.projectid =p_projectid
    AND  PD.projectid =p_projectid;
END$$
DELIMITER ;



